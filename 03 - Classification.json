{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b49641fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "plt.rc('font', size=14)\n",
    "plt.rc('axes', labelsize=14, titlesize=14)\n",
    "plt.rc('legend', fontsize=14)\n",
    "plt.rc('xtick', labelsize=10)\n",
    "plt.rc('ytick', labelsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9fb48608",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "\n",
    "IMAGES_PATH = Path() / \"images\" / \"classification\"\n",
    "IMAGES_PATH.mkdir(parents=True, exist_ok=True)\n",
    "\n",
    "def save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):\n",
    "    path = IMAGES_PATH / f\"{fig_id}.{fig_extension}\"\n",
    "    if tight_layout:\n",
    "        plt.tight_layout()\n",
    "    plt.savefig(path, format=fig_extension, dpi=resolution)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c60265fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import fetch_openml\n",
    "\n",
    "mnist = fetch_openml('mnist_784', as_frame=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "14951c18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['data', 'target', 'frame', 'categories', 'feature_names', 'target_names', 'DESCR', 'details', 'url'])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mnist.keys()  # extra code – we only use data and target in this notebook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8e53138a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       ...,\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0],\n",
       "       [0, 0, 0, ..., 0, 0, 0]], dtype=int64)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X, y = mnist.data, mnist.target\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c746a7ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(70000, 784)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "febfbe4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(70000,)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d96e1511",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "784"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "28 * 28"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "045bed31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAcoAAAHKCAYAAACDnAvcAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAKdElEQVR4nO3dOYhfhRqH4WyuQzTaRbEW0rigpBBcQatoKxaiVQQ1TYIIU1gK2mnsxEq0CU6RRjGghQiSQnEBUwyIWGgTkoAWivxvfUFfLueLdybj8/Q/vkOYzDunOrtXq9VqFwDwl/Zs9QMAwHYmlAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASDs2+oHgO3ozz//XLy9ePHiZXyS/6+TJ0+O9r/99ttof+7cucXbt956a3T7xIkTi7fvv//+6Pa111472r/88suLt6+88sro9r+BN0oACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAgu9R8rd+/PHH0f73339fvP38889Htz/77LPR/sKFC4u3p06dGt3+N7vtttsWb1988cXR7Y2NjcXb/fv3j27fcccdo/0DDzww2tO8UQJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBICwe7Varbb6IfhnfPnll6P9ww8/PNpfvHhxtOfKs3fv3tH+nXfeWbxdW1sb3Z645ZZbRvubbrpptL/99ttHe5o3SgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCC71HuYOfPnx/tDx8+PNpvbm6O9v9W03/3ybcNP/nkk9Htq6++erT3DVO2I2+UABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAIR9W/0A/HNuvvnm0f71118f7U+fPr14e9ddd41uHzt2bLSfuPPOO0f7M2fOjPZra2uLt99+++3o9htvvDHaw3bkjRIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQCE3avVarXVD8HOdOnSpcXb/fv3j24fPXp0tH/77bcXb999993R7aeeemq0By4vb5QAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUAhH1b/QDsXDfccMOW3b7xxhu37PbkW5a7du3a9eSTT472e/b4+xcuJ/+jACAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAi7V6vVaqsfAi63X3/9dbQ/cuTI4u2nn346uv3hhx+O9o8++uhoD/w3b5QAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEg+MwW/IXNzc3F27vvvnt0+8CBA6P9Qw89tHh7zz33jG4///zzo/3u3btHe/gneKMEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIPgeJVxmGxsbo/2zzz472l+6dGm0n3j11VdH+6effnrx9uDBg6Pb8He8UQJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQfI8StplvvvlmtD9+/Pji7ZkzZ0a3p5577rnF2/X19dHtW2+9dbRn5/JGCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAILPbMEOc+HChcXb06dPj24/88wzo/3k19Ejjzwyuv3xxx+P9uxc3igBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACL5HCVw211xzzWj/xx9/LN5eddVVo9sfffTR4u2DDz44us325o0SAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgLBvqx8A+G9ff/31aH/q1KnF27Nnz45uT74nOXXo0KHR/v77779MT8JO440SAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABJ/Zgr9w7ty5xds333xzdPuDDz4Y7X/++efRfivt27f8V9LBgwdHt/fs8d7AX/OTAQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkDwPUq2pek3Fd97773R/uTJk4u3P/zww+j2lezee+8d7dfX1xdvH3/88dFt+DveKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkDwmS3+1i+//DLaf/fdd4u3L7zwwuj2999/P9pfyQ4fPrx4+9JLL41uP/HEE6P9nj3+dmf78VMJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQPA9ym3u/Pnzi7dHjx4d3f7qq69G+83NzdH+SnXfffeN9sePHx/tH3vsscXb6667bnQbdiJvlAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAE36P8H3zxxReLt6+99tro9tmzZxdvf/rpp9HtK9n1118/2h87dmzxdn19fXR7bW1ttAcuL2+UABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIPjM1v9gY2NjS7Zb7dChQ6P9kSNHFm/37t07un3ixInR/sCBA6M9sHN4owSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEg7F6tVqutfggA2K68UQJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAIJQAkAQSgAIQgkAQSgBIAglAAShBIAglAAQhBIAglACQBBKAAhCCQBBKAEgCCUABKEEgCCUABCEEgCCUAJAEEoACEIJAEEoASAIJQAEoQSAIJQAEIQSAMJ/AOjSBT0plZDaAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def plot_digit(image_data):\n",
    "    image = image_data.reshape(28, 28)\n",
    "    plt.imshow(image, cmap=\"binary\")\n",
    "    plt.axis(\"off\")\n",
    "\n",
    "some_digit = X[0]\n",
    "plot_digit(some_digit)\n",
    "save_fig(\"some_digit_plot\")  # extra code\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "7870cd52",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_digits(instances, images_per_row=10, **options):\n",
    "    size = 28\n",
    "    images_per_row = min(len(instances), images_per_row)\n",
    "    # This is equivalent to n_rows = ceil(len(instances) / images_per_row):\n",
    "    n_rows = (len(instances) - 1) // images_per_row + 1\n",
    "\n",
    "    # Append empty images to fill the end of the grid, if needed:\n",
    "    n_empty = n_rows * images_per_row - len(instances)\n",
    "    padded_instances = np.concatenate([instances, np.zeros((n_empty, size * size))], axis=0)\n",
    "\n",
    "    # Reshape the array so it's organized as a grid containing 28×28 images:\n",
    "    image_grid = padded_instances.reshape((n_rows, images_per_row, size, size))\n",
    "\n",
    "    # Combine axes 0 and 2 (vertical image grid axis, and vertical image axis),\n",
    "    # and axes 1 and 3 (horizontal axes). We first need to move the axes that we\n",
    "    # want to combine next to each other, using transpose(), and only then we\n",
    "    # can reshape:\n",
    "    big_image = image_grid.transpose(0, 2, 1, 3).reshape(n_rows * size,\n",
    "                                                         images_per_row * size)\n",
    "    # Now that we have a big image, we just need to show it:\n",
    "    plt.imshow(big_image, cmap = mpl.cm.binary, **options)\n",
    "    plt.axis(\"off\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "50294c9b",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'mpl' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[106], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m9\u001b[39m,\u001b[38;5;241m9\u001b[39m))\n\u001b[0;32m      2\u001b[0m example_images \u001b[38;5;241m=\u001b[39m X[:\u001b[38;5;241m100\u001b[39m]\n\u001b[1;32m----> 3\u001b[0m plot_digits(example_images, images_per_row\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m10\u001b[39m)\n\u001b[0;32m      4\u001b[0m save_fig(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmore_digits_plot\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m      5\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow()\n",
      "Cell \u001b[1;32mIn[105], line 21\u001b[0m, in \u001b[0;36mplot_digits\u001b[1;34m(instances, images_per_row, **options)\u001b[0m\n\u001b[0;32m     18\u001b[0m big_image \u001b[38;5;241m=\u001b[39m image_grid\u001b[38;5;241m.\u001b[39mtranspose(\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m2\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m3\u001b[39m)\u001b[38;5;241m.\u001b[39mreshape(n_rows \u001b[38;5;241m*\u001b[39m size,\n\u001b[0;32m     19\u001b[0m                                                      images_per_row \u001b[38;5;241m*\u001b[39m size)\n\u001b[0;32m     20\u001b[0m \u001b[38;5;66;03m# Now that we have a big image, we just need to show it:\u001b[39;00m\n\u001b[1;32m---> 21\u001b[0m plt\u001b[38;5;241m.\u001b[39mimshow(big_image, cmap \u001b[38;5;241m=\u001b[39m mpl\u001b[38;5;241m.\u001b[39mcm\u001b[38;5;241m.\u001b[39mbinary, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39moptions)\n\u001b[0;32m     22\u001b[0m plt\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'mpl' is not defined"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 900x900 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9,9))\n",
    "example_images = X[:100]\n",
    "plot_digits(example_images, images_per_row=10)\n",
    "save_fig(\"more_digits_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bdbc4675",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'5'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "88d186f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAs0AAALICAYAAACEgs0yAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOy9d5NcZ3Ye/nTOOYeZnoxBBgmAEEmQ3KXJ1QZp16VaSbYslV0uu/yB/AHsUpWr1rK0WntX2l1yyWUEASIQg8EAk7unu6dzzvn+/sDvHN4eDCIBTPfgPlUoFMEJ3bfvfd/znvMEmSAIAiRIkCBBggQJEiRIkPBAyA/6BUiQIEGCBAkSJEiQMOqQimYJEiRIkCBBggQJEh4BqWiWIEGCBAkSJEiQIOERkIpmCRIkSJAgQYIECRIeAaloliBBggQJEiRIkCDhEZCKZgkSJEiQIEGCBAkSHgGpaJYgQYIECRIkSJAg4RGQimYJEiRIkCBBggQJEh4BqWiWIEGCBAkSJEiQIOERkIpmCRIkSJAgQYIECRIeAaloliBBggQJEiRIkCDhEZCKZgkSJEiQIEGCBAkSHgGpaJYgQYIECRIkSJAg4RGQimYJEiRIkCBBggQJEh4BqWiWIEGCBAkSJEiQIOERkIpmCRIkSJAgQYIECRIeAeVBvwAJzx7dbpf/VCoVdLtdNBoNNJtNKJVKGI1GKJVKGAwGGAwGKBQKqNVqyOXSGUqCBAkS9qLT6aBQKKDdbqNer6Ner0Mmk/G66XA4YLfbIZfLoVQqIZPJDvolS5Dw0qHVaiGVSqHVavG/abVaeL1eaLXaZ/I7pKL5kEEQBJTLZeTzeeTzeVy/fh25XA4bGxvY3t6GyWTCyZMnYbPZcOzYMRw9ehQGgwEej+eZ3VQSJEiQcJhQKBTwhz/8AYlEAnfu3MGdO3egVqvhdDqh1+vxgx/8AO+99x50Oh3MZjNUKtVBv2QJEl46pNNp/OIXv8DOzg6Ae/XQ1NQU/uZv/gaTk5PP5HcciqJZEAT+s/ffAUAul0Mul0MQBAwGgwd+vUwmg1wu57/HDfSems0mSqUScrkcIpEI0uk07ty5g5WVFdhsNmg0GrhcLthsNvj9fgwGAzidzoN++SMJukf6/T4GgwFkMhkUCgVkMtlL0U2i54X+FkMul0OhUADAS3EtJOwP8VoqXnMP0z3RbreRSCQQiURw584dXLt2DRqNBj6fD2azGSdPnkSr1YJCobjvOTmMeNBeKwgC+v3+U/9cWldpzz4MoOeD1lCFQnFo3tuogK5vvV5HOBzG+vo6rz9yuXyo8/xdMfJFMz2MvV4P/X5/3wWpXq8jEomgVqthMBhgMBig2+2iXq+j3+9jfn4ec3NzqFaruHPnDkqlEtLpNHK5HIBvi+rJyUlMTEzAbDZjYWEBJpPphb7X7wKiYrRaLXz11Vf46quvUC6Xsbm5iUqlgnQ6jcFggGazic3NTSQSCZRKJayvryMUCuGv/uqvYDAYDvptjBTa7TZyuRyazSZWV1extrYGu92ON954gztMOp3uoF/mc0O1WsXGxgYqlQoikQh2dnZ4A5DL5Th9+jROnToFnU4Hh8MBtVp90C9ZwnNGv9/ndbjX62EwGKBQKKBQKKDX66HdbgMAgsEggsHg2Bc/rVYL7XYb2WwWa2tr2NzcRCaTAXDvWpRKJXQ6HeRyOeTzefR6PVgslkP9LDSbTTSbzaFCsFwuo1wuo1gsYnl5GeVyGcCTHaZpjK7X63H06FEsLi6ObYFJ16VSqaBSqaBcLmN1dRX1eh1nzpzB6dOnx/J9jSIEQcDW1ha2t7cRDoexsbGB3d1deDweuFwumM1mKJXPrtQdi6JZEAR0u11ekPcin8/jxo0byGQy6PV66HQ6aLVayGaz6PV6+MEPfgC3241kMomPP/4YsVgMKysrWF1dhSAIUKlUUCqVeP3113HhwgVMTEzA7/ePVdHc6/VQKBRQqVRw+fJl/OIXv0C73Uaz2Rw6bDQaDWxtbUEmk2FzcxM6nQ5nzpzBe++9h4mJiQN+F6OFTqeDZDKJYrGI3//+9/jNb36DmZkZuFwu7qQd5qK5Vqvh1q1biMfj+Pzzz/H5558PdUv+9m//FmazGXa7HSaT6VAXChLuod/vo9PpoN/vo91uo9frIRqNYmtrC51OB9VqFYIg4LXXXoPH42F+77h2ndvtNsrlMrLZLDY2NrCysoJmswng3ppbLpfRbDaZDkf/fpjRbDZRKBQwGAz4EBWPxxGLxRAOh/G///f/RjweB/BkRbPVasWpU6fgdDohCALm5ub43hmn+4dqFjpU7e7uIh6P4//9v/+HdDoNuVyOkydPSkXzM8JgMMD29jY+/vhjJBIJbG1tIZ/Pw+FwwGazwWw280T0WeBAimbqUojHerQI06Lc6XSGuhl0Ytuv01wsFrG9vY1isYhut4t+v49ut4tSqQRBEJBOp5mmkEqlkMlkUKvV0Ov1eMSsVquh1WphMBig1WrH5obudrvodDool8vY3t5GPp9nIjxdi36/z++TFh+ZTIbBYIBWq4VWq8XiFpVKxXy8571Q0e8n6sNgMIBSqYRer3+mN/nTot/vo9FooFqtotfrDV2b/eg9hwUkGs1kMojH44jH40PPFh009z7DEg4XaO2g9aXb7aJWq6HRaKDX66Fer6Pb7SIWiyEej7PgWBAEeL1eeDwe6PV6uN1uaDSag347TwVaN1UqFfR6PYxGI69bwDA1cD8K07ij1+uh1+vxZ9/tdpFOp3lySWt3IpHgP41GA51OB8CT7SGtVgvFYhGCIDAVRq/Xw+VyQavVjlXx3O/30ev1kE6ncffuXaTTaRQKBTQaDd6bAQztyRKeDJ1OB8ViEc1mE/F4HIlEArlcju89jUYDi8UCo9E4/kVzv99nVwcqlhqNBnZ3d1Gv1/mh7PV6aLVa6PV6CIfD2N7exmAw2PfnVatV/nmCIECpVEKn00GpVOLSpUtIpVIoFAq4cuUKcrkcF0FarRYejwdGoxHT09OYm5uDw+EYC1GcIAgolUrIZrPY2dnBL37xC0QiEcRiMTQaDb62AKBUKqFSqYb42nR9K5UK4vE4zGYznE4nHA7HEF/1eaHVaiEWi6Fer6PdbqPdbsNkMo0MNYY6zalUCjKZDMFgED6fb2wLgMeBIAiIx+NYX19HNBrFRx99hJ2dnfvGrXv/lnD40Gg0UKvVkM1mceXKFWSzWV6b6VBFh+52u82Fo1wuRyqVQjweRyAQwA9+8AN4PJ6DfjtPBbVaDZPJBJvNhlAohE6ng0gk8sAGzmFDtVpFqVRi2kWhUMDGxga2tra4aAbuNa5KpRLa7TaKxSKAJ18bms0mNjY2oFaroVKpUCwWEQgE8P7778Pr9Q41LUYZg8GAp7yff/45/v7v/54bgUqlEsViEeVyGTqd7pkXdC8TSqUSPv30UySTSXz11Ve4fPkyX3elUgmXy4UjR448U+cM4ACKZuoeN5tN7iz3+33UajVkMhlUq1XE43Hs7u6i2+2i2Wyi2+0yp/RxFyqNRgOHwwGNRoNisYjd3V2Uy2WUSiXUajWo1WpoNBro9XpYLBYYDAZYLJbncjJ5HqANqtls8vgwHA5jc3OTO0AEOqHTqZaKPuoY0QiyWCyy+pu4ZM+zKKLPvVqtotlscqH/XYQkzxL9fh/NZhP1eh2CIECv10Oj0YzNFOJpIAgC6vU6CoUCstksUqkUUqnUvofVcS+YxeKlveLg/dYZeh7E75u+RzxGHtfrQu+ZDtutVouLpmg0ilQqhd3dXe4mJpNJNBoNAPeuDd0jCoUCHo8HTqcTcrmcC+pxvC5kIafRaGAwGGA2mw/1oVkMQRDQ6XRQq9VQKpUQi8WQy+Wwvb2N9fV1njoJgsDrON1D4s/6cT/3Xq+HarUKhUKBZDKJcDgM4Nt9atT3ZAJRM3q9HrLZLNbX1yEIAkwmEwwGAzqdDrrdLlQqFQaDwdi8r1FDp9NBKpVCNBpFMplEJpMZotvq9XpYrVaYTKbx5TTXajXUajWk02l8/PHHSKfT6HQ6zEMuFos8CiyXyxgMBiwAzOfzj10wy2QymM1mnD17Fg6HA1arFRaLBa1WC8FgEK1WC1qtFnq9nm2DtFotjh49iqmpKWi12pHkZ9JmRteo1Wrh6tWruHbtGtLpNHZ3d4dGY2LodDpYLBYWOer1eiwtLWFlZQX5fB7/8i//gqtXr+LEiRM4fvw4rFbrc+/4Uic3n8+jUqmgWq3C5/Ph2LFjz+13PgloES+VSiiXy6hUKqjX64ees0iHqEqlgk6nMzSxOCzodrsoFotot9vIZDJIp9Not9vI5/NotVp8WCLI5XLMzMxgamqKqVxyuRylUgmVSgU6nQ7BYBB6vR5ms3kkJiVPAqLkVKtVhMNhVKtV7OzsIBaLoVwuY2NjA9VqlWlyg8EAKpWKRTYKhWJIfJ3JZLC6uoper4dUKgWDwQCdTge9Xn/Qb/WJQAWNRqOB2WyG2Wzmz35UDvfPC4IgIBwO4+rVq8jlcrhx4wYLHkul0tDXPUhv9LS/N51OA7g3jdzd3YVOp2Pnp3EENWDogFGr1SCTyWA0Gg/6pY0tOp0OstksEokE14sqlQoOhwMmkwkzMzM4evQoTCbTeHaa6WbJZDJYW1vDP/3TP2F9fZ3H8ns7POIC+Um4YnSqNZvNePXVVxEKhaBWq7kIpp9jNBphNBqZq6ZSqZiaMKrdInIFaTabSKfTqFQquHLlCn7zm9+g0Wgwn2c/azBadPx+P9588004HA7U63XcuXMHuVwO//qv/wqFQoHvfe97qNVqCAaDCAQCz71oTqfTSCQSKBQKfGh6lvYwTwuaiFDRTMURFQWHdTQrCAJarRbK5TJPLA5jcdDpdFjbcPv2bXbV2draQqVSQS6XQy6X489ZqVTi3Xffxfe//31otVpYLBYolUrm89psNrz22mtwOp28GY7iGvIgkJgtnU7j888/RzKZxO3bt7GyssJNDbH9oFqthtVq5bVVpVIxTaPb7SKfz7NgLp1Ow2q1wuFwjF3RTO4fGo0GJpPppeo0DwYDRCIRfPbZZ8jlcrh9+zbK5TLfA8/z92azWeRyOfT7fSQSCVgsFmg0GthstrF6rgg0Fabpar1eh1KpPHTNiBeJbreLbDaLZDKJcrmMfr8PnU4Ht9sNm82G6elpLC4uMi31WeGFdppJUEGtchpj7NcZfdjPoBE5jUtplEjCPrlcDpVKBbvdzgruvSlNer2eBWdarXbkU/EEQUCxWEQul0O1WsXW1hbK5TKPSFut1kNFWb1eb+jraCMwGo1ciNNpmMQ+z/uBpm5fNpsdcvk46IKURmvNZhO5XA7ZbBbtdhtarRZarRY6nY758ocFtKh3Oh0unvL5PNN86BnSarVwOp0wmUyYnJyE0WiETqcb2edmL8guq1wuIxwOo1gsIhKJIJFIoFaroVgs8jRBq9Vyl10mk6FcLiMSifBzI5fLkU6nmdubTCbR7XZhMpng8/kO+q0+EFT00HSv3W4zDSeXy/EYvlwus1MGCb7oPjCbzZidneXRp0ql4sMlPcvUECE+JxXd41T00LWi9aDRaAxR3w47VCoVDAYDT132HqCVSiU3ZciydD+KBoHuhX6/zyLw/UB7z8NyFcYZh+39PA7Ewv9qtco0WRJ6Pi4dlNbwYrHIjSxBEHhd9vv9XDg/D6HlC9v1yZ7LbrfDZrMxv+dJR90ajQZ+vx86nY47HM1mE5FIBI1GgwVsVqsVJ0+exKlTp/btHIs5u/T3KBdBg8EAt27dwmeffYZsNoubN2+y+IJcQh62AFHnUKFQoFarwWq1MgWjXC4jFouxKDCRSECn0z3RYeZpUK/Xcfv2bayursJut8Nutz/X3/e4aLVaaDQaSKVS+Oabb3D37l1MTExgYmICwWCQnQEOExet2WwiHA6jUqng2rVr+OSTT5inCNybzJjNZoRCIfzlX/4lQqEQAoEAAoEAVCrVWHTfSJUfDocRj8fxL//yL9jd3eXniDbywWAAl8uFYDDIxVK/30c0GsXOzs5Q+AIVhTabDbVaDS6XC2q1GnNzcyN7f3S7XXZB+OMf/4hkMomNjQ1sbGywnRhRVGhyRUUM0U+mp6fxH/7Df0AoFOICYGNjg0elxNus1+t8CH/e68nzALkTVatVnopVq9WXokMok8ngcrmwuLgIvV6P27dvD/1/4o2q1WosLCxgfn5+359BEAQB2WwWmUwG9Xod0Wh0iAL1MuBlK5TFIOF/tVrF0tISbt26BZ/Ph5/97GcIBALQaDSP3EcEQcDu7i4bQ5DWQiaTweFwIBQK4Qc/+AGmpqYwNzf3XJo5L7RKVCqVLMCjrh0pHcUdiAeNv6mwNRqNzFPRaDSoVqvQ6XRsrSaTyaDVamG1WkemEPsuoE2LumKZTAYbGxvsCwp8m2a492RFhTSd8NvtNp/e1Wo1LBYL++4CGBJpPu8HvNfroVQqIZ/Pj5TfMV0DsSDO5/PBYDBwoMk4FImPC/JBr1QqKBQKyGQyyGQyPGoXP3cOhwNHjhzB/Pw8X49xCLCgZ4jcIFKpFLa3txGPx9FsNpkSRM8RjYJpnEr8ORKb7KWM0agQwMgXAuLwp3g8jp2dHayvr2N1dfWhHUC5XA6tVguTyQS73Y7Z2VnMzc1xJ7rZbPJzQd/f7XbZtmwcC00SJpOd3qM6zYepg0iNLqvVinK5fJ/WR6VS8VrocDgQCATuWwfEexF9/mKr1wdB3NDaT4ArYfxArmmlUgnxeBxra2tot9ts//s4ziiCIKDRaCCbzSKfz/OB3Gg0sqmD3+/HxMQELBbLc3kfL7xo1ul0cLlcuHDhAnw+H6uxlUolLBYL5HI5tra2sLm5ObT4mEwm6PV6BINB/PjHP4bf74dGo4FareboxHq9jkQigWQyienp6ZEqxJ4W3W4X5XIZjUYD0WiUE9r28n5J0KhWq+FwOGC321GpVHD37l2Uy2W+ViaTCS6XC16vF51OB3q9HolEAjs7O6x+ft6cNTHEBcgobKqDwQDr6+u4ceMGtre32WpNq9U+F6P0gwYJ/hKJBD766CMkEgncvXuXXWvoMDs5OYnTp09jcnISbrcbZrMZarV6pMMraP3odDpMG7h+/To++eQT5HI5ZDIZNJtN6PV6OJ1OmM1mzM/Pc0d9YmKCaSu9Xg/Xrl3D9evXh+zWCPT8+Xy+kRb3CIKAXC7HPrhLS0vY2dlBLpfjg/Leoo86ihqNBq+99hrOnz8Pn8+HyclJWCwW1Ot1dtE4bKADRqvVQq1W23ftFQQB1WqV6TlEzaGmzrhCJpPB5/OxNshkMrGdHACmNiqVSp7EPWwdIIohubHUajXEYjGe1hDkcjnvYbOzswgEAvxcjeI686QQGxwclgPW46BUKuHLL79ENBrF+vo6tre3meJmsVjgcDgeWbMJgoBoNIpLly4xhbDdbuPIkSM4ffo0JiYmEAqF4Ha7YTAYnsv98sKLZqVSCafTiddeew2zs7PY3NzExsYGF8RqtZpVu0TdkMlk0Ov18Hg8mJubw09+8hMcOXJkiJ6RSCRQr9dx7do1XLt2DZOTk2PhtfwokKimXC4jGo1ie3ubBTdiqNVquN1uWCwWzM3NYXZ2FolEAvF4HOVyGWq1mk9iVDRrtVr+nk8//fS+B/h5P9APs/c6KAwGA6ytreF3v/sd8zrFQspnHcl5kBAEgT26Nzc38fHHH2N7exuVSoVFXMC9TSwQCHDKm9frfW6n+GcN8kzNZDIol8u4ceMGfvvb3zLfdjAYwOl0YmJiAoFAAD/84Q+5U0EJmURnMBgMPBkh9xoCHVa9Xu9Ib+6CICCfz/Omtby8zPHoDzq0KhQKmM1m6PV6nD9/Hn/9138Ng8HA0emklziMoC4zUTQqlcq+Uzgqmvv9PorF4pDrxriCima3241Op4OTJ08OFbdkYyqXy2EymR7rsEjP3e3bt3H58mUuwvdSd+x2OxYWFjAzM4NgMMjapMMAKpopHOplQblcxqVLl9jvu1AoQK1WI5PJcMFst9sfunYOBgMumqvVKmduTE5O4p133oHL5UIoFILVan1ua/CB3IVKpRJWqxVyuRyNRgP9fh8ajYYNzL1eL5xOJyfV9Xo9mM1mfoCp60FFuFqtZm9lr9eL2dlZeDyesV6waKxJiv5cLse2WOKHjboZdCp3OBx8yrJYLPD5fJDL5bDb7XxD2Ww2XuCUSiWy2SyPRlqt1pBTRKPReOam8pQw1Wq12HJwlBwaqNAi8RIAdkwwmUyHptNMnsziURd1VYFvx/E0fnW73XA4HGMRMAB8G85RKpWwvr6OfD6PZDLJPF2ilgQCASwsLMDj8cDtdsNut7OzDlF1yI6tWq2ySFZcNOh0OjgcDrhcLhZEjSoajQby+fxQyiOBfIllMhk3JSj4yWq1Mk2JxNPAtyFJdAg5TCDxularhd1uh9PpZMtP8aGfDp+9Xg/5fJ6F5WazeWQPUI8DoluQy9ReK1aiA6rV6sdaFylJkiZZ+3VbZTIZX3ONRgOFQsHP2WFAp9NBvV5nofHLBPEzI06UfFTXnYTL7Xab7TH3Hl7F+rTn+cwdSNGs1+uxsLCAXq+H2dlZVKtV5kwCYPFILpfD0tISarUaZmdn8e6778Lv9zMNgS4MKTD7/T6sVivOnDkDtVo91nxm4pdubW3h7//+77G9vY10Os0xtWSK7vF4EAgEMDU1hb/+679GMBjkBCej0Yh3330X9XodR48exeLiIo+eDQYDcxF7vR6PRUikQSmMNHZ2OBzP9L0Vi0Ukk0mUSiVUq9WREgmRmwgVAWJBzLikRT4OBEFALBbD5cuXkUwmkU6n2e+S7HsmJiZgNptx6tQpXLhwAVqtdqTpBwRKNtzY2EAsFsOvfvUrRKNRjl01GAwIhUKwWCz40z/9U7z//vswGAxwu93QarXs8lOv17G5ucmWW3fv3uXUKQDs9+7z+XD69GksLi5yqMcogiKPv/nmG37WxSCaHD33LpcLPp8P7733Hvx+PyYnJ+FwOLiQAcDe+9T1OUyge8Hr9eLMmTOw2Wy4evUq0uk0Hzb6/T7W19eRSCQQDAZhMBiYquByuca6aBYfDBUKxQO1Ro9zv5MQcHt7G5ubm/wsPihXgPIVqEE2zteRIAgCC++73S5mZmYO+iW9UKhUqvsOWI+jeeh2u8hkMqhUKshkMigWiyzaJgc1ajQ+7+79gRTNCoWCN15KbaGuliAIcLlcXASTx55Op4PT6YTNZrvPGo5OugAOBY+ZOp3VahWFQgHhcBgbGxvcZQa+9Q+lkYbb7cbU1BSmpqYQi8V4IfL7/eh0Opifn8fx48e5Ky8edZlMpqFOc7/fZ65rrVaDyWR6ZlZR4pQpssCjm30UILaYok2RUhTNZjMMBsOh6zRTYAF9FgSFQgGTyQSr1QqbzQaHwzEWI1L6/KrVKjKZDHZ3dzkWXOyUQzy6QCCAubk5FiiL15Z+v8+UDIq/Fd+rpNMwGAzciRz1NajT6aBSqTClQsxLJxoXCSGpaJ6bm0MwGLzPp1ic8CqezBwWiNdZh8PBB669ayGFviiVShQKBZjN5pHwm39W+K7uUuTu1Gg02CrsYUUOPVc00Ri3gvlh3c52u83d9lGasD4v7CecBjD0uT5KQNvv94eceMQ8eHpGX1Sj4sB3QPJdptNqv9/n2FIqmAeDAdLpNJaWlhAKhXDixImx7iI/CGKl/vr6Ou7evYudnR0+VSkUCvaWpuszMzODEydOcEdQo9Gw7VW320UgEEC/34fX6+WC72E3FxUclUoFt2/fRrVaxblz5+D1ep9Z0VwoFLC9vY1YLMZ0gIPebOmgQoeVcrnMql4AHG5wGIpm8agrHo/j1q1bKJfLaDabPBolSs+ZM2cQCAQwOTk5st1TMarVKlZXV1EqlTgts1AoMDfd7/czzevixYvweDw4ceIEC5r23uPVahU3b95keyPxwq5QKDA/P4/Tp09jamoKHo8HOp1upOkrcrkc8/Pz+PGPf4xcLgeHw4FiscjJqeTDTXQEu90Oi8Wyb8EMfHsIpgPwQT/HzwsmkwlnzpxBKBTC9vb22BVxBwnSHNVqNSwvL2NlZQWJRAKVSmXftV8ul2NqagpvvfUWe8KPE6hgFkewy2QyLvJarRZPgg970SwIAiKRCCKRCLa2thCNRtlliCijbrcbLpdr3wkmTT1LpRJu3bqFZDKJnZ0ddLtdKBQKWCwW6HQ6zMzM8CT9eU+CR6JoFhchdKIltwcqmpPJJJaWlpjTMm4m+Y8DKlZpJPz1118jnU5zAAFF0VKXTKvVYnp6GidPnoTL5WJHA6fTCafTCWDYaP5xrhdxjMrlMm7duoVMJsMK6mcFKprj8Tinzh20IIKM1xuNBtviUPofdeDI1mYciseHgQ4IjUYDsVgMS0tLQxMMev6cTideeeUVzM7OIhgMjsXzVq1WcePGDcRiMVy6dAlfffUV05AUCgV8Ph9eeeUVTE5O4sc//jECgQAH1uwH2uiXl5eRz+fv4//Ozs7ivffe4+nYqCfeUdHs8XiQzWah1+uRz+cxPT2NqakpdjfSarUwGAzcVX1Y8ADZ14n58IcNRqMRp0+fRrvdxieffDIWz8KooNVqIRwOI5fLYXl5GUtLS0zL28++j9x6Ll68OJbR68C33U/ysCdbT3LjKZVKsFqth75oplTJL774AvF4HNFoFPl8HjabjaeXbrcbHo9n3wkOCXFLpRKWlpYQDocRjUbR6XQ4/c9isWB6eprNIZ73NPTAi+a9kMlkMJvNCAQCGAwGsFqt3MGgII9yucy+kYeJX0qpYqVSCYlEggtmoqnY7Xb4fD4WZmm1WgSDQVgslqEOqPjGe5rFnUZpxN18ljwhWjyoM0WLhkKhYM/PgyhKO50Ox3FSnDfFBZOoR6lUjuWokEDFY71ex87ODkqlErLZLJ/mib9oNBqZ8kNhRKNOOSCRXjwe5z/07MhkMphMJhYbh0IhtrAiviSBxoQ0daDDEwmXALC/uU6ng8fjgdPphNVqHekOsxjkr2symeD3+2EwGODxeGCz2bhYpqCBx9mAiG5FyVyHFcTrpfWJGjeH+T0/KUjo1+12UavVOGVzfX0dhUIBiUQCxWIR1Wr1voKR1lmiSY3reivOTCBfc4VCwaJ3YDSdo54lqIYgy9xkMolsNstrKMVcBwIBGAwGnm7u/RnlcplTSkk30W63mTo4OzvLRTelUz7v+2Xkima5XI6FhQU4nU5sbW1hZ2cHer2eu5NKpRJra2sQBAHBYBB+v3/sHqq9oKIll8vho48+ws7ODu7evYvV1VVWGOt0Opw9exbvvvsuzGYzgsEg9Ho9d8metSfoYDBAtVplS79niXq9PiQcksvl7I7idDoPpPgoFAr4+OOPEY1GcfPmTZTLZbbaIicSMvcf104zOUBEo1H84z/+I99n4vGoTCbD9PQ0j6JPnDjBaU2j+pyRt/bS0hJisRh+97vfYXd3F81mE3K5HHq9HrOzszCbzXjnnXfwox/9CAaDAU6nc+h9ET+XJlvEhU4mkzztEQQBZrMZb7zxBrxeL958802cPn0aGo1m5A8WBBK3GQwGWK1W9Ho9nuxRd+xJxF3FYhHhcBiJROI+K8zDCDH/8jBOPL8L6vU6VlZWUCgUsLy8jFu3bqFWq3GIEB2uKERHDKVSyRNTi8XCRfO4gfRZJNSfm5tDPp9Ho9E4tJOYvaAgk2azifX1dXz11VfMR1apVDh58iR+9KMfweVyIRAIwGg03rfeDAYDrKys4NKlS0gkEvjqq6+QzWYhl8vZWvc//af/hCNHjrD95Yt4FkeuaAbAaX/1eh0OhwO5XI7HOeS8UCwWYbVa0e12h2xGRjVo4WGgornZbCKVSnE0ZKFQ4E1fq9XC4/FgdnYWFosFk5OT0Ov1LKZ41sUcqVE7nc4zHSFRYUJpc7T5kKXRXiHW8wJtfPSn0WggkUggGo2iUCig0+lArVYPdd7G3faIbP4qlQq2t7fZypCKZrHnqs/ng8fjgdVqHXlOodjyKx6PI5lMIpVKcfeCRG3ko0x+8FQcEuiep3TEXC7HCn8qmKl75PF44Pf74Xa7YbPZxuq+EI+OH1boP0jAIwaJAMVWfOLfQ/fUOK7LEr7F3vXyQfdEs9lEPp9nl4zbt2+jXq9zCAXtdWLQPUJia+Kljut+DmCo02w0GlmT9DJALA6mSUM2m+U1VKlUwm63Y2pqCjabDXq9/r6JFmmrisUidnZ2kEqlkM/nWWRrsViGaBkvEiNZNNPN5XQ6cfHiRczOzuKPf/wj0uk06vU6vvzyS2xsbDAPT61Ww2q1QqPRwO/3j133uVaroVwuI5FIcDFTLBY5eIEES3/yJ3+Cubk5aLVamM1m5ksNBoNHxpKOMmQyGYxGI3ea93qBPisQPaHVanGiWzqdRiaTQTKZxDfffINkMolcLscdxTNnzsDr9WJmZoZFXuNUIBHEHcFIJMLvm/QBGo2GPdCPHz+O8+fPw263jzSfkKg+nU4H0WgUN27cQD6fR71eh0wmg81mg9PphN/vZ/7y4uIiU25ojaAY7Xw+j2vXriGXyzH/rlgsolAoQBAELrwnJydx/vx5hEKhseF6PykEQeC0Vnpu9iuU+v0+1tbW2AaKxE60sQWDQQQCAQQCAZhMpkN3rQ7b+9kL8t+u1+vY3d1FvV7nVL/97odyuYzl5WUUi0XE43Hkcjl0Oh2mu9H3kHZCoVBgZmYGU1NTnMhpsVjY6Wkc6RkvM+r1Our1OjKZDL744gukUincuHEDtVoNGo2GP9/FxUVMTk7CYDDct9/XajVsbW2hXC7j+vXrWFpaQrVaRbPZhEKhQCgUwrFjxzA3N3cg9qcjWTRTJ8ThcODixYuoVCrY3d3FpUuXUKvV8NVXX0GlUiEUCmFqagpGoxGTk5O8KHu93rEpIAVBYJ9Tirbd3t7mjo3VasW/+Tf/BkeOHEEoFEIoFHohvJ0XDaJn2O3250bPIJ42dVpLpRJWVlZw+/ZtFItF3Llzhy3FBEGAwWDAmTNnMDMzw7Hs41gwA8NFczgc5sMBdX20Wi38fj9sNhuOHz+Oc+fOQaPRjHRQB7mANJtNxGIxfPPNN2x8L5fLYbPZMDU1hYWFBfzoRz/C7OzsvtZEpGaPRCL4zW9+g62tLaRSKaRSKe54KBQKOJ1OzM/PY25uDufPn8fU1NRI01a+CwRBQCKRwPXr1/lgsrfrTCJtKpqJp0rjU2pg0J9xfXb2Ypw7oE+KdrvNvNLr168jl8uxGGu/CWS9XsfGxgZqtdpDUybJpUej0eDIkSN4++234XA4cPz48SF/ZgnjA7IwzWQy2Nrawm9+8xtsbm6iUCigXq9Dp9NhYWEBPp8Pi4uLCIVC+x6KiOKzu7uL69evY3l5mS1g5XI5Jicn8frrr7Mu5UVjJItmAo03BoMBJ/1Ry59SmVKpFAwGAxc5FBGt0WjYj3iUx+qCIKBUKmFnZwfJZJJFjySIsFgs7JNLzg3Pa7Hej5/3ooQKYj7pw37nft6eJNqinyEeH/Z6PbaO63Q6LFCJRCKoVqvI5/P8QO79vUqlEgaDga22xnGTJG9UEjoS9Yeul1qt5klNKBSC2+3mbv9e+sIogj7rvZQfmUwGq9WKqakp+P1+qNVqCILAHQuKfqYEt2KxyHZI5XKZr5kYFH5it9uZFzyq68rjQnz9iJpSKpXQarWwubmJcDjM/2+/IkkQBC6Y6bCiUqngcrkwNzeHiYmJ575uHTQO2/siG8FerzdEWYtEIigWi8hkMsjn8/uu0+TXLebu7nd9FAoFJ0s6HA74fD5YrVaOa39e08ZRAD1vh4XfTHtsp9PhSebOzg6nzNKBW+xQVSgUkEwmodPpeGpOX9NsNlEoFJDL5YYcrMSWupQafRD6p5EumpVKJWw2G0wmE15//XVoNBrE43H89re/5a5sNBodcjdIp9MolUpwOBw4ceIErFYr9Hr9yIp0BoMB7ty5g1/96lfIZrMoFAoAAIfDAY/Hg/n5ee5uPU+i+37Clhep8KWO4aO8XonTTps9JZwlEgl0u122MSLuXLlcxsrKylDSnbhAN5lMMBqNQ76apPzVaDTweDyYmJiAxWJ57tfgeaDRaGB9fR2lUgmffvopPvjgA1SrVZRKJchkMo5+np6exl/8xV9gamqKo5JfpGH804A+J4pxrtfrvGGrVCqcOHECP//5z9k5o1KpYGNjAxsbGyiXy9jY2EC1WkU2m0Uul0Oj0UAymRxyyiCQx/P58+eZ6/2ihCfPC2IbLBq5ZzIZfPnll0in01hbW8Pa2hofZPdyWem9t1ottFotyOVyDkc5f/48fvazn3HgyyjfRxKG0el0kM1mUa/X8cEHH+DDDz9EtVrlZ4OCJfbbF8jO8lHQarWYmJiAzWbDmTNncPHiRRbT7rWhPWwguovYPWocQfsvZToUCgX88Y9/xKeffsod53a7zXtuu91mio9er0ez2YTL5cJrr70Gh8PBza9MJoOVlRVsbW0hmUxiMBjAbDbj+PHjsNvtePPNN/HWW28dWDrtSBfNNMIhVS1FTup0OjYLpyKLCOYkBup2u5iamuKOEAkLRgm06ZdKJcRiMZRKJe5uUZfZZDJxYfc8X4e4UN3r7fwirhsVPq1WizvC+73ORqPBBTC97mw2y8r9YrHIXTEKUiH6BYES/pRKJZRKJaxWKy/U4vdMYTJkiTNq98/joNvtolgsIpfLIZlMcnwrXV+VSsWpf5OTk5ient5XmDGqEB+exN0b4sl7PB5oNBq22svlctjd3UWhUMD6+jqLVMiDWZy6SZ83dUmNRiPby42ziwowbCtJnSKyINza2kIikUA4HEY8Hue1gcKn9iucAfB0TK1WM/ebbP0kjA/EHcFUKoX19XUWdD2uO8p+zRcxZDIZR9BbLBam5Y3jGvukEAuOx9lyjppQ7XYb+Xwe6XQa4XAYd+7cuW//JipXo9GAXC5HNptFPB7nddloNKLZbA6JB/P5PDt3kXjQ6/VyGMpBHazGY2fEPVEgjVwbjQYymQzW1tawubmJVquFbDaLTqeD7e1t9Pt9eDwedLtduN1uzM3NYXZ2lovnUdjs2u020uk0KpUKotEo0uk00wjE/MlQKPTcvaj32ktRwAwl9jxLXqu4o0sJbP1+H5ubm/j9738Ps9mM27dv7/s7aRScyWSGul8U+U2+kIIgsBVfv9/H9PQ0QqEQjEYjjEYjtFot3G43jwbtdjtisRiLyMgGT6VSwWq1wuFwjLQgbj+QgCcWi+HDDz9EOBzG+vo6HzKpENJqtbBarbBarRzeMi6jUbEfqlqt5i4VOb5cuXIFg8GAD0SDwYDvH1pD6JBG9A2lUslc6U6nM+Qd6/V6MT8/z/fQuIGeGbL9yuVyuHLlCrsTkUPR9vY2arUaR0aTR7xKpWIqi3hqI4b4ILu2tgaHwwGj0cgF0ctQFB02PGlh9zh2fK1WC7FYDMViEZubm9ja2oLRaITb7T7UhyxBEJDP57GxsQG1Wj22Fo2CICCbzSKdTvMes7u7i42Njfv8y3U6HYeylUolVCoV7jo7HA7k83lYrVYWEdLaQTWdVquF1+vFO++8g9nZWSwsLBxoDTcWRbNMJoPT6YTD4UAwGITL5UK1WsXHH3/MnVr6ICKRCGKxGJxOJwRBgNfrBQC4XK6Rcj9otVrMFSPjbhotkwhybm6OPXKfN2hxo7+pW+TxeJi+8KxARTN18ARBwMbGBnZ3d6HRaGC32/d9z/1+H9lsFplMZmhhFltaUQfQ5XLBbrfDZDJhamoKJpMJXq8XXq+XVdrUwTcYDLh16xb+8Ic/sFtAr9fj5EWHw/HM3vuLAgl4aEG7ffs2dxcJpBkg4Q1di3ECFcQkWpTJZMzBvXbtGm7cuAEAQ12vvVQDOkzR/x8MBjzJIissCgCZnZ0dS1oGvV/yT81kMtjY2MAvfvELLpJrtRoA8GFWo9FAr9fDZDLxBGJ7exuNRoMPp3vHy3Qgy2azWF9fh9/vx/T0NIxGo+SEMMZ43MJ5v0PUfp857X9qtZqLZofDcegFgFQ01+t1mEym+7yqxwVUNN+9exebm5v46KOPEIlEhhoy9LnrdDrY7Xam/XS7XaRSKchkMuj1emxubsJgMLClME2Me70eU2s9Hg/efvttnDp16sD1EWNRNBOoA0pG2H6/HwsLCzySpzS3crmMdruNbDYLQRAQjUbh8Xg4oGIUkrvEI2WxpZNCoeD3+LySxmgDpRS1VCqFTqfDGyUVUs/DKkos0FKr1YhGo0Ndu4el+oiLI0oQpH8jeyJKX6LuqcFggN/vh06n43hxg8EAk8kEvV4/dOgiWggV3+M6giff4kQiwd3U/UQnJK7w+/1wuVwj8Vw8CcRTC5fLhfn5eZRKJYTDYX6+6L6mQpeCgCgWXaVS8WGBpj/UpQfAByeLxQK9Xj+WhR9x+InzHYvFsLm5yZZ6FDjgcrmgVCphMpn4b6PRCJ1OB5/PB5VKxdxWomrspXXRNSdh5WAwQC6XY64zHcrG7Rruh70dNeDeoaFer6NarY5tF5HCOfr9Pjsd1Go1JBIJtFotTot80OSA9hf6/yS+prh1OpyJfcDFk8PDBI1GA5PJxCJZwqME76MKolO0223E43Fsbm5ycA01G8gVhcKjaC+u1+sYDAao1WpDNMxKpcL3BglJqfim6THpUeRyOTdQqVZ60WvJWBXNwL0OqMvlQr/fh1arxYkTJ1AsFnH79m3k83l8/vnn+OKLL1Cr1fDNN99Ao9EglUrhzp07mJmZwd/93d8dCHl8L8SKdSqcAfCmPj09jVdffZXVxM/y91In9c6dO7h58ybC4TALw1wuF3w+H2ZnZ/Gnf/qnmJmZgcPheGbFo1wux8mTJxEKhZBMJmGz2ZBOp5HNZpHNZgF8Wzjv99pNJhMnCC0sLMBkMsFms3GBHAgEmJNLzilUUKtUKqhUKi60ZTIZNjY2sLm5iY2NDRa/kGOG2WweG26vGIPBAFtbW/jiiy8Qi8VQrVYfeAiZm5vD+++/D5vNNnZiR9rcVSoVXn/9dVitVoTDYfziF79ANBploQ25g2i1WoRCIUxMTMBut+PkyZNDQuHd3V388z//M+LxOHq9HiqVCvtWu1yusfN/B77t/NbrdWxtbaFUKuF3v/sdPvjgA9RqNeTzeXQ6HZw+fRqnTp2C2WxGKBQamswQH7Hb7fJ6WqvVhvjfANiRRCaT4ebNm9jc3MT09DTsdjt76k9OTg7pB8YR4uJubyeVaAedTgeLi4tjWRjRHmu32/Gnf/qnOHbsGAqFAm7evIlKpcLNFHF65MNQLBaxtLSEQqGAO3fu4O7du7zfjes98DggofX8/Dy0Wi2WlpYO+iV9Z9Trddy9exeFQgG/+93v8Pvf/x7NZhPFYpH3WpVKhYmJCfz0pz/l5GK9Xo9EIoEPPvgAyWQSyWSSp+vpdBpyuXzIPYvWFZq+b25u4r//9/8Ou92OH//4x/jhD38InU4Hm832wps9Y1cRUDcUAHePS6USGo0GrFYrbt++zadbKgSpI6nVatFqtR7KtXqRoA2N/lAnXa1Ww2AwcLjEsyzcxMV6Pp8fsiCTy+XQ6XTM4/X7/QgEAs+c40qdO5VKxV63CoXivs7Vw0AWaRRg4XA4YDAYMD09/dgUAxK8kGtJq9XihEkqxkbhPnkSiBXNiUSCx2F7DyEkdLRYLPB4PGz7M26gqYTT6cTc3BwGgwGsVisfwACwylqv18PhcCAQCMDlcmFxcRFOp5Mj6EkUKZ4w0DVyOBwj68DzMFCxS17U9Myvrq4yFUypVMJsNiMYDMJqtWJhYYH/OxAIoNfrsaUcbVJimpvYZUU8xSqXy9BoNMhkMjCZTDyipe7Qgw7i4/bMiUEOPjqdjhPwxs0JQrzHer1e6PV65PN5nuROT09jenqaGxGPaqhks1kUi0VotVpEo9GXhttO19FisaBQKOy7j4/boarX67FgOJFIYGdnh+9x0ozRpJryDejf1Go1nE4nms0myuUy5HI5W8w9SCxKU/hqtYrNzU3odDq88soraLfb7HT1ojF2RbMYYk7mwsICqtUqLl++zOIgojyUy2Xs7OxAr9djZ2cHWq2W/Y9HCVTIiOM3n5VwUVxMra2toVgs4tKlS/jqq69QrVYB3AsYmZmZwfnz53kDpS7t84DRaMTJkycxNTXFfKbHBUUZkwKbBGxPUuCLAz+SySTa7TZ32+fm5th9ZVxAY6xms4l4PI5wOLyv4p2EFUajkTUCWq12LLvqwLc0E9qk/uN//I8oFAo8xVEqldDr9VCpVCz8NBgMCAaD0Ol0nHKWy+UQi8UQjUZRqVQwGAyYpkDUrnHZ7OkgLk6AvHLlCvMQBUFgS0WDwcCBNkajEV6vl8U7jUYDuVwOn3/+OdLpNC5fvjxkJaVSqRAIBDA5OcnFdafTQT6fRy6XQ6FQwKefforl5WXMzs5ibm4OFouFNQViQTBBzDEfdey9HzqdDnZ2dpieksvloNPpODNg3EDrn0qlwquvvopmswmr1Qq73c6HpUc9EzqdDr1ej3MVbty4MdZWa08CSu8lTj/w7bNJtJVyucwH91FHo9HA6uoqdnZ2UCgUYDKZYDAYsLCwAIvFgkAggGAwCLvdjjNnzjC9VKlUQqVS4e2330Y2m8XVq1c5artUKj2SykRCbJvNBo/HA5vNBq1WeyAH0vF7ikWgBZcy69vtNjweDxfMhEqlwmP3aDQKnU6HUCgEi8UycpsgdX6oaH5W3T+xb/HS0hLi8TguX76MK1euQCaTwWKxwGw2Y3p6GufPn2dRxvPsPlLRDOCJ+WziboX4M3ySz5OCZaLRKBcC1LVcWFgYu6K51+uhUCigUqlw0dxoNPYtmicmJuB0OhEMBuFwOMZyQxeD+LderxdHjx594L0kthQkPiqZ7VP3JBqN8tcqFAoYjUamd4wDxIElkUgEX3zxBeLxOP7whz8glUoxRYvoTHa7HcePH8fZs2eHNAOUrphIJPD73/8eGxsbSCQSSKfTAMDNiVAohAsXLqDdbiOVSqFer7PdY6lUwmeffQa5XI6pqSlMT0/D5/Ph/fffh9fr5S4UgYowEnWOIh5mxdlsNhGNRqFSqRCLxZDNZmE2m8f2UEr8ZbPZDLfbzf/+JJ8Nxc83m018/fXXI/u5Pg8Qp5l874HhaW+tVuNm0TgUzfV6HWtra1hdXUWpVOI1980330QgEMCpU6dw6tQpDpQTf9Y0xaMshVQqxUFSjyqa1Wo1fD4f3G43F88H9TyN3VNMJ7R+v49Wq4Vms4l+v8+ezfl8/j6SPVEedDodDAbDMy1GnyVoTEqL7HddXEiUMxgM2JYtmUwOpQ+SIG5mZoZHKjab7YXxeUdBaCe+X+RyOfR6Pex2OywWy1htdM1mE+FwGJlMBqlUigVt9N7ogEnUFq/XC7vdfmg2MSpknvSeoinMfuIcomc4nc6xsR2kTm+j0UA8HufijTYmk8kEs9kMq9WK2dlZDrghmhTdM+l0Gul0Gtvb2zye73a7LPTxeDzQ6XSYm5tDKBRCt9uFXq9Ho9EAALb/q1arTLsqlUpQKpXY3NxEsVhkOz8ArDcgYeco3pdU0LvdbrbI2utJS/cSuZT0ej04nc4DesXPBt+FUkH+vCREfZlA69GDrh1REseFpiFuIphMJhaRB4NBuN1uWCyWB7oLUZOCQpVIDEjUVLvdzpkJe0X4VqsVc3NzcDgcsNlsknvGk6Db7SKTyaDZbCISiSASiXCSV7VaxY0bN4aEdQBYLBYIBDAzM4PZ2dmRjEXW6XSYn5+Hy+WCx+P5zq+PrlWj0cCtW7ewvLyMTCaDy5cvo1AocGpiKBTCX/7lX2JycpI7zkqlciw5nN8VMpkMHo8Hp0+fHjt/5kwmg1/84he4e/cu0uk0crkcc8JkMhlsNhvcbjdmZmbwF3/xF5ienobH4xmJg8tBghTa4rABevZMJhOOHTuGkydP8kh6VEEbUrFYxGeffYZUKoVLly7h8uXLnLip1Wpx+vRpnDt3Dk6nE2fPnoXD4YDb7R5yEKnX6/jyyy/x1VdfIZ/PY3l5GeVyGTqdDm63Gz6fDz/60Y/g9/s5sbTf77NLQjQaxc7ODkqlEu7cuYNSqYRkMsmWoKurqywGpEKZRM9/8zd/c+BerA+CTCZDKBTCxYsXkc1mcePGDZRKpfu+ThAExGIxXLp0CcFgED6fb2woJ88arVYL4XAY+XyeHa1eFlDRvF+6Kk1/SQA3DtDr9UytCgaDCAaDMBgMmJiYYJrkww4IFF5CMdqkI1IqlXj11Vfx1ltvsXOYeAJFlEK9Xg+XyyX5ND8KYl/VTqfDnqJkrF2tVrGzs4NarYZsNjtUMNOirNPp2PLoWVqoPUtQAh1lrD8txNZPlUoFtVoNyWQSW1tbyOfzPBahiFuyFaLExZcdJIYk+7pxASn3KfBHPPIivi8dICcmJjA9PT2WnsPPE3s7atRpttlsI3+IJNpFs9lEKpVCNBpFIpFgT1SdTsdinMnJSbjdbkxNTcFms/F6Q7zkcrmM3d1drK+vo1qtolarodPp8KTOZrMNOWL4/X4IgsCboEqlgk6nY16zSqVia9BGo3HfOq3RaFjMWy6XR7awIm9Zl8uFXq/3QA0Fhchks1kYjcZ9LR9HDXut4p7Vz+t0OiiXyygUCmg0GiP72T5riCdf4rRZgthSbVyKZrLg7Ha7mJycZGeQx3GxoA5zu93mxElqVFA2xfz8PNPGxEUzOSDRZErqND8AYm/RRCKBRCKBcrmM9fV1lMtlti5ptVrszVwqlYa6ReSEQOr5g/D1exjECwgZvlerVZw7d+6pFhdBEBCPx7G7u4tcLofr168jn89jZ2cHOzs7EAQBfr8fwWAQFy9exOuvvw6n0wmbzfYs35aEAwC5gTSbzfs2aZlMhkAggLNnz/JE4XmKPMcFNBaUyWSoVqtjwSvcD4IgIJlMMif7ypUriMVi2N3dZd/yV155BS6XC6+88gpOnDjB/EJKB8zn86hUKry+rq+vI5FIQK1W4/jx49DpdJiensbk5CRcLheOHz8Oh8MBq9XKaypRLIjuQaKder2OO3fucBG+s7PDNA7gHu/1/PnzcDqdOHny5Eh2mQkGg4E5uuNE33oQiB5QLBaZMkMeu/t1SB8HgiAglUohnU4jmUziww8/RDKZxObm5ktVNFOSMaUUkzC71WqhWq3i9u3baDQaOHXq1MhPsoB79/6xY8fQaDTgdDqZwviwfYS66ZVKBVtbW0in05wNIQgC9Ho962wWFxeh0+lgMpmGinAyRyCjhIPESD/xJFxrNBpYXl7GjRs3kM/ncfPmTRSLRV7wqbMKDBeh9MBrNBo26T/oC74f6ETearUQiUSQz+dRKBSeumje3d3F1atXEY/H8bvf/Q7JZBLNZhOtVgt2ux1nz56F2+3G22+/jT/7sz975E0vYTwwGAzQbrfZKxf4ljNOYUCvvPIKWzWOIq//IEA+3/l8fuyL5qWlJWxvb+Prr79GLBZj6oPT6cTFixcxNTWF2dlZzMzMoNlsYmdnB9VqFcvLy1heXkahUMDKygo3IXq9Hnw+H44dO4ZAIIDTp0/j5MmT0Ol0cDgcQ5MKCjYAwEFCgiDg2LFj6Pf7mJmZwZ07d1g9XygU+PVPTEzgz//8z1mgOqrrEXWa7XY7qtXqyL7Ox4U4KTKfzyMSicBgMHCQz4M88x/n56bTaSwvLyMSieAPf/gDYrEYe6e/LCC3nlarBbfbjWw2i3w+zwLAlZUVpkoeP378oF/uI0FFM/D4PPder8cJteFwGDs7OxwipVQqh9yMFhcXeXozSs1NMUamaKYHVxAENJtN5r5EIhFUq1VEIhEkEglOb2s2m2wpJQaZa6tUKh6pkl9gKBQaSQU83XyUENhut9lPVWxXRIcAKo76/T4r3ImO0e12sbq6inA4jGw2y77UpFK32+3weDzszSsVzPej1+sNiRRGHcViEaVSCbu7u0PCP7qnCKSCJ3cECffQbrfRbrdRr9fHYoy+HygFMhaLse96v9/ngqfb7aJYLMJgMECpVDLHmWhtOzs7yGQyvLa2222mswUCAUxMTCAQCDCFgqYUD9rY9jrbyOVymEwmuN1uqFQqzM/Po1wu89eTIt5oND5zX/hnDYPBAK/Xi3q9Dr1eD41Gw2N2giAIqNfrSKfTMJlM7BAwKuttp9NBp9PhyOJWq4Xt7W2Ew2H2MtfpdI9dMIsTbinVLZFIIBKJYHd3l8NwxOsRCeTE1nWjWih9F9Bh0mw2w2KxoNFocOfU7XY/89Td540nPUTVajUUi0XuMKfTaTQaDbbznJmZgd1uh8vlGovQo5Epmim1qtPpYHt7G9vb28hms7h8+TJyuRzS6TQymQwv9vsFYchkMvaQ9Hg8eP311+HxeFioQiKWUcJejhNxB69fv85hDKdOnWLLK41Gwz68zWYTm5ub2NzcRLPZRDqdRrPZ5HQ9uj70c5xOJ7xeLy5evAiPx4NQKDTy46AXCeq6EBdRJpONfBHV7/extLTE6X8U6rF3SiEIAmw2G2ZmZmAymca2o/qsIQgCstksdnd3EQ6H0Ww2D/olPRUGgwHW19fxu9/9DpVKhQtSakaUSiVcuXIFKysrPOJstVpIpVLcpCBaD12D+fl5nDlzBoFAAD/60Y/g8/m4C0k8zceFTCaD3++H3W5Hr9fD+fPnh54ttVoNm80GtVo90pQHuVzOAlqn04k//vGPqNVqzAMn9Pt9hMNhFuR+//vfh9FohNlshslkOsB3ALYDpD310qVLSKfTiEQiCIfDWFhYwMTEBDdsHucQQwV4rVbj5MmPP/4Yf/zjH5n+Iz5UkLWquMk1atTJZwmiNtEeUyqV4PF48P777+P48eOw2WyHci8eDAbY2dnB0tISotEoPv30UySTSfT7fej1ekxPT+Nv//ZvORdhFA6Uj8KBr060uVN3j2zjdnd3kU6nsbW1hUwmg1KpNLQoEfaqU0nE5XQ6MTMzM6TuHvUHkoQBZBlFziDBYBByuRydTgd6vR71ep39eKPRKDY2NlCr1bC7u4tGo8FCSQpzoFQit9vNzhwUaiDhfoxLp5m6O4VCAdvb29xh3AvyzCSaEhU9Eu6BNBG1Wm2kP+9HoVqtIpVKscCGIAgC2u02stkse6SSICeXy7ENmNh/WKlUwmazsULe7/dzpPbTrqMUmAIALpfru7/hA4LBYGBeM/Ex6/X60NfQ4btWq8Hj8XCneVQO4RQqkc1msb29zV3hSCQCrVaLarWKdrsNjUaDXq/30M+cxH6tVgu1Wo358YlEArFYjO3F6NmiAxeFUVHBPA5dxqeFQqFgEwJxQrHH40EwGBzpg+J3AaWDUoc5l8txQiiZHkxNTWFhYWFsuu0H8kntpRdQEUiitUgkwoK4RCKBWq2GVqt138+xWCwcajA3Nwez2YzJyUlMTU3BYrHwv42TFy11hhKJBAaDAcxmM4/4qNPcaDSQSCRQr9eRyWQ4mIPsnmgMr9frMTExwSEiJ0+ehMlk4qhpSlGTcD/EPPlRxN70v0gkwu4EwLd8fqPRyM/D9PQ0p0yOw4n+RYDoYHQoH5Wi5mmgVquh1+u5YAPA93C73UahUIBCoeDDuVKphM/ng1KphNVqhcVigU6n40TAxcVFzM/Pw2KxwGg0Htrx+dNCpVLBarXC4XDsK0Lfa184KhgMBtja2sInn3zCCZHFYhGFQoGnnbdu3UKtVmMbsYeBpjV0KNvY2GDRF+3zdC3oPqP0WYvFgtdeew1TU1Oc6vqyQJwAPGr3yHcFufi0223uNGezWdTrdSgUCvh8PkxPT7PF7jhNPw+saKZOHhHjd3Z28P/+3/9DNBpFNpvlB/hBxt8ymQwmkwk+nw8+nw/vvfcefD4fFhYWMD8/P3QzjtMNSZtcIpFAMpmEUqnE7du32WpFo9Gg1Wohk8kwX5muD2XAWywW+Hw+WCwWHDlyBFarFW+//Tbeeust7joCo7eYHzTE12PUFd77pf8Rl1Bsc2QymXD8+HH4fD5MTk5ysI/Uaf4WrVYLxWJx7DvNarUaRqOR479pUiLWSpAmAgDHWVutVgSDQUxMTMBut+PUqVOw2WwskKRRurReDIO68S6XC6VSCXK5/D67U7JwGyVQ0fyHP/yBrQVJFwPc46Devn0bmUxmKHzmQej3+9ylrtfriEaj9wn0gXsHeYvFglAoBI/Hg4sXL8Lr9WJxcRFTU1OPFck97tibXvu4UeTjBvJsr9friEQiWFpaQr1eR7PZhFwuh9frxZkzZzA5OQmn03nglKUnwQspmumkSd0c6np0u13kcjnkcjkkk0nk83lUq1X2+hRDo9Ew340S82h06HK54PP5+MRCRcEo34iUPGc0GmE0GmEwGFicIeZry2QyVhyLx6qdTge9Xo+LYCqQVCoVK+RNJhNCoRB78z6tEvplQ6fTQb1eR6PRGNkiShzFKr4nqNin8adYyOVwOA5lV+O7gq4TGfOLC50njXc/KMhkMrhcLhw9epRDSCitrtPp3Edho9EoBRX4fD54vV5OCqTJFhXL0j1zP4j+RiJc8XUa1S4zgaYNdKgSr3O9Xo+DkYhv/Kiflc1mUalUUK/XmYaiUCiYeqHT6XhvWlhYgNPphN/vh8PhgNFoHPn9+lmB1hOatlcqFZRKpSHq0mEAOYEVCgXWTfR6PVgsFshkMvh8PkxMTMDr9Y5Nh5nw3ItmcVf58uXLuHTpEur1OhKJBJrNJvL5PEqlElqtFv/9IIGfx+OBw+HAhQsX4HK52FyfXCHUavXYjJ41Gg0CgQBzekKhEIeQiMVIvV6P/UxpYaGCCRiORj569CjsdjvefvttXLx4ESqVijc+WpgkPBzEEQ6Hw8wFHUXQoksuMyQgpfuCvC4nJyfx/vvv4+jRozCZTGwR9jJsUI8D8mmem5tDp9PhBXwUO4QPg0KhwBtvvIHp6WmUSiWsrKygVCohn88jn89DLpfDYDBApVLxNI5CCWjdJK4l2Y2NgifqKMNoNOLMmTPw+XwoFou4ffv2Qb+kZ4JqtYpvvvmGebaP8xy02212s6KGl0ajYTEhTTRo4knaI7r3xulZ+64gjnepVMLa2hoAcA1wWK5DOp3GL37xC6yvryMcDiOTycBsNmNxcRE2mw3f//738cMf/hA6nQ4Wi+WgX+4T4ZkXzWKqABV3JPBLp9PY3NxEtVpFPB5HvV5HqVTaN4aUQJ1UvV4Pq9XKMcBerxdTU1OYmZmBUqmESqUaqxuONicA3N0B7nUvKCGIruHerrs4epYWJpPJBI/Hw4eJI0eOSBveU6Lb7fIoaVQ9RYn7Tsbx+8VAK5VK6PV6eL1eBAKBA37Fo4vHseIb9W4zBSmYzWaUSiXmaRsMBmg0Gp5EaTQaHDlyBCdPnoRKpeLAJzFtS8LjgWxNB4MBDAbDWF0/otyID0fUAe12u0Me2o/788SgPZn2JrfbDYfDgVAohLm5Oe5gj9Oe/V1A15a6+71ebyh9cz/N1jij3W4jFotha2uLA10EQYDFYmEzAr/fP5Y1yjMtmskLlC5YPB5n/m2j0cDKygru3r3LYwlS3O4FLeAGgwHT09OwWCw4fvw4jh8/zjw8s9nM0Y3jONqholmlUuGVV16BQqFAoVDA0tISisUidnZ2EIvF9i3ajEYjZmZmYDQaMTExgVAoxKNWEliM0wI+Khj1wkjCs4dMJoPBYGB6g8PhgM1m44N+v9/nESod3kcVRMkxm81YWFhgN4NarQa5XM70No/HA6PRyOPzcVw/RwEkoKQDi9PpZGE7OZKMIuRyOY4cOYIf//jHvOeUSiWkUqkhq9JHgQ7lYucLml5oNBpMTU1hYmICZrOZRfmzs7NQq9Uv3T3XarUQDoexurqKXC7HDS+bzcYuLIcJOp0OCwsLAIC1tTUUi0VotVpMTk5icnJyrMwZ9uKZFs2dTgeZTAa1Wg1Xr17FlStXOJikVquhXC6jWq3um94nBnF0LRYLTp8+Da/XizfeeANvvPHGfRSMcb3wdCgQBAFnzpzB7OwsMpkMbDYbUqkUx2HvB71ej6NHj8Lr9eLVV1/FmTNnYDAY4Ha7odVqX7oF6Vli1F0zJDx7EJ/Z6XTCbrfDZrOhVCqx8r9araJYLLIzxag+W9QxVKvVMJlMvL7u5ddK9JxnAyqaidvscDigUqlYXzCqkMvlbPGVTCahUql4z8nlco/9cxQKBcxmMzQaDXeWTSYTZmdnYbFYcObMGZw+fZrT3igs5WW895rNJiKRCFZXV1kMR5MKp9PJeorDAr1ej7m5OWi1WhSLRWxsbECj0WBiYgKzs7NwOBxj+36fadFM44Z8Po9cLodsNsudDvIO7ff7kMlknChFjhBiRweypHG5XJiZmYHb7YbT6WR+7mESM1FakE6ng9lsht/vh0ajQalUGhJ2iTdrm82G+fl5OJ1OeDweFu3QNZXweJDJZMwHbzabY+WVSb7LWq0WBoMBRqOROc6jSikZZdC9QAldg8GAp2Fiy0ebzcaF6SivQVJh/PxB+1i/30cwGMTJkyfZPpW0EIIgYG5uDjabjfevgwbd62azGd1uF5OTk9Dr9bxXE99W7L4i7iqTKF+v13NyIHkuU4FsNBrhdrthNptZBPgy701yuRxarXZIW0S0qcNIjVKr1fB4PACAY8eOodPpwOfzsfhznEWPz/QJbjabWF9fRywWw82bN7G0tMSkd+JgAvcuKBXBExMTmJyc5JtGqVSyp7BOp4PL5eKbjQQDh20zoIJXr9fDYrGg2+3i+9//Pmq12r7deDrRq1SqoYSuUViQxwkymQxutxvHjh2DVqvF9evX2QZo1EHdLXqGZmZmOEaZhKMSngxmsxmvv/46JiYm8OmnnyKRSKBUKuGzzz7D3bt38fbbb7NvrdPpfKk8ZSXcD3JyMhqN+OEPf4gLFy6wy5F4WqXT6eD3+1lgOQogH3+32w2fz4dWq4Vjx47h+PHjSKVS+PTTT5HNZlnEr9frsbCwALPZjEAgAL/fD4vFgmPHjsFisfBzQY0woh/S3vSyPytETSB7y2KxCKfTyQeKcdhzngS0lnY6Hbz11luo1WpQq9VwuVzc7BnXOu6ZVlnisBKy7KJCmYRJSqWSi2CKtSZCONEyFhYWcOrUKajValZ0H2aQFRRZ80h4cSAVt81mg16v51HjqE80qNM8GAzYUlAmk7FVFE1wHmUXJeFb0GGerqlcLke320U6neb0vGq1CgBSN18CTwkBwOv1wuv1HvArenyQEE+r1UKv16PX63EqplKphMViQa1W4yaVTqdj6pLf78fU1BTsdjsWFhZgs9k4JVHC/qADltVqZSEgudkcxk4zNXUAwOfzHfCrebZ4pkWz2WzGuXPnMD8/jyNHjuDdd9/dt1NKFmh0YYkUTl0+GvkcxptJwuhAJpPB4/FAJpNhYmICFosFlUoFXq8XHo8HNpttZO1wyG9XqVTi3LlzMJlMaLVaKBQK6HQ60Gq1HNPqdrsP+uWOBbRaLRcDa2truHv3Lnq9HvL5PMrlMm7dusXXVHKdkHAYQE5MMpkMgUAAKpWK3amq1Sq7PNB9r9PpOPRGp9PxxPhl7yQ/ClarFd/73vdw+vRpNBoNNBoN2O12TmsdN6/ilxky4RlbBpBN2uOEAoiFKWK8rGIBCS8e4ntVHCgjPsSNOsThBHufOfGmKOHhoOjXVquFX/7yl/jVr36FYrGI1dVVNBoNLC4uYnFxETMzM/i7v/s7TE1NPVb4gwQJ4wDxWrjf/i2mRtLf47A+jgpoOiW+rtLaPH545iRY6SGSME4QbwTjSgMieo+E7waikKnVarjdbszPzyObzXKSKQBks1nYbDY0Gg2OpZaKZgmHAYdRLzRKGNf9RcIwJOWYBAkSJAAsWFKpVLhw4QKmp6eRSCTgdruRSCQQDodx+/Zt9Ho9pFIp2O12APdoHRIkSJAg4fBDKpolSJAg4f8HdewdDgeMRiPH3Q8GA464bzab6HQ6bKEpQYIECRJeDjxzTrMECRIkjDsoorxSqWB1dRWVSgXJZBLJZBIulwtvv/02XC4X22pJkCBBgoTDD6loliBBgoSHYK+4WRJXSpAgQcLLCaloliBBggQJEiRIkCDhEZAk9xIkSJAgQYIECRIkPAJS0SxBggQJEiRIkCBBwiMgFc0SJEiQIEGCBAkSJDwCUtEsQYIECRIkSJAgQcIjIPk0S5AgAYIgsO9woVBAPp/nuFeZTAaPxwO32y05RkiQIEGChJcWUtEsQYIEdLtdFAoFNBoN/P73v8eHH36IXq8HQRCgVCrx13/91/j5z38OpVJaMiRIkCBBwssJaQeUIOElBnkQdzod1Ot1VKtVxGIxLC8vc9GsVquRyWQguVNKkCBBwrMF+b+L/eABQKFQQC6XS9O9EYNUNEuQ8JJCEARsbW1ha2sL5XIZ6+vrKJVKuHnzJkqlEpRKJTweD0wmEwwGg7R4S5AgQcIzQr/fR6PRQKfTQTgcRiQSQaPRQCqVQqfTwdmzZ3H27Fmo1WoYjUZpyjcikD4FCRJeUgwGA2xtbeHDDz9ELpfD9evXkc/n0Wg00Gg0YDabYbVaYbfbYTQaD/rlSpAgQcKhQb/fR7VaRaPRwM2bN/HZZ58hl8vh5s2baDab+M//+T9jYmICJpMJOp1OKppHBCP5KfR6Pf7TbDbR6/VQr9fRaDQgl8uh0Wggl8uhUqmgUqn4+2QyGQwGA2/wUmdMgoRvMRgMMBgM0Gq1kMlkUK/Xsb29jUQigWKxiFqthlarBQDQarUwm82YmJiA1+uFzWaTnicJEiRI+I7odDrodDqoVCpYW1tDuVxGNBpFqVRCq9WC0WiERqOBwWCASqWSiuURw0h+GtVqFeVyGZVKBZubm3xzra2tQaPRwOfzQa/Xw+FwwG6382Yul8tx/PhxHD9+HAqFAgqF4oDfiQQJo4N2u41Wq4VoNIpf/vKXiEaj2NzcxObmJh9MB4MBLBYLLBYLZmdn8bOf/Qyzs7Pwer2QyyWHSgkSJEh4WgiCgGKxiEwmg3A4jP/1v/4XdnZ20G630ev1oNfrceLECZhMJiwsLMBsNkOr1Uq1zAhhpIpmIsK3Wi1UKhUUi0Xugq2vr2N5eRk6nQ7VahVGoxHVahX1ep03c4VCgWAwiF6vBwASiX4MMBgM7vs3EkKIhWf0dfR5PsnnKv6ep/n+wwCylGs2myiXy9ja2sLm5iYSiQSL/JRKJU9yjEYjbDYbgsEgQqEQdDrdobtm/X6fhTeCIEAmk0GpVB669ynh6SAWZdH6I16T9hPG0r1DIi4Jjw9BEPiZpP8+TM8kif0ajQZKpRIymQw2Nzexvb3NE3KZTAaHwwGHwwGLxQK1Wn1o3v9hwcgUzY1GAzs7O6hWq1heXsbKygrq9ToSiQTq9TpSqRTy+TxUKhXa7TbUajUikQgMBgP/DJVKBa1WC6/XC4PBALfbDY1Gc4DvSsJ+6Pf7vHgkEgk0m03I5XLI5XJ0u12Uy2V0Oh30ej3+ut3dXTSbTVitVlgsFiiVysc6gVMRqFQqeTHSaDSwWCxD1J7Din6/j1qthk6ng9XVVayvryMej3PBXKlUIAgCLBYLFhcXYbVa4fV64Xa7EQwG4XK5oNPpDt21KhQKuHHjBgqFAv9xu9343ve+B4/HA7VaLa0dLzEEQUAmk0E6nWY6U7vdRq1WQ71eR7fbRbVaRb/f5+9Rq9Ww2WzQarU4ceIETzxVKpVU9DwEg8EA/X4fuVwOly5dQi6XQ6fTQbvdhsvlwptvvgmXywWNRgOtVnvQL/ep0G63kU6nUa/XceXKFVy5cgX1eh0ulwsWiwXz8/OYn5+HwWCA3++HXq/H5OQk9Hq9dAAbMYxU0by2toZUKoWPPvoIn3zyCY+TqcgiZDKZfTuGKpUKfr8fx44dg91uh9VqlTa+EcRgMGBO1/r6OorFIhQKBZRKJRqNBqLRKKuKO50O8vk8rl69ilKphMnJSUxOTkKtVsNisTzy81UqlTCZTNBqtbwwGY1G6PX6Q1cI7oder4dKpYJ6vY6lpSV8+umnyOfz2NjYQKVS4efKZDLh3LlzCAaD8Pl88Pl8sFgsXDQfNpRKJXz66afsHrK9vY1jx44hFApBr9fDZDJJa8dLDEEQkE6nsbKyglKphLt376JcLiOdTiOTyaDZbHJBTTCZTJiamoLVasXPf/5zzMzM8IFdKpofjH6/j263i1QqhV//+tdYW1tDrVZDrVbDkSNH4PP5eL0f16K51WohHo8jn8/j008/xa9+9StYrVa8/vrr8Hq9eOedd/DWW2/xYZ2aSNJ9M3oYmaJZoVDAaDRyIURdRvKK3Yv9Rvjdbhe5XA4bGxtwu91wOBwQBAEajUbaAEcIlUoFhUIB2WwW29vbyOfzzEFvtVpIpVJotVrodrvcea7X60zbyeVyUKvVaDabUKvVD/1ddF/RxtVut2E0GlGpVKDX66HT6ViZTF93mPjwgiCg1+uxD3M+n0exWESv1xvqksnlcqjVai4YbTbbobQ5opF7t9tlCli1WkWz2USj0UC5XEapVIJKpeJxqYTDDxLJtttt5PN5NJtNbGxsYHNzE9VqlbuErVaLKQNarRYymQzdbhftdhvtdhvlchmDwQDRaBR37tyBxWLBzMzM0ET0ZQF1kPfSLoB7zS4qCuv1Our1OgqFAorFIkqlEjqdDn+PXC4f225rv9/nxkUkEkEqlUK5XB4SWgcCATgcDmi1WiiVSumQNeIYmR1Rr9djcXERwWAQS0tL0Gq1EAQBCoWCOcqPwmAwwNWrVxGLxTA9PY3BYICpqSkEAgH4/X7pRhwBDAYDrK+v4+rVq0gmk/j444+RyWQA3FtIaeMSc0273S4ajQZ3I4rFIi+6jypuxYuzVqvlQtnv98NgMGBmZgbT09Ow2Ww4duwYLBYLjEYjTCbTi7gczx39fh/NZhO1Wg27u7tYWVlBq9Ua6pAB94pms9nMPOb5+XmmOx0m0CZWq9UQi8Wwvb2NYrHIBc/W1havEw6HQ1ozXhIQHSCRSOBf//VfEY/Hsba2ho2NjaGCz263w263YzAYwG63o9/vI5lMIp1Oo9frYXd3l2lmy8vLWFhYwH/7b/8Ns7OzB/wOXzxarRYajQZ6vR4ajcbQIV2hUPChI5FIIJFI8MQnHo/DaDTCaDRCp9PBYDCwk8S4oVaroVqtYn19Hf/4j/+IjY0NqNVqTE9PY25uDj/60Y8wOzvL01Cx7kbCaGJkimalUgmz2QyVSgWDwQC1Wo1er/fEN1CxWESz2YRMJkMul4PVaoXD4XhOr/pwYj/xy17BHj3cMpnsibqygiCgUqlgd3cXu7u7iEajSKVSj/w+ug+oo/Owr9n7PvZCr9ejUCjAaDRiMBhAqVSi2WxicnISGo3m0NAR6HMjmlOtVmO+OPDtgYJ431qtFlqtFgaDASaTaSw7O48D6nw1m03U63VWrhNPtVwuP/Aee9mx31pA/w7sL+wFwOvEqN5TZG9aLpcRiUQQDocRDocRjUYhl8t56iKXy6HX6/l9DAYD1Ot1lEqloeJwd3cXrVYLKpUK9Xod/X7/UI3bxZ/3flNf4NuimZ4rcfNLqVRiMBhALpejUqkgn8+jUCgwLUOn0/H9QtS9Ub13HgRKWq3VaiiVSojFYohEIgiFQvB4PHA4HAgEAggGg4fmvnga0JpB054HgZ6fg36ORqZoFvsvz83N4a233kI2m8U333yDYrE4NKqhRWu/Aqrf73OBEIvFIJfLYbfbWYkr4X5QAdHv95k/3mw2sbu7y2K9ZDLJi6JMJuOOi81mw5kzZ2C1Wh/rdwmCgGw2i/X1deRyufs6nmKQR6VarYbZbH4kVUClUjFXmQI6qFPd7/dRr9dRq9XQ7XZRLBbZYi2TyfCYjOg8FotlrO+XZrOJZrOJRCKBjz76CLu7u1hdXR1alMii8ejRo/D7/Th79iy8Xi9cLtdYv/eHgfzd6TO22+3o9XqoVqt83xOfXsIwBEFAPB5HPB7nriEJdekAQoJdAtGeNBoNzp07h7Nnz45c8TMYDLC8vIyrV68ik8ngzp07KBQKsFgsuHDhAsxmM44cOQKr1QqbzTZkcyoIApLJJFKpFFKpFD755BNks1l0Oh0UCgXE43Fcu3YNpVIJoVAIk5OTY/9sEZ2iVqshHA4zbYUmhIRSqcSH9HK5jG63y//PbDbj6NGjMJlMvL8kEgneD9Rq9VAS6V56x6iD9tK1tTWeqsrlcni9Xpw/fx5vvPEGPB7PS+t/TzkcVF+QlikWizHdSTyZMJvNWFhYgNVqxeTkJCYmJg7suo1M0SyTyVg0MTs7izfffBM7OzsIh8OoVqsA7l1opVLJo5pKpXJf0UwfRrVaRTwehyAImJ2dHasH7kVD7LBAHbdCoYDr16/zweWbb77hm1ihUGB2dhYzMzNMb3iSorlQKLDY42FFs1KphE6ng16vh9/vf2QHWKvVwuPxQKPRIJfLMXe32Wyi2+0inU7z++x0OpDJZMhms3xQO3v2LHQ6HWw222Nfu1FFs9lEoVBANBrFxx9/jI2NDRQKhaFuj1wux9GjR/Fv/+2/hcvl4sPPYR4RUmddq9VyEUTrC3XlqTsmYRhUNF+9epVpLoPBAPl8HrlcDvl8Hl9//TWKxSJ/j06n4yh2uVyOV155ZeSK5n6/j9u3b+P//J//g1qthmw2i263i9OnT+PkyZMIBAJ477334PV6WQNBEASB3//du3exurrKnFwqCK5du8bi9YPc7J8FBEFAvV5HJpNBJpPBZ599hkwmw7kK4kM5udK0220UCoWhg6jP58MPfvADuN1u5HI5ZLNZFItF3g9UKhUn4QG4zwxglEGTrE6ng7W1Nfz+979Hu92GXC6Hy+XC2bNn8bOf/Yynei8jaF8uFou4e/cuO6dcvnwZrVZraCIKAH6/H3/+53+OiYkJADjQ7vzIFM0EmUwGk8kEn8+HZrMJg8EArVaLVqs15L/8qHGNUqmEzWaD0+nk06oEcDeNusutVos7ksQ/I/Hd9vY2SqUScrkc6vX6UKe5Wq2iVCqhVqsNnQgfBepSz8/Po1arwWazod1uswBC/HVEF9DpdPB6vY/k12o0GjgcDqhUKjgcDlQqFX44qUgulUoYDAbodrvMmaZiiYRhzWZzrCcTtLFRIUM2WUqlkhXoDocDer0e09PTcLvdsFqtUKvVI1fQPC+oVCrY7XZ4PB7k83nuZlGH/kEC5MMOSowkRwMSjJIwNxwOIxKJDE2lSqUSSqUSKpUKWq3W0GYnk8lQq9UgCAJisRiWl5dhMpkQCAQOnAZF74s2adqoiaLl8XgwNTUFt9sNs9kMnU7HvrlikKiL3GZKpRIKhQIXz4VCARqNZmgNHWe0221Uq1UUi0Wk02mkUimOgxa/v3K5jEajgcFgwFoSmg6TBVu32+X7p1wuo9/vQyaTwWg0wul0wm63czNtXNamTqeDbDaLWq2GTCaDUqkEpVIJv98Pk8kEt9sNrVYLtVo9tnvM04D22V6vh2w2i2w2i0KhgK2tLeTzeWQyGdRqNb4/xI0LOoAOBgN4vV54vV7o9Xo4nc5HmgE8a4xc0SyXyxEKheByueBwOPDZZ5+h0WjwKF/Mv3zYuN5oNOLVV1/FsWPHEAgEXqqb82FoNpsIh8Oo1WrY2dnBzs4OCoUCbt26hWKxyF1YGp1QIIZ4QZTL5RyIYTQan4j/qVAo8Cd/8idwu91oNBpIp9Not9ucQif+nNRqNf+x2WyPfDjEhymaONDG2G638Q//8A+sjN87LiS1fKPRgMvlwrFjx57wyo4OxB3BnZ0dJJNJlEol+Hw++P1++P1+/PCHP4Tf70cgEEAgEIBKpTrwIuZFwmQy4ezZs/D7/Wx32ev1UCwWodFoUKvVDvolHggoMbJer7OTAVHdqtUq7ty5g5WVlfuEulRkNxqNoZ/X6/VQKBRQrVbxL//yL7hz5w6OHDmC//pf/ytmZmYO6F3eQ6vVQjgcRqlUwvb2NmKxGFtT2mw2XLx4ET/84Q+h0+lYb7Nf4UaCtVarhTfeeAOBQAA3btzAzZs3Ua1WsbS0hJ2dHRw/fnzsi2ZBENihamdnB1euXMHu7i5PHfZ+Le0RR48ehV6vRzKZRDKZxGAwwNdff82HVbqHms0mFAoFJiYmcOHCBfj9frhcLhgMhrEpmkulEj777DMkEgl8/fXXCIfDmJ6exk9+8hPMz89jYmKCKabj8p6eBdrtNnZ3d1Gr1fDVV1/hypUrKJfL7FBDBy9yTROjXC7jiy++gEajQSwWw8bGBiYmJvCTn/wEPp/vhb6PkSuagXtCLYrJNplM0Ov1Q6cysQjtQVCpVLDZbHC5XNDr9S9t0bw3YanVavHJPpFIIBwO82iRXATIVokEfuLrTQ85WZk9aUeOEo8UCgWHlbTbbTgcjiF+F9k6qVQqqFQqDjR5mvdPHXWXywWVSoVut3vf/UDczGq1OrZ8VhoLEj2JRp7UOdVoNLDb7fD5fDh69ChCodChcgp5ElCnud/vD/Em6YBIk4jDCLICI4jfJx0oK5UKstkscrkcKpUKtra22DYrmUw+dFwufrZoqtPr9ZBMJtFqtdiP/aBBOodKpYJarYZms8lWg1arlQN+HiV0pimZ0WiE2+1Gu93mZ6rX66FUKqHf79/XiR03UDFDByqiX+RyuaG9gT5/Wr9p3bFarWg2myiVSrwPiRsudG3IDMDtdnOneZwsQDudDtLpNPsy070eCATYKeOwWXk+DmhfKpfL2N3dxfr6OiqVCqLRKGq1GhQKBdcZ5JRCB69er4dMJgOFQgGbzcZ0r4MQbI/0J2c0GnH69GlYLBbcuXOHLclIhPCobpDYJ/JlRKlUwtLSEkqlEos3qtUqn+xofE+xnnQD0ngyGAyy3Q+NJ4PBIPR6PQwGA9MmXC7XE70uimSmkJFer8fjOzHE6umnPZG3223EYjGUy2VOwGu1WkOx3OTlfOTIEUxNTcHr9Y7lISufz+OLL75AJpPBysoK7ty5g1qtBplMBpvNhuPHj+Ott96C2+2G1+tlgdbLCJVKxYcoo9EI4N69Eg6HUSgUcO7cOVSrVZ5qjXtHiGgXvV6PubfEuxUX0K1WC+l0Gs1mk7s/7XYbuVyOx6Zut5vFXY9zwCSXBBL4PK6F6IsAKfa1Wi1sNhscDgfm5+e5w/kk64BWq8XU1BT0ej3u3LkDuVzO9K9ut8u2dgDGzouXbNNKpRKuXLmCr7/+GoVCAZVKBTKZDB6PBx6PZ6jRQYItk8mEUCgEnU6H3d1dxONxpNNpFk2SjzwdPrRaLfx+P44cOTJWgSb0WddqNWxsbGBjYwPtdhvBYBB+v5+LvZdtzaVDczqdxueff47d3V0sLy8jkUig3W7z/utwOOB0OqHX61mbRGFCRM8gGuXu7i5MJhPv5S9ShzMWRbPf7wcAHhXG4/EhhfZ+EHfdxkVA8KxRLpfx5ZdfIhKJMIeIaBnErxPbvQD3Cma1Wg2r1YrFxUU4nU7mEDmdTpw7dw52u33IhP1JuwDEVRYEAU6nk//9edz0rVYLsVgMmUwGiUTiPloGBZmYTCYsLCxgcXERHo9nrDY0Qi6Xw7/+67/i7t27rOanRESr1Ypjx47h3XffhdFofCyO+GGGSqWC0+mEVquFyWSCTCZDo9FAJBKBRqNBIpFArVbDYDA4FFxvMV/76tWr+M1vfsO8d3G3hiYutNF1Oh3u9lBx5HK52C3jcacyVJw+zXTqeUEcuqHRaLi7PDc3h8nJSTidzidaB3Q6HaampnjCKZPJuEtGFIROp8ONgHFaY2q1Gr755hvE43FcvnwZly9fRqfTQbfbhVwuh8fjwYkTJ9j1QqPR4MKFCzh//jw/YwqFAul0Gul0Gmtra1hbW0O9Xme3GhLoGgwG+Hw+HDlyBFqtdmz8malJV6vVsL29jbt378LlcmFiYgLBYJCL5pcNRPXMZDL44osvsLa2hkwmw6Fm5MU9OTmJubk5OBwOnDx5EmazGcvLy1hZWUE+n2dqZa1WQzKZhMPhYP3Fi3yeRrpoVqlU7MowOTnJ46BqtTpED9gPnU4HmUwGu7u7UKvVL0VQAW0AlUqFxx6JRIJTiMitgpxKyEBeoVBApVLx3zS6Jm6f0+mEw+GA1WqFwWDgcdl3HZk9j8+DNngaMedyOWxtbTFVYW8qFR0K5ubmYLfbYTabodFoxupeITFTqVRiHmq9Xme3GQpsMRqN/PmO0/t7Xtjr+UlFFI3SyX3FYDCM7TiVusP1eh07OzuoVCqIxWIoFAr7Fr4k1qGGA02B/H4/9Ho93G43F81Wq5U3rV6vx2l69P17BcLEmx+V+486XP1+H5OTkzhx4gRcLhd8Ph8LZZ/mZ4q7yHRPkVdxPp+HwWA4EAHTdwEdeEjzQocpSlC12+2YmJiATqeDyWSCWq1mLrJSqeT9mmhjhUKBxaWDwQAKhQIajQYej4f1LaRPGYV75XFA1INsNsuUOJPJhGAwCLfbPVaf97MCceB3d3c5SIqmn7QnTU1NwWg0siWjyWSCx+OBXq+Hz+dDpVJhO1myiSWdEhkZvMjU55HeCSglsNvtYnJyEm+88Qa2t7fR7/exvb3NCuX9QGT8zc1N/OAHP0AoFBorXtSTgjpJ3W4X169fx/Xr15FIJPDJJ58gk8mw6ECpVMLlckGtVuPkyZM4deoU9Ho9XC4XNBoNeyPrdDr4fD7e5OjfaREc1YWMFvelpSVcuXIF6XQaX3/9NVNR9hrsX7x4ET/96U/hdDpx+vRpWK3WselsAPcWpVQqhVgshrW1NWxubiISiXDBo9VqsbCwAI/Hg0AgwEr0Uf38Dgp0mOr1epDL5Ugmk7h16xY8Hg+sVutYduVpw0okEojH4/j1r3/NoUK7u7tczO39HnGoEXDP7um//Jf/grm5OebAk+sBif8ajQZ2d3fxm9/8hp14xPQ5uVwOg8HAdK5RKCC0Wi1CoRC63S4CgQDeffddaDQauFwunoY9yXNCUzd6vihimwJ0wuEwrl27xrZjo3ANHhck+CRXA3pOiLb36quv4qc//Sl0Oh0sFgvTngwGA0fWt1otXpdpElav13lfcjgceOuttxAIBHDkyBFuzozDWjUYDLC1tYWbN29iZ2eHvbrn5ubw53/+53A6nY9ty3qY0O/3ce3aNfz6179GNptlS0a3241QKITp6Wn8+3//7xEKhaDVanl/0ul0bNE3Pz+PjY0N3L17F7VajXUChUIB6XQaDoeDue8vAiNdNFMngE6itFiTf+PDiptOp4N8Pg+5XP5SKOFpUWu1Wshms9je3kYmk2G/YhJXUrqVXq/nuGSDwcA+yES7UKvVsNvtY1NAirmD3W4X+XwekUgE6XQakUhk34JZqVTC4/Hg6NGjHCE9bg4SgiCwJzPRl+r1Ov9/hULBIR56vZ754Q/biMTOCPvhMB8+gW9tGUulEvR6/RNZKo4a6H1kMhlsbW0hEonwJOpBoK46FTNGoxHz8/M4fvw4+xTTGLrX66FcLqNarfLasp/LBFlIkrB7FOguCoUCBoMBgiDAbDYjEAhALpc/tRWYeHIhLvZo3anVasjn85x2O64Q03UUCgWHT3k8HhgMBravJJDtZ61W40McdWO73S7br9GhKhgMwmKxjFWXWRAEVKtVJJNJ9vkG7oVy0PsZp0PSs0ShUOAuMx2eyKiB9t+5ubl9v5dqv1KpxNoS8dSDus1E+XoR98tIF83NZhPxeJxHpcViEZFIBPF4HNls9qEKbOoYBINBmM3mF/iqDwbVahU3b95ELpfD119/jZs3b0IQBExNTWFmZgYLCwuYm5tjzplarWauFf0bjcOIejEKG9vjgNxAxNZYly5dwo0bN1CpVIYiXOVyOSwWC06ePAmHw4FTp07B5XLxgWFcQIekXq+HfD6PWCyGZDJ5X+eQigBxPDZRcR70c6kTSYcwcdFosVhw7NixQ/9MiT28R4F/+zQYDAbMQU0kEkin0/sGQgHfhr6YzWb+fE0mE2/6MzMzfIhWqVQYDAZQqVTo9XpIJBJYXV1FLBZDPp9HtVrlkArqGmk0Gpw5cwbvvPMOfD7fSHTdxHoMsQf904IaO0RXcDqdLMAWBAGNRgOFQgEGg2HsDmIkctTpdEgmk9ja2mI7TxKXfvLJJ3C5XDh//jwnbdL69NVXXyGbzeL69eu4e/cua5IMBgOmp6cxNTWFQCCA1157jW0xx6VgBu7dP8ViEdvb2yiXy7BarUxrIk/hcdpfniXENQVNYIj+OTk5+URTPKpJ1Go1Gxa8aMrXSH+KzWYT29vbbHydyWSQTCYRj8eRyWQe+r1qtRperxeBQABms3msHsCnQa1Ww9LSEiKRCL7++mssLS3Bbrfj7bffhs/nwzvvvIO33nqLbzbxDSy2eRs3CIKAUqmEnZ0d5HI5jsJdWlrC8vLykOiIHl6bzYY33ngDoVAIJ0+ehNPpvC9cZdQxGAyYW0hxvdls9r6CiPjrtLjQpv4gUNF8/fp1tFot9u4mTExMYGJi4tAVzXvvfXF4x7gWzRQoQvQkKpr3AxXNNpsNFy5cYMW/1+uF2WzGzMwMu4wQDAYDer0earUa1tbWkEwmkc/nh36HXC7nOORTp07hz/7sz6DX60fm/nmWUxMqmmlK53Q6oVKpOPCFEtAsFsvYdZpJ5Gi1WrG5uQmXy4VarcYUi9XVVajVakxPTzONh/j0qVQKly9fRiQSwfr6Ora2tlj0p9frMTs7i9dffx2BQADnzp1jIfa47UfU1BsMBkzzo2doXCa2zwNyuZzpncC3WqL5+Xn4fL4nplVQc0+tVnNi8Iu8viNTJYhN8guFAvtArq+v3+cJ+TjefAqFAmazGXa7fexG7g+COEyAXCAajQaP58lI3uv1YmZmBg6HA9PT0/B4PHA4HNxNPQxJROJ0oXg8jtXVVRSLRcTjce4676fSp+6SRqNh/+9xN5nvdDpMy6Aijz5fuVwOvV7PlKa9nzt9H12nwWCAZDLJvFRKNSN0u1188803SCQS8Hq98Hg8Y+kGcJixX9LdXms54Fv6BW1iDocDPp8PExMT8Pl8cLlcvH4+6EBJ/tbtdhudTuc+pyKKQ7ZYLDCZTIc6CU3sZU/Ugr3rysNoT6MMWkf6/T4LuARBgEKhQLvd5gOB1WpFqVSC2Wxmn+/d3V2kUil2P+j3+1Cr1XC73TAYDAgGgwgEAnC73dBoNGO1FotFaWTRqNFo4Pf7YbVaYbVaH/h+xOmbdM98F3rQOIFMB2hd2esyU6vVmGaZz+eRTCbR6/XY9cjhcGBmZoYPqS+SMjgyRTNdoEajgY8++ggff/wx+/GRJQ1xWKrV6iN/nk6nw9zcHE6cODG2FmJ7Qd2vXC7H466NjQ1sb2/DZrPh1VdfxeLiIiYmJnDx4kVYrVacPn0aNpuNxUzjxBN7GDqdDpLJJKrVKj788EP88z//M1qtFoeTUBT2fqADldVqZcHBuF0TMX+SHBHIuQAAF85arRYTExOYnZ2F3W6/L3hie3sbKysrvHD3+31cvXoV165d441QfEhVq9X46KOPoNfr8e/+3b/DX/3VXzFXdZw69YcZ4qS7zc1NhMNhXkPFoOdAq9XinXfewdtvvw2Hw4ETJ05wp4yoPA/iY4oDkyi2XgydTsdCVPLsJceFwwgaQ5Mg8LAcJqnItVgsmJqawuzsLNt41ut15PN5rK2tod1uY3V1FdVqFZcvX8ZXX32FarWKSCTC7k3EIX/zzTeZknH+/HloNJqRmUA8LlqtFuLxOMrlMra3t7G9vY1QKIS3334bc3NzmJmZeWDRTOmbjUaDhadEKz1s/Oe9ezG5YWg0Gp6a0qGjWCxieXmZY9rT6TT7xVutVrz99tt45513uHC2WCwvZ9FMp65Go4F4PI7bt2+jXq+zYOBJvZbJ6cFoNB6akxvdXPV6HalUCru7u9ja2sKdO3cQDAbx2muv8elWEARYLBZMTk7CbDYfuo1KnOaVSCSwsbGxb6drP4hpKSQeFHMaHydx8qAh5tzSQbJer9/XTSSxE53Ixd8/GAxQqVSQSqXYrpA6zalUiukZVDST72w0GoVKpcLrr7/OItuXmbM3auj1eqhUKigWi2w1STZwBOoy04icfHGtViv8fj8MBsMjfw95LxP3nezDxL9DpVKxyJacdw7TOrQfHkZ5G/V15UEgOgWtJ0ajkVPcgHvWhjTVKBQK0Gq1iEajWF1d5cN3p9PhSZ9Wq4XH42EaEE2sxg0kiCUxLKU+ut1uTExMwGKx8OctzkQQi41rtRqHe+n1erbbG9d7ZS/EwvK9xbPYlaVer/P9Q02gdDqNXC6HbrfLmQNerxcLCwswmUys0XmRGJldjlTYJPgrlUqsrn2acJJarYaVlRW0Wi3unIzjQ0mgYmVrawuJRAJffPEFUqkUBEGAz+dDMBjE1NQUQqEQdyBpQyQO0GFCs9lEOBxGOp1GNpt9LO4pjYByuRw++OADXL9+nTm6VDjodDoe/9CGP4rFYKfTQSqVYj/ueDzOIy3g2wAZcisQu82ILaCSySRisRjq9TonwVEIDBVZxIPXaDRsoSUIAu7evYtf/epX8Hg8ePPNNzks5GVLvBo11Ot13L59G7FYDDs7O/cVzGazGRaLBTabDadPn4bdbse5c+dYlPOwLheJu1qtFjKZDOr1OjY3N7GzszN0/9Hv8Pl8mJmZQSAQgM1mOxRFwMNAARd0nYgiRocUGiWP23WgYpcEoGq1esglhaYYu7u7+PDDD2EymbC1tYVSqcRjd5lMBp/PB4/Hg8nJSZ6KjnOGQrPZxNbWFpLJJGq1Gtufiae7ALgZWKvVsLW1xdMfak5QqJjT6cRrr70Gp9OJQCAAn883ttcGuLfn1mo1ZLNZVCoVblDFYjFcvXoVer0eq6urUKlUyOVyyOVyqNfriMfjaLVamJiYwJkzZ6DVapliSgFkZE/3ojEy1QB57xGHhTxAHzdxai8ajQZWVlZQLBZht9tx7NixZ/yKXywGgwGi0Si++uorxGIxXLp0Cel0GouLizhy5AgXzVNTU0NjwXF+4B6GVquFSCSCSCSCTCbzWCljdNLNZrP4wx/+ALlcDp/PB5/PB5vNhpMnT8Jms2FhYYGt+Ea1g0r0FHLOiMViHDhAByaz2cw+qsRLlclk6PV6HBJEwtpcLofbt2+jXC5zJ4RGzCqViqPUyeKn0+ng7t27KJfLmJ+fRygU4mJLKpoPFlQ0r6+vIx6PDzUeyD3G7/cjGAzie9/7HgKBAGZmZhAMBh9JVaKCuVwuY2trC/l8Hpubm4jH48xrFv+OiYmJl6ZoFqfQioWkBKK5jOvkkwp/lUp1n987if5IHAjgvvdPFp+nTp3CxMQEFhcX4ff7h7qx4wYqmol+QgJQmvjS3tFsNrG+vo5sNsv003a7zVoDWmuDwSDnUsjlcni93rG9NoRms4l8Pj+kuUkkErh69epQCBB5d9M+LZfLEQwGcebMGbhcLpw5cwY2m43XqIO6LiNTDZDyuNfrsVdjo9FANptl+6InAY2tyYx93EEpdxQJTZQVnU7HaX3UxRh3YdvjgDy8aXGyWq2cSkbdnodNKHq9Hkcnl0olDAYDxGIxVv63Wi0uEkn4YjQaWfR2UKAFhd7r3rE4dX9MJhN3PYxGI3c8Wq0WarUa0uk0SqUSC3TIlk8mkzHXTKPRwOFwDLlvlMtlFgfSayBazDgKnA4jlEolrFYr7HY78vk89Ho9b0J0UFxYWIDX64Xb7Wax3+Nw+4m/WigUuGim8SnFUdNmT7+DiohxDIh5EgiCMOQd22w2mcML3Jv+kCByv4M4UaTIa572sMFgAK1Wy5/RQScqkpB6v+RUWpvEa4FSqWTRtdvtZtEfrUuj2JR4XFADIpPJQKlU8nsj/RBw75q0221OKAaAQCDA3Xe5XM4NQqvVilwuh8FgAL/fj+npaXaJGFdaE+2ZYsoJcZgJg8FgSHdBaxU1bHQ6HdRq9UjcKwf/Cv5/6PV6LCwsoNPpoNFoQKPRIJFI4OOPP+ZO4pPQNHq9HnNknrZbPUoQBAGbm5v48MMPUa/XUa1WIZPJ4Pf7cfbsWXi9Xk5iGveT6eOA7heXy4VGo8HXJJlMsnPAow5bdBBpNBpQKBSIRqNQKBTQ6XTQarVwuVx444034PF4cPLkSZw8eRJqtZpDQg4CvV6PXVOKxSIr0oFvefwajQazs7NYXFxEKBRCMBhkz9hsNotUKoUvv/ySU++Wl5d5fE9qdr/fD6fTiQsXLsDpdPJGuL29zbQQKpppYx9nHKaC32g04syZM/B6vVCr1Xx/EM3m/fffx/vvvw+j0YhAIMA+yo9aNwaDAXZ2dnDz5k3s7u7igw8+QCKRQKVSQbPZZKs1vV6Pd955Bz/5yU9gMpme6HeMM4hiWKvVkMlkkE6nWcCuVCrhdruxuLjINCYxKNGVfI2LxSLq9Tp2d3fRbrfZy1ir1cJutx+YUIymWHa7HZVK5bGKGJ1Oh5mZGVitVvzJn/wJ3nnnHQ6TMRqNY1sMAvdooLdu3cLt27fx5ptv4t1334XP54PdbodSqeQGTqFQwOeff46NjQ0cOXIEf/VXfwWTycTe17FYjL3UL126hFKphH6/D4vFAqvVipmZmcfSGYwiqPAFwFNK0uAA36691NykiYZGo4HVah2qbUYBI1M0U6d5MBjA6/VicnISwL0NoFQqQS6XP9DbksbJYohP7HSCH2cIgoB6vY5MJsPCLBqTmc1mGAyGQ99dFkOpVMJisQAAHA4HHA4H1Go159oDw/ZOYuEc8K0ogzY1AEP+sjKZDB6PB16vF81mEz6fD41Gg7s+B7XQi9OQms3mfadzjUYDrVYLq9UKt9sNp9PJneNqtcqilXQ6zclc9HwZjUa+n1wuF3w+H+bn5+F2u7lrVqvVmH6xN/zjMNOBxgkqlQp2ux2DwQB2u50dCahwJTqGTqd7bM4+UQ9IOJpIJBCJRJBIJPhrqCNmMpng8XgwOzv7RL9j3NHv99HpdPjATlMYAqUrarVa7sgC33ZnScNTqVSQz+dRq9WQSCTQbDZhMpngdDqH1rCDAnnaEwVwv71VLISk9DeHwwG32w2v18vUt1EphJ4GVGMQrVShUAzFxNM1IEtGyps4efIkpqamYLfbcfToURiNRqbRyWSyoWTBQqHAlLpxhUql4hRROjjTHrbfZEImkw3RgPR6/VDn/qAxciuZTCZDIBCATCbDxMQE+v0+hzbspVnQhl0qlbCyssKig4NeVJ4HZDIZTCYTF29EKaDucyAQYDN1m80Gm8120C/5uUKtVsPj8XDhPDExwcKKZrOJer3OHpjk55zL5XgzIvHbg0CHlJWVFUSjUdTrdSQSCQ6KcbvdL+qtDr2mcrmMXC6HaDSKzz//HLFYDOFwGIPBAAaDAUeOHIHdbmcbJypYqtUqVldXsbS0hEwmw+mRxWKRN/Pp6WmYTCacO3cOr776KgwGA99Hm5ubuH37NlKpFE+CHA4HpqamWMxjsVgkPvMIgNLb3G43TCYT6znIPm5xcZHvi8fZiFqtFtLpNOr1Or755ht88cUXKBaL7JxCP8NoNLJIJxQKsXPRqGx2zxq0/9C0hdYIclIQFwI0Kfzd734Hs9mMqakp6PV61Go1FlDW63V0u13OJOh2u6hWq+j3+5xV4PF42O/6RYMOTqVSiWmCD5viEj0sEAjgz/7szxAMBjE9PQ2n0zkyo/anRb1e52lfu90eCtASNw+oSVGr1eDxeNDtdrGwsIDFxcUhVyOv18s0uFOnTsFms6HT6eDy5cuYmJjA9PQ073XjBIVCgXPnzkEul/PkhBowlC9x7do1FItF/h6tVotQKMTuX06nc6QSe0fjVYhAlAOfz8cm6aVSiXliYlCHORqNMs8XwKGgY+wHslshSgEp17PZLKanpzExMYFutwuZTAar1Xqou34qlQoulwsAEAwG2Y6vUCiwwKLZbHLwR7vdxtraGtbW1rh4fljRDNyLJr99+zYUCgXS6TTW19exuLjI0dsHcX0rlQri8Tg2NzfxxRdfYGtri58DKpqDwSAuXLiAixcvYjAYoF6vo1arYX19HZ9++umQ6I/ESUajETMzM0xJeffdd/mgUa/XsbW1hQ8++ACNRmOoaJ6cnEQgEBjqaI4jDtOzQpuOIAg4cuTIfZ3AJ9U8tNtttoC6efMmvvzyS+a0i3+mXq/HkSNHEAqFMDExMfaj94eBCkjiYlarVba/LJVK9xXN/X4fGxsbqFQqMJlMmJychE6nYx9aoiVScBVNzCi9tVQqoVgsYmZmBmfOnIHT6TyQ9zwYDFAulx+YQCqG3W7HzMwMjhw5gh//+MeYm5s7FHobikSnpoO4USd+f+QcQT7DLpcLKpUK8/PzWFxcHBJSUlCUXq/HqVOnmNt85coVlEolvPfeewf2fr8L5HI5zp49i1deeQW1Wg3hcBi1Wo09mbe2trC5ublv0Uy2fS6Xa2QKZmAEi2bg2zGvWq1mBap4jE6gk36n04HH40Gn00Eul+O2P/k+E49GEIShG3XUIBZ+ULAA8O31cDqdWFxcRLFY5AeS1OylUgmRSAS9Xg86nQ4ej4dHHKP6fr8rxCNAWqjI7YLsnbrdLtRqNTqdDoLBIPPEMpkMTCYTHz7EIkIx6B6r1+vc7Umn0+wRaTKZXtj7pXuduhxkaUVQqVTsfWq1WjmtKxaLcXcol8uxkE8QBDidTqZxzMzMwOl0wmQysRJ+Y2ODY7qr1SoGgwF3KalzFAgEDl2HmagG45ZQRniWVBlyqiE6D4nU6FmxWq2w2Wyc7Obz+WAymcbiuolpW/SH1oFOp4Nut8tr7N4ROV0H8ieu1+uIxWKoVqsoFApDawl1pMmusVAoQKfToVqtotlssgBXJpPBbDZz2BBZRc7MzCAUCsHn8x0In5ksBmu1GnZ3d5HP54dsKfdC7HVPHNVRKny+K4iK0+l0+BqQ77l4ukL/Zjab4ff7OVRrr+0gXSsKN2m32yiVSnyAetB1HgfQQYKof1SDDQaDffVBYsGo2WweufplpO9inU6H2dlZPtHvR7sQBAF+vx+ZTAaxWAzXr1/nzjT5zqbTaVaRm83mkeVRtdtt5rCRVzApTxUKBS5cuICJiQkWC6TTady+fRu3bt1Cu93GP/7jP8JkMuHnP/85c1lpFPYygBLOxBugeEOcn59Hq9VCPp/H/Pw8stks7ty5g7t37zJ/cD/xIG1ydEj57LPPEI1GcerUKZw4ceKFFgfVahW7u7vIZrP3HSKtVivefPNNnD59mp0+stksfvnLX/KJfmNjg4sAuVyOc+fO4Uc/+hHsdjuP7VutFhKJBLa3t/E//sf/wPb2NnunU/Kkw+HA9773Pbz11lvQ6/WHig5EhUsgEGCu/MuMTCaDX/7yl1heXmYrUFqLlUolTpw4gddffx0+nw/f//734fV6uQAcZRCfkoImaGRMFK9sNotsNotarYadnZ2hyRSFupB7AtEpyBObrBvFqNVq6HQ6LM4k3/NOpwOLxcJ5AnTwIAGVUqmEy+ViAaHD4XjRlwq5XA7/9//+X0QiEdy8eRO3bt1Ct9vl6e6DMA4Hp6cBBUqRzkUmk8FoNDJlkJpVtA4Tn7vX68Htdj/w2TAajXjllVcwNTWFRCKBcDjMLk7jDooXp1RjrVaLQqFw32HKbDbj9ddfx+LiIlvvjRJGumim9KGHQRAELjIbjQZ/PXXlSJTR6XSgUqlGUhBIh4J2u81KdIPBgF6vxxZyMpkMDoeDC//d3V2o1WqEw2FOJYrFYlCr1Uin0+wIcRj53Q8CCQgeBOKEmUwm5HI5mEwmtl2Ty+XI5XJD/DQxiLdYLpeRyWSg1WoxMzPz3N7LfiDhCW3w4pGguEvh9Xr565vNJmKxGDY3N9npYDAY8BTC5XJhfn4eNpsNoVAIBoOB+YrZbBbr6+tYX1/nboFcLofdbofX60UgEMDk5OShHMGTTdYoCVBeNOjA2Wg0+B7ab7O3Wq2YnJyEz+dji7lRhvgwTUUu0Y7IUo8O0clkEuVyGevr66hUKkPpbjTpIdu9B+0t4vuH1vS9AkGNRgOn0wmn04np6WnMzMxArVZz0Wy1Wg+E00rXqtFoIBqNYnt7G4lEAoVCgT3h91IuxF3Rw7r/9Pt9PjTR5y7uNNN9QiI4sgwUBIEFf/uBRJMktKSp4jh3mgk0OaHJrUajYYtUupcAcMiL1+uFyWQaucP3SBfNj4JYCHjjxg2sra1hZ2fnPlL+QZth7weKDe92u1heXsadO3fQaDSQSCTQ6XRw+vRpnDp1CkajkRPrlEoldDodbDYbjh8/Dp/PxxsZPcTkgUgpQ4d10fouoAmG1+uFw+HA8ePHsbu7i9/+9re8SZZKpX2/l9TthUIBzWbzhR/C9nojA/e4g3a7HZOTk9wVrdVqbDFHccpUaJvNZhw/fhx2ux2vvPIKB5NQp+2bb77BpUuXmJ8pl8sxMzODmZkZ+Hw+tlWanp4+lAUljcqtVitMJtOhPBQ8CoIgIBwOIxKJYHV1lZ1lxJsbcO9akWBn1LvyFDiys7ODnZ0dXm8pzrhSqXDjgmyxqtUq2u02H6jFMeB0HcjfHLjfutBgMGBiYgImk4m1OjqdDl6vd0jMp9frEQwGodfr+XlWKBQs3nyR9Cfam3q9HlKpFNLpNCKRCG7fvo1IJIJ8Pg9BEKBWq2GxWLi41+v1fEgnPcneA/5hhkajgclkgsFg4HuENCOCIHDT7mGTbnGjUKvVjlTN8ixRr9eZE04GD3vXllHFWBfNJMaoVqu4efMmrl+/PmR/RdQGOgmPUuFMvpzNZhNXr17FP/3TP6Fer6NQKLBCmbw9XS7XEFdXoVDg2LFjaDQa+Pzzz9n2h4pmEk3SqU7CMMg3VBAEHD16FP1+nw9c1Kkul8v7Xjuy3aIN4kXjQUXz/Pw8i4vE9oTiopm66GazGefPn0coFMKZM2cwOTmJXq/HscjffPMNfv3rX6Ner6NUKkEmk2FmZgbf//734ff78e6778Lj8TxWGMa4gjxCjUbjoeJiPi4GgwEikQhTkcR2jHs3N4vFwoXhqBbNRMXo9XrY2trCl19+iXw+j9u3b6NYLPIGvpeHTP9NawGFehBHk9ZehUIxZCNHIHGk2+3GK6+8gjNnzsBkMnEjhCDmANN/i/9+kaDOe7vdxtbWFpaXlxGNRrGysoJ4PM5fR9aGRqMRLpcLHo+HE33Jc5o0RYe9aKZJn8lkGgoiIWrl40Iul7N97GHTiRBockGWeuKpi9gmdlQx1rtBpVJBsVhEOp0eSl4Cvk3FstlsbH00SqK4ZrPJqlFKouv1eiwScLlcsNls+3qc9no9FItFVCoVFpbQaEir1XKCzriKmF4E9gpVNBoNp/49bOOXy+VQq9UHmmQlXlj2TlPEXyP2UN5rf9XtdtFqtbC7uwutVotut4t8Ps+LGXCvS0ZBCnNzc/D5fMyrfBm6r6OyVrxo0P3VarWYLiYueqhAoLWV9BOjTGVptVqIx+Os4I/H4yzgI+s8GpvTyJjWU+Dbe0EcSU9fH41GEY1GhwSS1OAwGAwcWe71emG1Wvlajaq2huh+5PwQjUY5NEoQBFgsFpjNZpjNZszPz3OhqNfr0W63hwrGvcK4wwpxs+67gOhQxH8XN/wOG/buW1qtln2Zqdk5ihjbonkwGGBtbQ1Xr15FOBxGuVwe+v9GoxGnT5+G3+/HwsICJ/SMymafTCbxP//n/8Tq6ipSqRQymQxcLhdee+01eL1eXLhwARcuXIBGo7mP112tVnHt2jUOGBAEgb1ZLRYLpqen4ff7WXkt4cGQyWS8uFOQSSaTeaBpP3VXXC4XDAbDgS1me3/vw6Yo9B7pa7rdLjKZDAaDAW7duoVKpcKTD6L56HQ6BINB/OxnP0MwGOQAGa1WC6PR+CLeooQDAoncSqXSfaJTusdsNht+8IMfwO/34/z58/B4PEOOP6MGEjOGw2G2niQHBEEQOIyFHJu0Wi0mJydZiESe1iaTCWazGWq1mpX9//AP/4B/+qd/Qq1WY99evV4Pk8mE6elp/PCHP8TCwgIsFgssFgvHA48qWq0WdnZ2kMvlcOnSJXzwwQdoNpsol8uQy+VYXFzEq6++Crfbjddffx0OhwO7u7tIJpNDnXiySHU6nSP9fp8Wz6Mj2mq1EI1GUSgUUKlUoNFohjjShwVEPSL6EWm2fD4fpqammOIyioXzCy2axQ4YdDGeljIxGAzYRiuVSt3nJECEeo/Hw4vcKH0AtDCtra2xWHEwGHCSG42GFQoFc/GAe9er0Wggk8kgmUxyfjs5R5BfLqXAjdJ7fhbYm0BHf3/XRYUKZ8q4fxCoK31QBxLx6Vz82YrdQvb7Iwa5BdRqNcTjcbYqpHuMwnGsVisWFhYwNzfHi7dCoXgp6QovCyj2lxxWyBKNKBl0ANPpdPD7/ZiamhqaPozq5t5ut7Gzs4P19XXs7OwgnU7zs0xdY3ofdrsdOp0O09PTmJub43teoVBwl5WKZkEQ4PP5oNFo0Ol0huxSDQYDrFYrfD4fJiYmeNo5yqApVLlcRqFQQCaTQSKRQK/XYxtPm82GiYkJTgx1OBzsGCKOSicx7WHchwji/ehZUFCoy18ul9HtdoeKysOCvXuTeE0xm80wmUw87RnF9/3cdz+xNc/a2hrW19c5ylWv1zNn93EvDokUaBG8efMmj5XFoM7rwsICHA7HyF18g8GAo0ePQqVSYXt7G+FwGJVKBZcvX8bKygpu3bqFDz74YKgwpNFgsVjEjRs3UCgUkM1mYTQa4fV68dprryEYDGJ2dpbpA6P2vp8G9Jn3+30kk0l2u6CHi+yYnva9ktMKxZzuF3pCP1uj0cDtdsPv97/wjiudxufn55kmMhgMWJgjl8sRjUbZQYX+UNQ2FcWNRgObm5vQarUcxAB8G48bCoVw6tQpBINBeDwe5vWKnVwOO0gv0e/3R55j9yxAhy7yGq5UKlhbW0M4HEa9Xke73YZMJoPb7ebEvxMnTmBychJut3vk7wuy84xEImg2mzCbzXA6nTh//jxcLhd7TJPbgUql4kQ78YicDo/1eh03btxAuVzG6uoqyuUy28mp1WqcOnUK586dw8TEBNxuNx84RxnkCxyLxfDpp58iHo9ja2sLgiDA4XDg/PnzcDqdeOWVV3D69GnuBlL40RdffMHJkcC9PdhisRxqMa34vv8uBwMqIGu1Gu7evYvd3V0MBgMcO3YM8/Pz0Ol0z+olHxh6vR4HjW1vb2NpaQnJZBL9fp8Fs2fPnkUgEIDb7YbFYjmQ5MtH4bkXzWTq3mq1sLS0hN/+9rcc1Ut+k09S8NAYuV6vc9HcarXuK3QoVYaoGaO2oBsMBhw/fpx9cSORCMrlMq5cuTLU1SHIZDLuAJIHdbvd5tx6onTMzs7C7/cfKuUtfeatVgubm5tYWlriGG3yg31amytarChNMJ1Oo1ar7VsokRLa5XKxUf2LvMZUNM/NzaHT6fCCksvlUCgUoFKpEIvFoNPpkMlk+A8VzSRSoqKZXFdI0W0wGKBSqRAKhfDmm2+yt+iLDHAZFYg9fF+Woplimzc2NpDJZLC2tjY0hVAoFHC73Th69CimpqZw7NgxhEKhkeYyE8RFM9EkJicn8dOf/hRzc3OcyLZXjLf3+ab7oVwu48aNG4jFYlhbW0Pl/2PvO5vkOq/0ns455+4J3ZMHGSACM0WBorSSdrXeWlsulav8xbU/yy6vvetde+3VUpJXpEiJCSABkMgTMLF7Oueckz/Q5/D2YAZxAHQP7lOFIjiYAbpv3/u+5z3nCaUS+v0+0xNOnjyJX/ziF1ycj0KHuVgsYmdnB+vr6/jyyy+xsbHBlC2LxYKLFy9idnYWgUAAgUCAu6K1Wg2bm5u4fPkyp71JJBIO9TisyZC79+enAWlQyuUyVldXsbW1BaPRiCNHjsDv9x+aorlQKLCu4Pbt2+xnrtVqWZjudDq5aB5GPPOimRYrYShDo9FgWxqn04lyucwjMPLaJY9h6pDRwk02QaVSibl27XabNzYSc9ntduh0uqEVLVHqDQD4fD6MjY2x5RcZ3u82NO90OizKIRqBz+eD1+vF5OQkrFYrDAbDwIhslEHdL3rISqUSNjc3sbOzA5PJhLGxsSdS7AsDT8rlMnuy5nI5tmbbDeogEVeRrvPzBo2yhL/o/VQqFWxubg4ELlCneXfHVDhKpMOAyWSCXq9nyysy6X8Z0Wg0WCdxmIJbdoOKQHI9yGQy2NzcZGV7t9vlcA3yJp+ZmeFJC42PRwH0DNAzROJfo9H4ULoVHa5zuRyy2SxisRjC4TCi0Shv/Gq1GmNjYzAajfB4PDxqHhU6EyXLlkqlgWwDWhtsNhvsdjtPnsi5iuwtd6f2Em/1sEw8haCJBAnu5XI5ms0mstksX59H3Zf6/T7y+Tzy+Tyi0Shff7fbzdO+YXWleRTQ/lStVtmyMBwOs3OGxWKBRCKBy+WCw+GA2Wwe6n3nmT/NuVwOH3/8MXZ2dvDtt9/i1q1bUKlUSCaTMBqNaLVa0Ol0bNeiUChYmdtqtTidqVgsolQqIZVKcRrevXv3UK1WBxbDqakpHD16lD1ljUbjUFq3UOpNo9GA0WiEzWZDpVJBIpHgg0EsFrtPtU7+y4FAAFqtFq+99hpeffVV5p8Os+3T46LZbKJeryMYDOLv//7vEQwGEY1GEYvFsLCwgIsXL2JxcfGxO770ALdaLdy9exd3795FOBzGrVu3EIvF9gw4IScJn8+HqakpFg09782AbBSJSkGbV6/XQyqVwn/7b/8NarWaBX0k6CLB026QGMNsNmNxcRF2ux0nT57EsWPHoFKphnI89qzR7/eRTCaxtLQEt9vNlo+HDcKo6G+//RZffvklMpkMvvnmG7Yp7Ha7sNvteO+99+D1enHmzBmcPn0aGo2GfZmHvctMoNcpPPy63W54vd4HrplCu7orV67gT3/6E9LpNF8n8jS22Wz4xS9+Ab/fj6NHj8Lv93OI0LCj1+shnU7j3r172NnZ4VRdKmRmZ2dx9OhRzM3N8UGJJn+ZTAbRaJRt6oTTK71eD41GMzL3yKOAkv7cbjcymQz7uWcyGVy7dg1OpxOvvPLKI+3D1BC8ffs2Ll26hFwuh2AwiHK5jLfeegt/9md/BoPBMLRd10cB7UPhcBj/8A//gLW1NSQSCSQSCTgcDrz++utwuVx44403cObMGX4+hxXPvGhut9tIp9OIxWKcV09dOyqCs9ksjx/ozzQaDRvNU0pTPp9HIpHA5uYm4vE4MpnMgC8mCTV8Ph9cLhd0Ot3QcsmIM9fr9eDz+TA+Ps5eqNVqFfV6ndPbCEKvUHpQx8fHMTc3B51Oxxygw3Kqp/S7YrGIYDCItbU1jrZ1OBxQKBSPdUigE68wVS+dTmNnZ4eDPIR+tATiMtIUg369CFCXjFLEKIqXaFChUOi+7ydQwU1fJ8GSQqGAVquFzWaDw+HgLvMwPjcHhQeN4YV2a3q9/lCkce0H2rSz2Sy2t7eRyWQQCoUGwn0o/tbv98Pv9yMQCIykOGm3iFZ4+ATAe8nusTsdLlqtFlKpFDY2NpDNZjkIiZLNtFotJiYmMDMzw/vPKF0j2m/J7ozEf+QYQrQWumfoQJ7NZlGtVpnOJDycCFPfDhOo06zVajnxr9FoIJVKQSaTodlscrz2XsE3wr2o3W4jk8mwHzr5/1MgDtn2jSq63S7HjgeDQayvr/N0wmw2czPK6XTCYrEM/b3yzItmEryZzWZ+yIhmUK/X8dVXX3EOucVigUqlYnurarWK7e1t5kmVy2VUq1VsbGygWq0yj1kul0Ov10OtVmNxcRFvvfUWb/xkFTSskEgkGBsb4yQ/SqMqFAooFAr7dgfNZjNUKhWmpqa4gCQf6lFaqPdDr9djY/1QKIRgMIh0Oo1arTZARygUCiw0ERaFQpCgKxKJIBwOo1gsYmVlBYVCAaFQiIVP5NcqBHVV5ufnce7cOUxMTMBoND6PS3AfJBIJx4p2Oh386Ec/wuLiIr+HRqPByWW7IZVK4XK54HQ6eaojjOe1WCw4fvw4rFYrpqenh/qZOQhQpCvwXQy03W7nNeVl4DAD34dY1Go1RKNRrK6uslAHAPsJezweHDt2DPPz8/B6vUMv+tsLVPxZrVaeymg0Gnz66afY2tpi+h9NOhUKBfs0VyoVrK2toVgs4ptvvsHa2hq63S47aczPzzNlhZJaTSbTyF0jYG9HIvovOauk02lkMhmEw2F8/vnnCIfDPBXVaDQc3HL69GmcOXMGJpNpqDuHTwIqYim0xmKxoNVq4dNPP+XUR6/Xy516mm52Oh1eZ0qlEt9XW1tbiEQi0Ov1uHjxIsxmM06fPs06k1G8l4Dv9/F79+5ha2sLiUQClUoFZrMZExMTCAQCOH/+PPx+P3w+30i8z2deNGu1WiwuLsLj8TBnhzqHlUqFx4FULNN/HQ4HKpUKNjY2OMpUaB4/8Cb+/+ZvMBiwsLCAN998k23Bhn3zp6LZ5/MB+P40+rBkHKFid9jf45Og1+tha2sLn3zyCVKpFEKhEPL5PF+TTqeDcrmMYrHIllF7uTsIR6vb29u4evUqYrEYPv74YySTSeaO73VfEb9epVJhbm4O7733Hlv6vSjo9XqmM7333nvIZrO4du0aJBLJQBTwbpDzwbFjx6DX6+H1etm9xu12w2g0Mr1nFIuixwWFV0ilUphMJhZr0aj9ZUC320W1WmW9yerqKncLge/E1GazGW63GydOnMCxY8dG9lBOU0iLxcJTy16vh88//xw2mw31eh21Wg06nY6dncxmM8xmM5LJJD7++GPE43Gk02lks1lotVpOQXzzzTfxox/9CAaDgT1mR/EaPQxUNGcyGayvr2N9fR2ff/45tra2uKNsMBgwMzMDh8PBRfMoF337gSbiDocDp06dgsvlwqefforPPvuMQ6AmJydZ7E/dZJpukmXs73//e7Y/lEqlmJ2dxbvvvovZ2VmYTKaRv5f6/T6CwSA+++wzxONxdleZmJjA4uIiZmZmcPbsWQQCgZFZW5550UxZ6hTfS5syJZKRzQ35D7fbbR6XkTCu2Wxy4SMEjaoNBgNbyxE/bZQe1FG5WZ4nJBIJOzqQmFN4iCDFdrfbZcs5ErTt9i8m3ubGxgZCoRDbytHX9yqSJBIJdDodC3t8Ph8sFstQ2CfRtTGbzZBKpZicnOQEL5PJhFqttmf4yezsLGZmZqDRaFjYRbZaw0xlehagEb3QTkx43zSbTRSLRRiNxkNHz6C1tFKpcMx6uVzm50upVEIul8PtdjMlQ6vVjvThXKvVYm5uDhKJBNFoFNFoFBqNBuVyGd1ul21MhXZpNMUiz1y5XM4e+gaDAVNTUzAajRgfH4fZbD4UXcF2uz0gGiZOdrvdRigUQqfTwfr6OjY2NhAOh1lTZDKZ4HK52N3HbrdzoNioXo9HARXOEokEXq+XpwzpdBrdbhcSiYQjxfP5/MAUOZ/P80HDYrHAZDJhcnISFosFWq125O8lqt1IkJ7NZtHpdCCVSqHVamG322E2m0dKFwE8h6KZPJlbrRZb1QDglLuvvvoKly9fZkN16pgpFAr0ej0umPfquhJnampqCn/zN3/DQibqMI/qDScCbCM3NzcHlUqFb7/9duDP4/E4/vN//s/cLXW5XNxxFj6AtCF2Oh0Eg0FEIhHmVz1IHCeXy+Hz+fDXf/3X3DGYn5/nuPIXDY1Gg+npaXS7XUxPT+PixYvodDosxNkNoc83qdopmYzcaobhfT1PkPuIQqEYSN7q9XrIZDKcGreXm8oog8IT0uk0Ll26hGQyie3tbY5/ttls0Gq1uHjxIn7yk5/AarXC5XK96Jf9VPB6vfibv/kbVCoVXL16FdeuXUMul8Pdu3eZBtftdtn/nA5TtKaQl/PU1BSmpqZgNpuxsLDAPF+j0cj30qiCDg1EgaP1Qa/Xo1Kp4H/9r/8FieS72PBQKMR0MJlMhlOnTuG9996DzWbDiRMnuAgcpWLoSWAwGHDmzBk0m01uQmQyGdy4cQP5fJ478DTxFAZz6fV6zM/PY35+HqdOncKpU6eg0+ng8XiG1vXrUVGv19nx6ubNm7h69SofTJVKJcbHx3Hq1Cm43e6Ro+4886KZuIOUoGQ2myGXy2G32yGXy3Hv3j0olUo+4QLgNKqHcQupgDGbzZiZmcGRI0ee9dsR8RxB5vhk4SOVSpm20mg0sL29DYlEgmw2i1wuB5lMxrn1BOJtdrtdDvvY776ijZImFUajEZOTk5idnYXH42E+8TBAJpOxGHGUldUvGsKOM/2eRJXEcz9MnWbyJK9WqygWi0gmk4jH4yyAJSs22rzn5uY41W2UodFoMDU1hW63i1wuxwFJtD4I6XC7g7LMZjNPnLxeL+bm5mCxWLCwsPBCqVoHjb0Cfei5aDabSKfT7IIQDof5z+mgFQgEYLPZ4Pf7X5o1SS6Xw2KxsKA/mUwC+E7Mn0qlWDQpBB3Q+/0+9Ho9HA4H/H4/FhcXuYExLPvMk6LT6aBUKvHeLLSvpIOY3W5n3dko4bm9WqlUiqmpKd6Y1Go1er0ej76EGxMJ/ur1OiKRyH2dHhojE2fK7/dzUIqIwwEKc/H7/ZBIJFhYWIBOp2M+mJD7Xa1WkUwm2Q1iN6eZOsp7ibzoe2ncajAYWLzh9Xpx7NgxuN1umM3mkV/IRNwP6vi4XC7IZDLE43EA3x22yEHgMAkD+/0+dnZ2cOPGDSSTSf4vHSYpdMnhcCAQCPD4dJS7XkJIpVJeU8rlMhYXF1kAvF8Mskajgcvl4v+63W6o1eqRP0jsBjno1Go1zknIZDLs5U3aj1qtxs4RgUAARqMRJ06cQCAQeGH+9S8aRM+QSCSYnp6G2+1m96vd6wdNuHQ6Hfx+P1N8qDE0yvsMdZPD4TA+/vhjhEIhrK6uotfrsbjRbrfjjTfeYNevUZtwPreimTyU/X7/gDir3W5DJpNx0UweqWRFR+R5Ao2MVCoVTp8+jX/7b/8tzGbzoQ4geBkhkUhgNpvh9/shk8mwsLAAvV6Pfr+PdDo9sBCRwf7DsF/xQ7x4KpAXFhYwNzcHo9GIqakp6PX6kV7IROwP4q47nU6mJwDgtUkYnHQY0Ov1sLOzg6+++gqpVAo3b95ELpdjRxqtVouFhQXmMh8260GJRILJyUmMj48D2L9Q3uvnhL/oa4cFEomEi+ZyucyUArL4BL5fP8lVxGaz8Yj9+PHjCAQCHIbyskEikcDj8cDtdqPf7+Ptt99+pJ+jIvmw6JpICxIOh/HJJ59gZWWFA+rMZjPeeustTE9PMy1lFA8Jz7UvTsI9Ia+HRl+0ePX7fWi1WphMJjidTvT7/QHvXKlUyuMN6oQMgzhLxMGD6DdEk1Cr1Szea7VaaDQa6PV6zCUk/2Xh1IIOWUJuHU06aFREYg6y73O5XIdC2CPi0UBCT/p9q9Xig/gojg/3Ak1cyC2Gfk/jeL1eD61Wyz7dFosFGo3mUN77tA8BEPcNAXQ6Hex2O+r1OrxeLwAwRYloa+RCYjQa4XQ6MT4+Do/HA4vFcmioBU8KYeH7st1XdOgulUrsMlOr1ThVUqPRwGKxwG63c6rkKBbMwHMumgnCKODZ2Vl+QIHvLcLI1YDUuUIQB5Hifsk1QcThAnEp9Xo9zGYz6vU6VldXce/ePVQqFQSDQdRqNV7Ey+UyWxQSVCoVrFbrwAhIp9NhcnISOp2OfYoNBgNmZ2dhMBi4kyLeV4cfZPOk1Wqxvb3N8ciLi4s4cuQIxsbGRk6oshdarRYymQyq1Sry+TxvaN1uFzKZDBMTE5idncXY2BiOHTsGj8cDm802kpuaiMeHVCrF2NgYdDodJiYm0G63kUgkcPPmTdy6dQsKhYJtKicnJ+H3++F2u3Hx4kW4XC7o9XqoVKpD0zEV8egQ1mzr6+v4+uuvEYlEkE6n0Wg04HK5MDk5iZmZGZw6dQpTU1MjHcL2wloodMFeZLqaiOGG0N1AGA3d7XaZC18ul2Gz2WCxWFAsFlEoFAY6g2q1mjmIBKFdFB28yF6OAi9EvBygwBiPx4NarQar1cr3lMPhYOHyqIMsoKrVKrvJCBPwKBaYLNWMRuNIb2wiHh9kK9jr9TA+Pg6lUolwOMyJd2azme8Tn88Hj8cDr9cLp9P5ol+6iBcIYdFcKBQQi8WQTCbRbDaZOUCBdRaLBWaz+UW/5KfC6O8GIg49aDIhkUjYWq7RaGBiYgLNZpOjTBuNBhYXFwc48JQWKSx8KEBHqVRCp9NBo9FwoqKIlw8qlQomkwl+vx9/+Zd/iUKhwOmJRFsYddTrdWxsbCCVSmF1dRUbGxtoNBrs9z09PY1z586x173ZbBYPkC8ZiA5ns9lw8uRJVCoVjI+P4/XXX+cAMaVSyWN2CloS8XKjVqtha2sLxWIRN27cwLfffotGowG9Xg+NRoOzZ8/i3Xff5SbEqEMsmkWMBIiS43Q64XA4AAwK+yQSyb4pint1y3aLecSO2ssLouMYjUZMTEyg3+/vKfwaZdRqNWxsbGBnZwerq6vY2tpiihu5IJw9e5Y7iWLB/PJBLpcP2LgCGHB/2Cti+7D7MIt4OOr1OtbX1xGPx3Hr1i3cuHEDarWahcRnz57Fz372M9aijTrEolnESOGwFDEihg9CgdhhA1lcGQwGdkZQKpVwuVywWq1wOBw8dTms10DEo4OKYbEoFrEfSJBfLBYRj8cRi8XQ6/Xgcrmg0+k4BMjhcHDK6GHYu8WiWYQIESIOOTQaDQKBAPR6PZaWltgH/b333oPf72frMHKUESFChIj90O/3USgUkE6nsbW1hc8++wyhUAgulwvvv/8+7HY7Lly4ALvdjvHx8UMlEhWLZhEiRIg45KAEyXa7DZ1Ox640Xq8X4+PjsNlsh9ZiToQIEQcPsnitVqvI5XLIZrMYGxuDz+eDy+VCIBCAw+GAwWA4VBMLSf8wOfeLECFChIj7QJZz9Xodd+/exdLSEoxGI86ePQur1crqdhEiRIh4FJTLZZTLZeRyOXz77bcsoCYLwvHxcT6gHwYuM0EsmkWIECHiJQAt9b1ej8OkyJVG7DCLECHicUHiexKM7hZQH8Z1RSyaRYgQIUKECBEiRIh4CA4P0USECBEiRIgQIUKEiGcEsWgWIUKECBEiRIgQIeIhEItmESJEiBAhQoQIESIeArFoFiFChAgRIkSIECHiIRCLZhEiRIgQIUKECBEiHgIx3ESECBEidkFoy0YGQ1KplE36D6OVkggRIkSIeDDEolmECBEiBOj1elhdXcXq6ioajQZyuRy63S4WFxexsLAAtVoNi8Uixk2LECFCxEsGsWgWIUKECAGoaP7Nb36DYrGI7e1tNBoN/OVf/iUMBgNMJhP0er1YNIsQIULES4ZDVzR3Oh10u100m01ks1m0Wi1YLBaYzWZIpVJOwHrZ0Gq10Gw20Wg0kEgk0Gg0eOys0WjgdruhVqsPXeSlCBFPglarhVqthmq1ikqlws/NxsYGnE4nXC4XNBrNoVtLut0uqtUqut3uQNpXs9nkP6tWq5BKpVCpVFAoFNBqtdBqtZBKpVAoFPxf8VAhQoSIw4ZDVzRXq1WUSiXEYjH8/ve/RzqdxjvvvIO3334barUaOp0Ocvmhe9sPRL/fRzabRTweRzAYxN/93d8hHA7zhuj3+/Ef/sN/gN/vh8fjgcvlOnTFgAgRj4N6vY5cLodcLodsNot6vY7Lly8jEolgfn4ek5OTfBA/TM9KrVbDvXv3UC6X0e120e12Ua/XEY/HUavVsLS0hKWlJWg0GkxOTkKv12Nubg5zc3NQq9Ww2+1QqVSw2+2w2Wwv+u2IECFCxIHiUFWP/X4f7XYbtVoNhUIBW1tbvMk1Gg1IJBJotdoX/TKfK0jQRNckkUhgaWkJa2tr3GmuVqtIJBIwm80wmUzodrsDoicRLy96vR4froSCOIlEcugKRkK/30en00Gj0UCr1UKr1UKj0UAqlUK73YZOp0Oj0UCv14NEIhnpa0CfKX2+dFgoFApot9vcXd7Z2UGpVMLy8jK++eYb6PV6lMtlmM1mqFQqGI1G6HQ6yGQy7jwbjUZeR0b5GokYBE0ggO/vG/r/h+FB+4rwHnlR98vTvDchaF0Qrg/0e+HfJz4Xo4cDKZqpI0GbTb/fh1wuZyrE86RE5HI5bG1tYXt7G6FQCLFYDPfu3cPNmzdhs9lw7NgxmEwmAIf/hq3VaohEIqhUKlheXsby8jJisRhKpRIA8ANcLBZx9epVhMNhzM/PY3Z2FgaDAX6/H3q9nr9XxMuFSqWC9fV1lEolBINBBINB6HQ6TE9Pw2g0IhAIIBAIHJp7o9vtotFooF6vI5PJIBaLoVarod1uAwAajQby+TxKpRLa7fYTb6gvGnSQ7nQ6qFQqaLVaCAaDCIVCyOfzuHPnDorFIrrdLtrtNtrtNorFIlqtFmKxGIDv6CuJRAKFQgGNRgOhUAhqtRpOpxMajQY+nw/j4+Mwm81YXFyE0WiETCbjKd9huWdeJnS7XfR6PeTzeeTzeRSLRaytraFcLqNSqaBSqTzw56VSKe8vcrmcqTwEuVwOrVbLlB+dTves39IAaCKbzWZRLpcRDAZRqVRQKBRQKBQe+VknuqNGo4HVaoXFYuFnQ6VS8TMll8uh0+n4Oshksmf8DkUcBA6saG61Wswl7vV6UKlUUKlUkMlkz+1m6Pf7yOVy2NzcRCgUQigUQjwex9raGpxOJ8bGxuD3+2EwGF6KLmq9Xsfa2hoymQy++eYbfPvtt7zAUcEskUhQqVRw7do16PV6pNNpFAoFuN1u2O125iqKePlQqVRw584dRKNRfPbZZ/j888/hcDjw3nvvYWxsDFKpFJOTk4dmse/1esxhzmQySCaTaDab6HQ6AL4rmhuNBorFItrtNnq93kg+G1QwNxoNZDIZVKtVXLlyBV988QUKhQJWV1dRLpdZHwIMdqSB74rmZDIJAAiHw5BIJEzLUKvV8Pv9mJycxNjYGGw2G5RKJVQqFXedxaJ5tEANsW63i1QqhWAwiEgkgn/9139FJBJBOp1GKpV6YGEpk8nws5/9DH/2Z38GpVLJkwmCSqWCw+GAWq2Gw+GAVqt97vdJNpvF+vo6EokEPvvsMySTSYRCIezs7PC9/zBYLBacOHECVqsVU1NTmJqagtlsBgAYjUbU63XU63V+Hvr9PpRK5aFZRw87DqRoLpfLyOVyaDQaSKfTaLVasNvtzG+jRfN5QKFQQKPRQKVSAfhukS8UCohEIpBKpahWq2g2m4daqFKr1VCv15FOp5HJZJBKpZDL5VAsFlGv1+97+DudDqrVKnq9HlKpFEKhEI9lW60WFArFoeCB00Sk3W6jVCqh1WqhWq2iVqsNLPYajYbvIYfDwffSywLqoNLzHIvFUCgU0Gw2UavVkEqlAACJRALpdBpqtRp6vX7k7xEqDDqdDnq9HnfWCGq1Gmq1GiaTCXK5fCSKv06nwzSLRqPBz3WtVkOtVkM4HEalUkEwGEQ2m0WpVEKj0eCfoaJ5L9AzQ98jlUpRq9XQ7XaRy+WgUqnQ7/dx584dpFIpWK1WWK1WKBQKvl8Oy9qyF3ZzwpvNJmw2G6xWK2QyGZRK5Qu/f4jS2Ov1uKGyF3q9HjfGNjY2sLm5iVQqhXQ6jXK5zPvqgyCXy5HJZLCxsQGVSgW1Wj1w6FSr1SgUCtBqtej1etDr9ZDJZFAoFM/0OnW7XdRqNbRaLUSjUWxsbCCVSiGVSnHXudlsPnKnuV6vI5vNotPpQKlUot/vw2QyQSKRwGAwoF6vo9FoQKVSIZvNsvheWI9IJBIYjUYYjUbI5XIusEW8eDz1atXr9bC5uYlvv/0WyWQSly5dQi6Xw4ULF3DhwgU4nU5cuHABVqv1IF7vAyGRSGAymTAxMYFarQaVSoVut4v19XXE43EsLi7iwoUL0Ol0MBqNh7Jo7vf7iEQi3GG+cuUKUqkUtra2EIvF0Ol00Gq1Bn6m0+kgnU5DKpUil8vh1q1bOHLkCE6fPg29Xs+/Rh31ep27iNeuXUMmk8HKygpWVlaYtyuRSDA1NYVAIIDx8XH84he/gNfrfdEv/bmCCq1sNotr165hZWWFu0jlchnffPMN1Go1dw/tdjtOnDjB3ZRRBblE1Ot1dosQFs1utxsTExOYm5uDwWCAXC4f+o2sVCohn88zL7larSISiSASiaBYLGJlZQXFYhGVSgXlchm9Xg+NRoNpdo8DonFIJBKUSiVsb29DqVTi8uXLUKvVOHPmDM6cOQOz2Yy5uTkYjUYeXx9G1Ot1VKtVbG1t4W//9m8RiUTw4x//GO+//z50Oh03lV4k2u02crkc6vU6bt++jTt37uzZUaWiudPpYHV1FWtrawNTF6IwPQjdbhc3b95EMBjck7apVqvh8Xig0+nwk5/8BDqdjikOz7LpVqvVsLa2hkKhgI8++ggfffQRc/ubzeZ9++XDUK/XsbGxAZlMhpWVFT5se71eaLVatFotpmcYDAYolUqmsxKkUileffVVnDt3DgaDAT6fDxqN5qDfuognwFMXzbSRJhIJhMNhrKysIJ1Ow+FwYGJiAlKplCkbz6MzQ51mtVrN/1apVEKpVILNZkOtVuMN8TCANrZ+v8+djWKxyF2AZDLJwh5hR1Umk3Gh2Ov1UK/XIZVKUa/XAXw3YqJO86hfKxJ0NJtN5qhFo1EkEgmsrq7izp07fO0kEgl35IDvFkCisbwsoG48dUySySRqtRqA7zdZhULBnRiFQjHy9wjw3X3Sbrf5nt8t2NFoNLDZbDCZTMxDHOb7ot/v8zSF1oRisYhQKITt7W2mYhSLxQP99wAMdB1jsRjkcjn0ej0cDgfq9Trcbjd/bVifr6d9XSRKz+fzuHfvHjY3N3Hs2DHUajXI5fKh4MPT5KFSqSCRSGBra2vPZ5mK5na7ja2tLayvr9/3+h/lWhWLxX3vN7VajWq1CqPRiEQigVKpNNBxflbPW7fbRblcRj6fRywWQzAYRLPZ5GkL4VH/7U6ng3K5PPA1lUrFjbx2u41OpzPAaZZIJAMTF5lMBp/Ph5mZGfT7fbhcrqF9Tl42PJO5WK/XQygUwqVLlzA+Pg6Px4NSqfRcbIja7Taq1SoXO4cRwpFapVJBtVrlDnEul+NOUqVS4fFrqVRigSaNRmkMT4v7YSh8doNG0OVyGcvLy1hZWWGKQaPRgNvthtvtZoeRTqeDWq2G1dVV9Pt9JJNJmM1maDSaQ++8QoeoWCyGnZ0dnlbQ6BL4bjEXUld8Ph9sNttIT21onSiXy7h16xY3AIQdN4lEAqfTiSNHjmB8fHxkPJqLxSJ2dnaQSqXw+eefI5VKIZ/Po1Ao8JhYCLlcDo1G81gFCh00iN6yF7rdLoLBIPr9PjweDwwGAzweDwukhgndbheVSgWdTofdHui+f1Teaa/Xw/r6Oq5fv45oNIpKpQKpVMqj9mdNOXhU5HI55iVvbW1hY2Nj332TJi/pdPqZ7K3dbpebO19++SXy+TzMZjMWFhZgMpkwMzOD6enpA79uNF2hhhoVy4/KYX4UdLtdlEolyOVynuJIJBLU63VuJu7uNF+9ehXFYhE+nw/Ad5Mug8EAg8FwYK9LxOPjmRbNiUQCU1NTWFxcZMs3q9X6zBYL6nTUajW2hDqMEI7Kstks0y/+7u/+jhW/9XqdO4ZCuzC5XA6j0QiNRsNfJ2utw1g01+t1rK+vI5lM4uOPP8Yf//hHSKVSFpqcPn0ap06dYh5mo9HApUuXcOPGDchkMiQSCT7sHfaimXi8sVgMN27cQCgUQi6XG+A5SqVS5nxbrVb4fD4eMY4yiNN5584dbG1tIRqNDhQGUqkUTqcTCwsLcLlcI3Ev9Pt9lEolRKNRBINBfP7554hEInw4ou8RgizjVCrVI00G+/3+QBjK7g698Pt2dnYQiUQwMTGBQCCAbrc7lB20TqfD3G65XA65XM5UpMcpmjc2NvDRRx+hXC6jXC4zh5v4q8PwnrPZLP7whz/g9u3bKBaL93VId0O4lxw02u028vk8JBIJLl++jG+++QYOhwMXLlyAy+WCVCpFIBA4cMGcsGimvXC/w9+TotPp7Nlhf9A9UCqVcO/ePUxPTyMQCPD36/X6obh3XlY8MwUGKbSJS0dkeI/HwwvHQfIBacMvlUqIx+PIZDL38ayIupDL5aDRaGA2m0fq5iP1PqneG40G4vE44vE4IpEIFziNRoPHo7sXOblcDofDAaPRyJsnURYeJuQYBdB7JQukVCqF7e1tJJNJNBoNWCwWaDQadlGZnJyEx+NBu92GTCZDrVaDWq0e4DgP+xj+IECCpWazyWJQEi8JoVKp4PF4YDab4XQ6odPp7hP0jBrIUiocDiORSCCVSqFSqew5fqYx8aiApkm02er1el5DJBIJF28ajQY6nQ46nQ5jY2PQ6XSP5NXe7/eRyWSQTqfRaDTYcWS/76UO3tN44D4r0HUplUpYW1tDpVKB2WyG2Wx+ZB0M8eKbzSaKxSLy+TyazSYMBgNkMhkMBgN3mofhPpJKpfzeiKO832dCTlh6vR5Go5FpCK1Wi6lNBwGafgLfTQqLxSIUCgXK5TLq9TrXDwe1JjebTZ6uPY613EHgQf9Wp9NBvV5HoVDAxsYGms0mCoUCSqUSO4wIHWkOI4QOPrtBlJbnLch+ZkUzLY7xeBy//e1vYTAYUCqVYDabodfreTR3EKCHrNVqYX19HX/605+QyWTuO9lVKhWsrq6i0WhAKpXC7XaPzM3W7/eRSCSws7ODbDaL69evI5vNIhgMYmdnB7VajWPDhYXy7ofSZDLhwoUL8Pl8vGkRv/dhPpujADqsra2tYWlpCdFoFL///e+RTCYxMTGBN954Ay6XC2+++SYcDgdHrNfrdUSjUZRKJdy6dYuLZYVCAbVafWgV/oRms4loNIpisYivvvoK//Iv/8ILthBWqxU//vGPEQgEcOLECXi9Xu6gjSJ6vR6WlpZw5coVRKNRfPnll4jH4/fRFkYdWq0WMzMzsNlsvGYIu8pzc3OYnZ2Fy+XC66+/DqfT+UgOQ71eD7dv38bS0hJisRg++ugjtqIbJdD6SvZi//zP/4x4PI5XXnkFp0+fhsvlgtVqfagYi56jUqmE9fV1rK6uwmAw4OzZs3A6nZidnWU60zBYjOn1eiwuLkKlUuHmzZvIZDJ7FikymYyL/ZMnT+LkyZMolUq4ceMGezYfFDceADvYlMtlhEIhFAoFBINBxGIx6HQ6OByOA5tu5XI5fPTRR7h16xb7kw8DyMWm2Wziv/7X/8opnJOTkxgfH8ef//mfw+fzsfvGYYKwobdXAwP4Tr9GB9nn2cw4kEpgd/IN8L2fJxUjarWahSgSieRAb0zqYNAIhEz3d49Yer0eq8lJ8DYKoM5MpVJhP8xgMMhd1GAwuKdwaS8oFArYbDa43e4BazG5XD7ydBbhfUA2g/Qrk8lgYmICHo8HXq8XMzMzcLlcUKvVLNKgh5NG0wAGQnoOM6hrVCwW2WZud+dIIpFArVbD5/PB7/fD4XCMDLd3L9ABK5/Pc2c9k8ncd1AYZdDhT6lUwmKxQCaTIZfLsWKf+Ol2ux3j4+Pwer04cuQIXC7XfTZYe4FExKVSCZ1O55HdIIbtnun3+6jVasjlckgmk9jc3EQ4HIbH48H09DT0ev0j7VkkrCuVSvw8UWKi3W6H0WgcKvswuVwOs9nMr22/Yp642EqlEna7HZOTk8jlcggGg+h0Omg2m6hWqwDA742mv8CDO6p7gdbyVquFcrkMiUTCWqWD3qvIczwej/N0cTeE/uLCPxc2p4S0p91//iQgcTpRTqVSKU9DaIrf6XSeqmEhnEQ9z2dyd/IifY0gNCggQehukCsJve6RKZppIzWZTCgUCvc9cMJRy8bGBr788kt4PJ6BhKin7eIRB61arSKdTiMajaJerx/YuOhFol6vs6jv0qVLuHz5MiqVCttHFQoFLpjpptsd1SnEfovNsI1KnwS1Wg3b29solUq4cuUKPvvsM/T7fSwuLkKhUOD8+fM4d+4cTCYTbDbbQAeZOkTkO6rRaAbs9l60NdSzAlF54vE4Ll++jGg0is3NzfvuE+rIBwIBTE5OYmJigr1HRxG1Wg2hUAilUgk3b97EzZs3USwW2SXkMEAoXmw0GvD7/QOULqlUytaBFEZiNBphsVgeK2yBRH2VSuWBGziN91UqFQtrh2VC0e/3kUqlsLS0hGw2C6fTCa1WixMnTuDcuXNM0XgYGo0GdnZ2kEgkkMlkOOjL7/djenr6uVivPg60Wi3m5+dhs9ngcrnwyiuv7Pl9EomED1qzs7OYnZ1FpVKBy+VCoVDA+vo61tbWoNVqMT09Da1Wy8JrcuIhgd3j7Mt0mKGMhVqtBoVCcaBFs8FgwCuvvAK9Xo9kMolkMjmwlxqNRt4HSARMoAZNs9lEIpFAIpEYeG31ep3XlKctoCm8rdvtQqlUIpfLweFw8HP8JMhms+ypTk2kZwVhQA6JkYm+W6vVBihbVDQTXW6va2exWHDq1ClYrVZev57HfnQgnWa1Wg2z2YxcLndftS80Rd/e3oZUKsX09DROnDgBo9F4IKNvKprJVikej/N4Z9RRr9extbWFZDKJzz77DL/97W/5AdqPhvEgYQ3dlLu/f9QLZuB7f8xEIoGrV6/i888/h9vtxl/91V/B7/fj7NmzOHv27J6jHOK1RaNR1Go15ngedrUycS+j0SguX77Mnua7nSPMZjOPBqloHpaC50lA3qyJRAI3b97ErVu30Gq1DgWvn0BF8+77l4RpALg4Ju4udaYf598wGAxwu93I5/MPXMspqEKpVA5t0by8vIxut8vOMCdOnMD58+cf2ZO72WwiFAohHA4z1UGpVGJychLz8/NwOBxDddDUarWYnZ3F+Pg4zpw5s+9rE/oqm81mmEwmtFotLC4uolar4cqVKzAYDHA4HPjhD38Ii8WCX//61+yGQdTBx21mUSgPAC6aVSrVgRfNp06dgsPhwN27d+/zKB8bG4PH44Hdbsfrr78+4ABGRR8575CLDPDdPUWcduqcPyno5zOZDLLZLLRaLfL5PEqlEjQazROJaakI39jYgNFohNlsfuZFM3l6J5NJnpZ/9dVXHAZDNQ19BuFwGOFweM/6xOv1Ip/PY3x8HHK5HBMTE6NRNEskEjZqr1Qq8Pl87HtYKpX4+/r9Pvu+WiwW5HI5Xqif9oOiB1qoTgZwX+EslUrZUH/YjcLphEqirEQigWw2y/QD2tyEYp29imkCfT/RDWQyGX/fKCSbPQj0nmu1GuLxOMLhMBqNBnfN3G43PB4PTCbTfQUzjcBqtRpHJ9OYcdSvy8NAIi6i+GSzWVQqFbTb7QE/b5lMBpPJBJ/PB6fTyQfdYRkxPw4oCY/4q7FYDLlcjjc7ouZQwMuoQ5ioRvcybd4kpJFKpY/lDEGbXz6f585qKBRCJBLZ99BBwVPkuOJwOHgdHpZnrNlsolQqcWFIHN7H4UuSIE4Yvw7sTWEcBpBwsdFosBB0v9dIFAW6V4T2hE6nk+OizWYzjEYj0+CIKkk2fo+qF6ApNk2m6QCo1WoPdO1RKpVwu92cKSGkf9DB0263w2KxwOFwwGQy8c9qNBq0220YjUbOQRDSDeLxOJLJJBeBwn251WrxtdnPdWYvkEsYCU2fpqmjVCqh1+uh1WoPhGNPHWISllO9QutpsVhEq9XiPYfoUMRSoGeNxOU0CSPNmrCeo3WcwpSeV+PvQIrmsbExWK1WjI2NMZf0xo0buHnzJi/QFNFcLBbRaDRw69YtlEolLCwsPLWLhUwm49GZxWKBzWZjEZMwzYdED4uLi/B4PEO3gBH6/T77Zu7s7OCDDz5AJBLhsREtWKR612q16Ha7HCJD6m0haHMk6yQyWafrM4wL+qOCOoSJRAKffvop1tbWoNFocOLECUxNTeHNN99EIBCAXq+/b7GllMBoNIpvvvkGm5ubD1SQHyZ0u11cu3YN//t//29ks1msrKygXC5zsUgFl0qlwsLCAi5evAin08lRyKN2v1DnYn19HcFgEP/8z/+MnZ0d7gapVCq43W6oVCqk02nkcrkX/ZKfGkKOKn1eSqUSRqNx4GuPY6VGh63PPvsMiUQCa2truHfvHorFIrLZ7J4/J5PJsLi4iFdffRU+nw+vvvoq3G73ACfxRYK6bpubm9Bqteww9Li0LPJ4pn1u2KedrVaLg0SmpqY4kGw/CCcRZF/a7/dx7tw5HDlyhL8mk8nw5ptvYnJyEjs7O/g//+f/IBwO8/V52PpKzR2Xy4Wf/exnGB8fx6lTpzA/P8/i7IOC0WjEa6+9xp3w3Z8bHZ4UCgV0Ot3ANKXX62FmZgbdbhdvvPEG6vX6QNF89+5dLC0tcRKv8H1nMhlcunSJu/CPM+Wq1+tYWVlBo9GAUqnE+Pj4Yz9HEomErVflcvmBXFO6hpVKhe1vSSRaqVQQCoVY3BkOh9FutzmJ1Gq1wmazsauVRqPhOqdSqdwn0CbRul6vx+zsLHq93nMR1x4IPUOr1UKj0aDVarER98bGBqRS6cBIQmjFk8lkBk5nT7Nw7u40q1SqPX0WZTIZdx+HqcMhBI1hyuUykskkEokEIpEIdnZ2BgpcOpUR97bb7UImk3F3fXeXjLpJ9PBTipvwGoxi5xAAdy/K5TLTcwKBAOx2OxwOB//a6/2RyKJcLiOXyyGdTvN1Gcb74yBBxc/6+jrTm4SLEvEYVSoV20VardYBoeQwYTdVabfYpNfroVgs8nO1s7PDoz+ZTMZdF41GcyicZIDv1wohnuQ5p+tInaNqtYpYLIZwOIzt7W1sb28PWF3u9TpMJhOLce12+1DFrlP3rlqt8vV6kmkK0RGFqaKEYXxmhK8XwGNZwZJlIdnJCjue9DW6rjqdjjnRjwLh8zg2NoZAIACXywWj0Xjg15HE8QcNurYk2NvdKVUqlTCZTMzZBr6fmu43MSaQ6UE2m32qIDeaGlCAz9OC+OuVSoUdzLLZLE8xNzY2UCqVBmgXtEbRZ0uHeoPBgFwuB71eDwD33TvtdhvZbBbVapWnw88DB+aeAXzXyT169Cg8Hg8ikQiWl5fZNFxYxFLiWj6fh81mw9zcHJRK5RN7L5LKklTLhUJhJE75u9FoNNj67fLly/jss894fCE0XFcqlexccO7cOZw5cwb1eh3b29sDyXfCEVMgEMDs7CwmJiZw/PhxeDwe5vCOKuiAcePGDVy5cgWxWAzVahU6nQ6Li4t455134HA4YDab9/Sy7PV6uHfvHq5evYqdnR3s7OygWCzC6/XC4/FgZmZm6Gk8TwuipeyVCKnT6bCwsACLxYIjR45gamqKLcqGAULfX0rGpERQ6mCUy2XUajXEYjHUajVEIhHEYjHk83nk83n0+31MTU1hamoKRqMRs7Oz0Gq1+OSTT+7jdr+saLVa7AtPm10qlcIXX3yBZDKJbDbLguTd95BcLodWq2XXlbm5OVit1mfKnXwcULAF/RJGJz/JXtRoNBAMBnHv3j3k83koFAoWuz/LKOgnhUajwfT0NOr1OpxO5yO9Nhq/01Sz0+lgeXkZq6urA11WeibT6TTu3buHTCaDcrm8b4FHdCGZTIb5+XnMz88zr9zr9cJutw/VtXsYJBIJT7Tp2RC+93K5DJ/Ph1KpxJ3mYrGIu3fvcrGZz+fZ5Uf4s6TBIVHdk4IomwfRJOp2u7h16xa+/vprlEolbG9vMw+dMgByuRy/z36/D7VaDbfbDb1ez0FjBoMB4+PjUKvVsFqtMBgMSCQSSCaTA80MrVaLQCDAmQHP6944MPNZMs+n9L87d+7AYrGgWq3ex++qVqtYWVlBLBbD4uIin5TogXlckFigWq2iXC7fR8sYFRA/MJPJ4PLlywOiPyEUCgV7DL/77rv45S9/iWKxiK+//hrJZJIPJQSpVAq/34+3334bXq8XR48ehd1u5wdvVEEd9Zs3b+K///f/zguLwWDAkSNH8KMf/QgajQYGg2HPB6rX62F1dRW//e1vkcvlWAQ4Pz+PI0eOwO/3H+qimZTpmUxmz+dFo9FgYWEBPp8PR44c4TSuYdm4iFtLG0c6nWYdQL1eZ5cI8jUnq0ni2vX7fUilUkxNTeHixYuw2Ww4evQotFotYrEYvvjiC7FoBpj6VCgUcO3aNVy9ehX5fB537txBoVB4YEeMAj2oYzg3NzdUBy/SM9DGvrvwf9x7vdFoIBQKYW1tDQDY650K52Gb5mk0GkxNTT2WtoUcMNrtNqfPfv311/jggw8GJpzNZpPH9clk8qEdUbpWCoUCi4uLeP/99+F0OnH8+HHYbLahWXceFVQ0u93uPf+82+3iwoULfD1brRbC4TD+6Z/+CaFQCFtbW9xwFNr3Ad8XzbVa7akCWR4lwOhRQZ7tf//3f49KpYJEIsF0ld2vj/5frVbD7/fDbrfj7bffxo9//GOo1WoYjUZIpVLo9Xqo1WpsbW3hm2++Gfg71Go1pqen4fF4RrNoBr4f1/R6PWg0Gh7P7C6EiSROCWzNZpPjeR9UNJOqUsi7BL5XsFKy16jxUWnBJlFWKpUaEP1Rh4IWFIvFgrGxMTgcDthsNvZTpUMHqdNJ2a5SqTA+Ps5jURrJaLVaWK1W5HI5GI1G6HS6+w44wwq6D4i7XqlUIJfLWTRit9tZRLB7USBeXaPRGLC+IU6U2WzmzsawqPsPEq1WC7lcji0Ld9sVEufdarXC4/FgbGwMJpNp6LpkVDS3Wi2k02lsbGzwBk2KfbIQrNVqaLVaA2E1JpMJarUaMzMz8Hq9HC8/jMXNiwAVk7lcDuvr68hmswiFQshmsyzo2c8RgMarGo0GXq8XBoOBRaTDkoYHfN/dJGofrbVC2yuhl+3DILTVIlE6+cmq1WoWYA8T/etRXwtdE6KxNZtNpNNpVKtVDiAR7h1UWNOe8qAOM1ENPR4Pp1JSoMxBpv89bzzs2pITCN2DOp0OJpPpoQYJcrkcVqsVdrv9kawQnxeouG+321zsU22iUChYYEvv12Qy8TTT7XazsJTuJRL2C5NGqc6hkLyxsbFnQtvZDwdaNBNvltS0gUAAmUwGqVRqwP+03W6zKDCVSnHRptfr9y1SaAErFAqcQkQoFAq4desW8vk8lpeXR6o7RKK/tbU1RCIRfPDBB4hGo0ilUsytpZuEuLljY2P4+c9/jvHxcUxNTQ1sQFQoj42NQa/X48SJE7BarTh//jzOnz8PlUrF2fW0QGm1WkxNTbFYcz8xzzChVqvxyG9zcxPJZBI+nw8//OEP4ff7cezYMY6u3b1BV6tVLC8vI5vN4u7du9ja2uJFXa1WY25uDhcvXoTJZGLB1GFCPp/HH//4R0SjUaysrNyn8nc4HBzqcPHiRUxPTzPFZZgg9Ge/cuUKPvzwQ1SrVY5MJ0oTjZIBYGJiApOTk3A4HLhw4QLsdjt8Ph9rMWiTH9VN+qAgFE2Gw2H8+te/Zm94Eu7sFxAlk8kwNzeHkydPMrXHbDZjZmYGZrOZ9RjDANp8hXx2lUrFoRLCJsKjTFmEoRzk1ETrts1mg0wm43V9mKY2DwNxk9vtNq5fv44vvvgC+XweS0tL3Kza3bAS5gc8yImGmj5erxc//elPMT4+jpMnT+L48eNQKpVDVRQeJEiYD3xf31itVkxNTUGtVnOy5l71jNFoxNmzZzE5OQm/3z90azNxk/v9Pmw2GzuPvPHGGwNJvBqNhotlk8kEk8mEfD6Pa9eusVDy0qVLqNVqXPNptVrodDr4/X784Ac/wOzs7HNNdz7wbGDiyGg0Ghb67SZwExeq3++zeGQ3SX63mIfGZvV6HalUCul0mr83n88jHA4zt26vE62wSzZMCxVxv9LpNOLxOIuTSGkrDIDR6/V8uhwfH98zYEIqlUKr1cJgMLCjidPpZJsn4YZFnX2z2cxWPqMSx0mm8tlsFqVSiQsdt9sNv98Pq9XKXK3daLVayGazSKVS3GUmuzESZ7jd7qHykT0IUNeMOL40nRF2manjQ/eZy+WCx+MZyhhx6uq1220UCgXE43FUKhUumgkymYynDiRo9Hg8WFhYgMfjYd9ZslF7GLVr1CZZjwrhmtvtdlEqlZBMJhGNRrGxsYGdnZ0HUjGA7+8hk8mEsbEx2Gw2TE9Pw2KxcDT3MK2/1JTo9/ssepVKpXxfCV0P9hJV7gW6RtREEoqt6NoelPDqeYG6zN1uF9lsFsFgEOl0Gnfv3n3qBE0KvDEYDJiYmEAgEIDX6x1JSsbjgopdciWhyQQ5WlD9s9s3n1I8PR4PC+WGAXRfCzVqer2en/+pqSl4PB44HA6eelOYEq0rnU4HmUwGkUiENRT0HFIxbjAYYDKZ4HK54PV6H2iVeNB4ZjuhwWCAz+dDr9fbtxDr9/sol8uIRqNoNpvM/SmVSlwIkRcoURXi8Tg++eQTPoUB4JSr/SIXdTodNBoNLBYLdDrdgQSqHBR6vR52dnbw5ZdfIpPJsGcsjT1JXEkdmyNHjsBisWBqagomkwlarRbA916TGo2GR846nQ7T09Oc2LW760oPKQUcjNJYularYX19HTs7O6hUKrBarXA6nfB6vfuOa6hTkkgk8PXXX2NrawtbW1vo9XrQ6XSYn5+HxWLB5OQkd59G5Xo8DP1+HxsbG9jc3EQ8HsfNmzcRj8f58KlQKJiu8Morr+Ctt96Cy+WCw+EY2vuCIoC1Wi3eeust2Gw29u4UFr5UNCsUCoyNjcHn8/EGTZy5R6Ge0ML9oFHzqIIU6PV6HYlEAtVqFVevXsW1a9eQy+UeyF2mjqlarYbL5YJOp8ORI0dw/PhxGI1G+Hw+6PX657qxPS4kEglsNhsWFhZQr9cRDAaxvb0NmUzG68vRo0f5GXmYkJEaQoVCAdvb2/jtb3+LGzduYHx8nFPlXC7X0HC7HwbqNNP9sbKyglKp9Miey/tBJpNhenoai4uL8Pl8OH78OHw+30tRMAtB9U06ncalS5d4rd5NgSKXEp/Px0FTT2vZe1Cg4Lr33nuPsyRkMhnsdjtsNhuMRiNmZma4QafT6bjuAIBcLodcLodQKITLly9jZ2cH29vbPKWgPfncuXM4f/487/XkzPK88EwqR4lEwubmlBW/F/r9PkqlEqLRKD+Uwq+Vy2VsbW1x4EKr1UIsFsOf/vQnxOPxgb9HaC21G9Q5ow12mIrmfr+PnZ0dfPXVV8wxFYayEMVifHwcr7/+Ol599VUuYoQPilKphMvlgslkwvT0NPOfTSbTfeEGBOo60/eO0riwXq9jc3MTa2trKJVKMJvNsNls8Hq98Hq9e3ZxyFmBUoiWl5fZDkij0fDCTUXzKHWCHoZer4fNzU384Q9/QDqdZjoTqdnlcjksFgtHyv785z+HVqtlz9VhBBXN/X4fb775Ji5cuIBGo4FUKrVnp5k4dDSd2f0MPaxwJuHpYSua+/0+Pxck8Mtms/jyyy9x6dIl7ro+jJOq0+kwMTEBm82GI0eO4NixY9BqtdxRGua1hWhJc3NziMViuH37Ntt5JZNJjI+PsyfxowZyNRoN3td+97vfwWQy8RpusVhgsVhGpmgWWtPF43Gsrq7e5zv8JJBIJJiamsK7774Lt9uN48ePj5xLxkGAchbIBIAyLoTXl6iXVCyOjY1hfHyc6ZYvGlKpFIFAAO+++y4UCgXriqxWKywWy31rrvA1k0/6xsYG1tfXualFdZ9KpYJOp4Ner8e5c+fwy1/+Enq9Hg6H47k78Tyzolmn08HpdKJSqcDhcHAXg3yZge9jJkOhEKrVKvR6PUwmE9MvqtUqotEoR2+2221kMpnHiuKUSCRot9toNBqo1+ucokPBIC8KtAhRGhPdHHRtxsbG4Ha74XK5MDU1BZfLBbPZvK+IhkaBJMZ8UsX2qBQDxGelz9Jut7NoZHdHnfhi6XQakUiEDdYbjQbUajV0Oh3TEHw+33MVFTxrEBWq1Wohn88jk8kgn8+zqw09R0qlElarFVarFSaTCRqNZmQ67TRiF1pfCosRmqgIi+f9QGpy6oAQBYSsyQqFAnQ63VNF4g4DhFzTbreLRCKBra0t5PN5BINBtuRrt9sDHebdz4VUKmXhktVqxezsLNN6qEExCodxavT4fD70+31YrVY+IKVSKUgkEiwvLyOTycDpdLLvO70v6hRub28z15uswoDvGje06ZNAchSeLSGEFAISmgst+p4UpVIJiUQCUqkUlUoFOp2O97DDDtJbpNNppFIphMNhTk7cDalUCp1Ox2maOp3usZI8nwfIXIBCblQqFU/59kK73eaJRSgUwvr6OkKhEF8DoqIYDAZMTU3BYrHA6/Wy/uBFvPdnVjRPTEzA4XDA7Xbj3r17sFqt2NrawubmJn9fp9PBnTt3sLOzA4VCwUJAKib7/T6azSbfWLQwCeO5HwbqolBM6NLSEhqNxoEkET4NSAxZKpWQy+VYuEQODj/96U/xH//jf4ROp4PZbGZBxH4LLXUKe70eL+aPysEjCAMMhh2NRgPb29tYXV3FqVOncOLECfj9fhb/EYSHkytXruD3v/890uk0dnZ20Gg0MDExgZmZGUxMTOD999/n0eCobWj7odVqIR6Po1wu4969e7h16xbK5TKy2SwajQYvznq9HqdOncLY2BiP0J7UAvJFgO55mUwGp9N53+GP/vxBn6uQU0gH+Hq9zt34RCKBO3fuoFar4bXXXnvWb+mZgYpgclGp1+v4/PPP8eGHH6JcLrOVFW1cQgek3RZVlPR35swZeDwevPPOO3A6neyeQRqXYYdEIsHMzAwsFguCwSBSqRRCoRASiQRu3rwJhUKB69evQ6VSYWZmBjMzMwPJrOQJnk6nmTpIRbfVasXMzAzGxsZw7NgxLC4uQqFQjJSdJTVj6HA9OTmJUqmEeDz+VPtFt9vFvXv3UCgUMDMzg/HxcbTbbdhstmcSODJM6Ha7qFaraLVa+Prrr/HFF18gHo/vmURKa9fExAQuXLjAWqW9Um5fFGhaQ00nmnA/6PkvlUq4cuUKUqkUvv76a1y5cgWVSgWpVArtdpuNCgKBAH71q19hamoKfr+f9VkvYm15Zv+iVquFVqtFqVSC0+lEuVzm06TwIaOIxQdhr+7n4xS71KWuVqvcaabR2Ysomql7ValU2DaNulkkIPF6vXjllVce+bRNN+mTvp5R6TAD31uNVSoVtpqz2+2wWCwD14BENxRckEwmsbGxgWKxyGEeWq2WhWFut5tjlA8LaGGmxD/yKqZDGh2uFAoFrFYr3G43jEbjUNmCPSrovTzp50dFN01olEolWq0WJ202Gg126xiFg+V+oA5os9nkZygWi2FjY4PDKMjeia4JdYvp2hCkUilsNhvGx8fh9XoxNTUFp9P5ot7aE4NG3wqFAo1Gg/csShzrdrtIpVJsGQeAbbQkEgm7R9AEi0D3E3XizWYze9COEujZImtYoqrkcrl9n4Xd3sJ7geiYnU4HOp2O45YNBsML25+fNWi/pTWFKGWbm5vIZrP3pWrSc0eNRafTyQFBw3YgJeHrw0DXoNlsstiYvKlbrRZP3clUwmw2c0Dbiw5HeuZXXK/X49ixY7DZbGwJ97iQSCT3cXueBDRqU6lUmJ6efqK/42lBCTmJRAIff/wx4vE4d6+EvMHnsVhQB586IsLAh2EF+SrH43F2zLDZbJidnYXT6eQHNpfLIZ/PI5fL4fr160in07h+/TorcUmhTMmBNpuNI6JHpbv6KCDBJLlllMtlttGSSCR8uHW73ZiensbMzAysVuuh3KweBqI4AWB1tlQq5YABs9mMiYmJkT5YkZXczs4Oh75ks1m2YBSO24l2odFoWHBDvqh0f0ilUkxOTmJiYgIGg2Gk7cHkcjknlF28eBGnT5/GysoK7t27x7HhjUYDWq0W+Xx+gAZWLpd5badn6/jx4zhy5Ag8Hg/eeOMNVvqP4rNFz4ZMJsOxY8fQbDZRLpcRCoUG7GQJFBy1trb20OKZRLv5fB7r6+tot9uQy+VwuVwjea32AxWKlG5XLpexvr6OYrGIb775BhsbG6jVanzookOKXq/H7OwszGYzzp8/j9OnT7On/Kgil8ux7/vly5cRCoUQCoV4T6cD7NGjR3HkyBEW0L7oghl4DkWzTqfD0aNHMTY2hrt37z5xQUaF89M8RO12G+l0GjKZ7IFxns8KZPeVTqextbWFP/zhD9jY2EChUBhIS3peCwVRF2ijpKJ5WBeqfr+PQqGAUCiEeDzOnVLiUhqNRqjVaubKkwL+H//xHxEKhZDP51EsFjmGXBi3Tdzmw1QwA98Xzdvb24hEIgN8OSqabTYbc+dnZmYOFaf7cUBdatqoSGRIXVZh0Twq1oy70ev1EIlEcOXKFezs7OB3v/sdYrHYfYUNvV+yjTtz5gzsdjvOnDmDU6dODTwnQtrLMB+4HwbqortcLvzwhz9Ep9PB3NwcVlZWkM1mcfPmTeTzeZRKpQGbNXLKIPtU6pAdOXIEf/VXfwW73Y5jx47BZDKNBL97L9CzoVQqcezYMXg8Hg4VE0YbE+he2tzcfOg+S53FbDbLhaPH4xmp6eejgCafiUQCd+/eRTKZxFdffYVUKoVoNIpoNDog/iNthclkwsmTJ+H1enHu3DmcOnVqXzvVUUC/30c2m8Xm5ibW19fx1VdfYXNzk0NRiB6n1Wpx7NgxvPfee7DZbBgbG4PZbH7RL//ZF83A9zy4p/FJFgradnsaCnl25XL5gZznF01FIOFjNBpFoVDgpLIX8ZpqtRqL6WjsPOzx47SQCHnbhUIBW1tb0Ol0yOfzUCgU7Hcdi8VQLBYHKDBERbBYLDCZTGyuP6qL0F6oVCoc9CHsbOz2+7Tb7Zifn0cgEGDhxmE7ODwJ6N4S3hNE2RilhDJa74jSRF7UiUSCee1CUTX5dMtkMrjdbub5jo2NsUh02J0wnhZCYanRaITL5YJarWbecrlcHigU6TBP9Aya5qjVarYI20ugPIogn1xyF7Lb7Xv6BHc6HczOzuLs2bOoVqvIZDJoNBqo1WqoVqt7/t0k9JdKpchmsyiXyzzuH/XrRlqsRqOBSCTCVIxMJsP70263DHrvlFA7MTHB4UCj+PxRzga5oK2vryMYDDL9SSj6CwQCsFgsGB8fh91uZxewYcBwEWIeALK/EhbeExMT8Pl8UCgUPC69ceMGbt26NZScw263i6WlJfzmN79BJpPhEemLKJh7vR7i8TjW19exubmJra0thEKhF1bAPyrI2JwcEiQSCW7cuIFCoQCpVMpFYaFQQKlUQqvV4shfKg50Oh3OnDmD8fFxTE9Ps5H8qC/MhF6vh+3tbSwvLyMYDOLLL79EOBzmEBeCXC7Hq6++il/96lfs/X3YrPYOCnRIN5lMI3WNSDxN7im1Wg3Ly8v4+uuvUSqV7usSqtVqplq8//77uHjxIrvLEKVpFDfsxwVxucfGxmC329HpdHDu3DmmsQn3l263i/X1dQ6AoeAks9nM9pXkInIYQK4NvV4PDodjT5vXfr+P6elp/OIXv0A8HsdHH33EVnVra2t77jHlchnXrl2DVquF0+nE9PQ0jEYjxsbGRpqKAHzXxLhz5w4ymQz+8Ic/4JNPPmGKy16WjjTpcblcmJ+fx3vvvccC7VHdp8gmtlAo4MMPP8SHH37IwW6dToe93P1+P371q18hEAiwtd4wCWeHtmgWjvukUinUajUMBsMAl85ms91XNG9sbAz1ol4sFhGJRNj2a7e1DPkmP+sHg1xFMpkMp+oJuWnDeg0pbYiU3AqFAuVyGdvb2wNuKyR2AzDQMaTTrN1uZ9HbYSqYge9Dg+LxOBKJBNLp9ECCplDc5XQ6MTc3B61W+8AYexHfC79GaTRKmgXaoMvlMvMJd68/1GE1Go3seT41NcURt8MmOnrWIFvSh23WRG0hTjNdJ3I8elHWWM8Ku1Nl94PJZMLk5CRsNhtWVlbQ6/UQjUbvMwMgkJsLTT8rlQoUCsWeRfmwg0T9lOZXq9WQyWQQj8dZ9LaXrRw9g2QvRwJSt9sNj8fzAt7J04Oug9D2NBqNYnt7e8D2VKFQQKvVwmKxwO/3s+hvGCgZQgzNKiiVSjlgg3wg9Xo9pqamYDQaMTExgfHx8YGimXxlu90uarUa6vU67t69+4LfyZPDYDDgyJEjsNlsCAQCz2RjJteORqOBpaUl/PGPf0Q6neaOE8UN06h+mApK8v+WSCQIBAJ455134Pf7WRwoLAYp275UKmF5eRnFYpHFBVNTUzhx4gSmp6efa2b9swY5hTSbTYRCIdy6dQvJZPK+w5Ber+cI9snJSRgMBpGW8QDQoYuKoFEZF5PoKBKJIJPJ4Ouvv0Ymk8HKysp9yaMUJe7z+fCTn/wEPp8PR44cGVknleeNer3O061RLPKeBeie0ev1nFAbj8exsrIyEE8uBF07Ia1omCefe6FSqWBzc5PtG2OxGEqlEjY3N1EqlbCxsXHfoYHsPV0uF95++20OKjObzXC73UNXOD4OKOkvGo3id7/7HaLRKFZWVripRc2as2fP4uzZs/B4PAgEAkMh+tsLQ1U0q1QqKBQKGAwGGI1GeDweXLx4ER6PB0eOHMHi4uLA4k2bWa1WQyQSQbFYHGnlv8lkwtmzZzE5OQm/3/9MNqpOp4NisYhyuYzl5WV8+umnaDQaXDTTCJp4eMNUNANg30YAeOuttzA/P4/bt2/jzp07PNJSq9VYXFzE4uIiIpEIW2hRCtfMzAyOHz+O2dnZQ8Vl7vV6HIccCoVw8+ZNthQjgadUKoVWq8Xc3Bw8Hg/Gx8fZk1nEg0GdEK1WOxIHjH6/j2Qyibt37yIYDOIf//EfEYlE9hT90QFqdnYWP/nJTzAzM/NIcdEiBiOzKb1WxGBSJAVTLC8vQ61Ws4PP7uKROrOjVigLUa1WcefOHcTjcVy/fh3Xr19Hs9lEqVRCt9vd87Agk8mgUqng9Xrx7/7dv8Pi4uKA9eWoFs1kS7i1tYW1tTX867/+Kx8ayMWKaBnnz5/HL3/5Sw7GG9a155nvlELBntFohN1uH+CX0o2hVqvhcDjYk89kMsFut8Pn88Fut8NoNO4rwCGBxcNicLvdLiqVCvv0kjXQMBWFSqXymXT9Op0OixGCwSByuRySySQLgWgs5HQ6MTk5yfGc1P0fJlDXz2q1QiqVMi+MXA/o4FWv1zk9stPp8MTC4/EcKh4zLUAUO0+WfDR9oQXaYDDAYDDA6XRiamoKHo+Hr+FhBongaDPe3QkUiv5odKxWq+FyuSCTyTisQiKR8HMkjNOm0WOhUECr1YJGo2EP1RdRYAtFf9ThSSQS9yWpkuhPLpfD5/NhenqaJw8kXHsUCJ136FepVGLhKQlw9wKt2UqlEhaLhYWWo+JOQvdTvV5nyh0drugaDtv6+bxBDTFKhhOKuIUgH2KtVguz2TwS1BZKXKXaguLoiRqXy+VYYC+0dgW+L5RlMhnTEEjsR7oJCgcatTWapv/tdhvRaHRA9Cfkb6vVaqbwvOikv0fFMy+aKalOrVZjbm4O58+f51FWq9WC2WyG2WyG3W7H2bNnYbPZYLfbYbfbmSZAJPCn7QjW63VsbW0hk8ngwoULqFar3E0ZhpuSjON1Ot2Bbxp0WAgGg/iHf/gHtmMrl8uQSCRQq9VQqVR47bXX8Gd/9mew2Wy8gQ7DtdkNvV6P48ePo9Pp4OTJkxxdS+EDt2/fxu3btxGLxZDJZFCtVhEIBPAXf/EXfH8dli4zhZdQNzEYDCIYDLKFEQV0BAIBHD9+HGNjY/iLv/gL+Hw+9iI+zCDHCIoTF4ZPAOCDoUwm4ynG2NgY3n33XUSjURSLRWQyGcjlci6KaDJDB5ZUKoXPP/8cmUwGfr8ffr8fJpMJs7Oze7oLPOv3S/f8rVu38Ic//IGLWCE0Gg0mJydhMpnwox/9CBcvXmSlvlqtfuRno16vo1KpMH+63W7j22+/xY0bN9BoNFAsFvfsvgpDG5xOJ37wgx/A5XLB5XLB4XAM/bNJFmLtdhvxeBxLS0uoVqs8DbNYLCMVR/+sQDx54DtB/+5USQKlkjqdTpw4cQKBQIBt7oYVzWYTkUgE1WoVd+/exfLyMsrlMtMzotEoi/0pF4EKRuos63Q6nDp1CsePH2dqgsViGTjMD3MRuRfq9Trb6X744Yf46KOPUKlUkEwmBw7QDocDf/3Xf425uTkEAoEXmvT3qHhuneZ+v89q0FqtBplMhlarxXGZTqeTAyocDgfsdvuBL5p0+un3+2xBttvm5XljP+XxQYC6INQJocjuYDCIjY0N5HI5tNttngRQd41UyzqdbmhvXvKvBDAQt0qdLYpmLZfLfLInJfZhs80SptUFg0Gsr68jm83eFzpgNBrhdrvh9XoxPj4On8/3gl7xs8duq7VKpYJ6vY5ms8kHLAKJ+0h0RN0dq9WKSqXC3Vh6jlQqFWq1GqRSKXePyEoykUjwYZ8608/7fXc6HdRqNU60i8fj93WZge+eIb1ez/fF1NQU1Go1NBrNfUXNfiNzoiaQbRQdTGKxGNbW1rgDuzvljEDrTr1eZ93BKNEbhEKvfD6PVqs1IFQWpim+rCBqGF2H/a4FWYE6HA7uNA87n55qCko83tzcRLVaRTweZ9rjXgl/JPinECWPx4Pp6WlYrVbo9fqhPig8CtrtNjcbhKI/uhZkHavT6TA5OYmZmRnYbLahpWQI8cwrIorolUqlWFhYgFqt5kjrXq8HrVbLzhiTk5N8Sn8WiwwpnEkwtfvk9zwhVNcSCoUCvvjiC6ysrLCx95MsGPS+crkcbt68iVwuh3A4zIKgzc1Nzrc3m81wOp1488034Xa7ce7cOXg8HuaXjxJarRZ32FZWVvDtt9+i2+1ienoaSqUSR44cgdfrhVarHbn3th8oMIfEFuSGsrswFCYnut3ukVicHgfCaFoaASYSCSQSCRQKBRaDChduAq1PNNGSSqV8PYvFIsLhMMrlMr799lvkcjlOxqO1rNvtolgsYmlpiWPddTodi52eF4Te3J999hni8Thu3LiBYrG4J39UKpXCaDQyXzKXy/F4XHhYLpfLWFtbY/974ZrV6/UQDocRDofRarVQLpfRarUQCoUQDAbR6XS4QbEbMpmMtSperxd+vx8ul2vAJWmYQaN5mpwmk0moVCpMTU3BbDbD4XDwFGMU3s9Bg+hx6XQaly5dQiKRwO3bt5musHvfpVqBfgn9+IcVVDQXi0VEo1Gsrq4yf5kOr8CgK4bH44HX6+Xput1u5+kUUbtGFbS+JhIJXL16FeFwGJubmzzdI+rF9PQ0Zmdn4ff7mZ4xLJZyD8NzK5oVCgUvkMDgwit0xBD+/0GDiuZ2u81F8/P2cxYWyrsXjXw+jy+++AJqtRonTpx44mKekv7S6TQ++eQTTt5ZX1/nTizwvWLe7/fj5z//OWZnZ5m6MMyn+/1AD2s+n+ei2eFw4L333sP4+DgWFhbg9XqHtnv+pKjX62wjls/nkc1m7/seiUTCIkiLxTKyMdD7gcafzWaTEzbv3r2L27dvI5lMMnWi1WrtafNI3WVyxqANnyY1wHeH2lu3brFXOHWfiaJBoQ16vZ654s+ra0oWkqlUCpubm/jwww85QKFYLO65lhCHlJIPC4UCe+8KUalUcOPGDcTj8fs44b1ej8fSjUYDuVyOU/EetrbSv3/8+HG43W7ePIe5SBKCuOxEQUkmk7DZbHC73azFGUZNyPMCTRlCoRA+/vhjbG5uIh6PszB5L5Dwjdwkhn0fIvE1OWXcu3ePn3nhe6TOqlKpxOTkJE6fPg2fz4cf//jH8Hg8XCw/qBM/CiBry0QigW+++Qbr6+tIJBJoNpuQy+X8Pk+ePIkf/ehHcDgcmJycHCkDh+daPTyrB4DGHSQqpC4idVz3Avkl06j+eRVSRqMRXq8XCoUCkUiEhVq0wRBHLp1OY3V1daAjqtFoWDhAp9ZyuXxfaAWJDsLhMCd/VSoVdLtd9uZVqVRwOBxwOBzw+/08FhoVO6290Gw2+T0XCgXIZDKo1WrexIxG48i+tweB7pm9BFd0DWiaQ+Kaw3AdhPSjfD7PQqxoNIpqtYr19XVEIhGmqpAnKF2j3X7L1A2iDVun0+3575LATyqV8rPb7Xb5+4leRrHJzwu0KatUqgEx4n4g8aJMJsPOzg4nvVWrVeZ2A0AqlWItyG46G0XiVqtV7jI96kGBPjth82JUNk4ALL4tlUq8jhNtzGazDV0QDNGLaDJSLBb3/D6lUgmbzcZ7we57WCieFzaAiApFYVLpdBqpVArhcBiZTIYT8R7UDBqm6/UoaLVaHINdLBb3nVwT3Uur1cLhcLDwjyxeR+GA8CBQrZVIJHjKRJ95t9vlNWlychJGoxHj4+NwOp0wm80jlbAKDJHl3NOA1Lnk7WwwGJhnt1fR3Ov1cO/ePXzwwQeYmJjAz3/+cxYDPssPTyqVYnZ2Fj/+8Y+xtbWFSCTCG43wdfb7fXz11VfM/aafnZiYwMTEBNRqNWw2G2QyGe7cuYM7d+4M+FvSKLZYLOL27dsoFArodDqQy+VwOBx47bXXOHGJRokLCwsc9DGqyGQy+Jd/+ResrKygUChAr9fD6/Xi9ddfx+Li4qF0iqCNipwydnf31Go1xsfH2VKMuhqHgZ5CXZ5ms4krV67gypUryGazuHXrFnebKbZ1d0S8XC6HXq/nwplCbxwOB6v3zWbznusBFQ0SiWSgaCA+9KlTp3Dy5ElOD3weIA9zqVSKWq2G6elpyGQydLtdpNPpPbu+1WoVN27cgFKpxO3btzmqlsTXhEqlgkgkwnqQ3WsqBQkJp1iPikajgXw+D51ON5Qprg8CiZ2oOCS64fz8PObn54fOA77RaCAUCqFcLuPrr7/GlStX9rzmXq8XP/nJT+7rgBKIsw2AD1E0bclms7hy5QoymQxCoRB2dnZQLBaxtbWFSqXy3Dn+zxpCSmUoFNr3HjYYDDh16hQcDgcWFhawsLAAs9nME6tRnkYIw8Q+/fRT/PrXv0Y+n8fW1hZHoZvNZoyNjeEXv/gFxsfHMT8/j7m5OXaaGSWMboUkgLBDpFKpoNPpWOy3F/r9PvL5PCKRCFQqFY8TSbDwLF+nwWCAz+dDvV6HTqeDWq2+b7Pp9/tIp9O4d+/efVZYZBPV6/Ugl8uxs7OD1dXVgRMudW6I61qtVnnspdVq4fV6Oe1rbm4OGo2Gw0xGFfR5x2IxBINBtjHU6/VwOp1wu90jL67YD51O574uKkEmk8FoNMJiscBgMPC04jAcHoiG1Gg0mJaQSqX40LQbQiU6jQrpniAHGZPJxN0gp9P52OuBTCaD2+2G3W5/7kJaWv/IttNisXBHfK8OWLvd5utUKpW4M7078rnZbD5QzPeo2O0CQFxf6jiPmjdvt9tFuVxGoVBgzqZcLofBYIDVah06jibRE4vFInZ2drC0tLRnkVcul3H69Gn2UxZOXIROSwDYdlFocRgOhxGLxbC9vc0CMNIT7AXa34QH2GE6bDwIrVYLyWQSsVjsgbQT4TpsNBqh1Wr5Gna73Qe+X+E1GcbrQo06uhYrKyuo1WrskEbiYoqVDwQC8Hq97BAyajgURTOpwJVKJc6cOYN6vY5kMokvvvgC2WwWrVZroMtEpv/AdxsvURee9QdIvFLyJf3pT3+KWCyGW7du4e7du+wB2+/37xudSaVSVKtV7OzsQKFQQKfTQSaTIRKJIBwO39eppgOAxWKBw+GAx+OB2+2G2+3GW2+9BZfLxc4l5B4wqiiXy5xhTyPA2dlZTE9PY3p6mkdAo3ya3w+9Xg+hUAifffYZUqkU82oJWq2Wudzj4+PcZT4MRXO9Xsfm5iby+TyWlpbY7mm3pZxKpYLL5YJGo4HP58P4+Di0Wi130qhrTAUPdaEpffJxIJFI4HQ64XK5nvtzRU5FNpsNr776Kubm5qBUKtFsNlGpVBCNRu+7NgQSR0ulUrRarYH3vTsM5UkgkUhY9CMMbXj11Vdx/vx59qYdJbTbbWSzWSQSCbYgpGme2+2GXq8fqqJgd6T6fhOIdruNX//617xuCpsNEokEVqsVFotlT4/icrmM7e1tjsIuFosP1A5JJBK2GXS5XAgEAnC5XOw+M6wQCo/JJeNBot9qtYqlpSV2rrJarTCZTFhYWBgIEtsLWq0WExMT0Ol0HPwmvDYvWixJ7kHlchn5fB6lUomFnqRlO3fuHLxeLxYWFjjtcJg/3wdhdCslAWQyGQwGA3q9Hk6fPg2n04n19XVsbW1xt1l4Q/d6PaTTaWQyGSiVSrYl24u/ddAg8Z3FYoFMJkM+n0ev18Pm5iYvQFQ0U+FMrykSifCNRv/d3WEGvn+IdDodZmdnYTKZcOzYMRw9ehROpxOvvvoqW/qN6o1L6Pf7qFQqSCQSSKVSHBHudrvx2muvwePxwGKxHAo6wl7o9/sIBoO4dOkSKpXKfV68Op0OCwsLmJmZgc/nOzR8ZuB73/VYLIaVlRWsrKzsyadVq9Xw+Xyw2Wy4cOECzp07B5PJhKmpqYEQAQD3PV9PghfVFSJ7MyqaW60WarUa0uk00uk0crncvkUzdQqf5WubnJzEm2++yXHkCoUCp06dwqlTp9iibZRARXMymWRdCR1aXC7X0K2t1BGmopmi1Hcjk8lge3t7z2dBIpFgbGwMXq+XG050HfL5/AB951GmB1KpFC6XC8ePH4fNZoPf74fNZhv6ooreJ7nDEA1sP1QqFSwvLwP4fn2wWCw4efIk70+7NRYEu92OV199FQ6H4741nL7/RTaEOp0OCoUCcrkc8vk83xM00VtcXMSf//mfsxB92A6Tj4tDUTQThCNWu92OQCAAqVSKSCSCVqs1QIOgB5ucNMiU/nkUV+QoQgvD5OQkjh49inq9jkwmw5Y1ZPFEBf3DFiB66FQqFVQqFSwWC6ampmC1WjE5OQm32w2r1XpoxvO0cGWzWS6eer0eR4E7nU5YrdaR7qLvB1LuEyeeYmnpHjEajTAYDPB6vSxMG/XFajeoI0yUCqIXUGgN8TEtFgsWFhZgs9kwPj4Om83Ggkh6Fg7TdaGueb/f5+eAfk8OIwdBtSAxssVigdlsHhBR7oZMJsPCwgImJibY2k+hUMBsNo+cwwSJbkulEtLpNJLJJFqtFtul7lf8DAN2C/f2+579uMcSiQSVSoWdVmq1Gk8pHsVecS+KjsVigc/ng9Vqhc1mY4HcMKPRaLA/825N0n7Y3W0nPn+73X7gM9BoNLC2tsaH32g0ylQsun5ms5mpmy9ib6eGIx0IiKusVqtZH0JTvGF9Nh4Vh6qaoNMbbaQSiQTZbJYTachTU7ggUJqTxWLhce3z+FBJoNXpdKDX63H+/Hlks1lcv34dmUwGN2/exO3btx95LEoPjFKphNvthsvlwtjYGP7Nv/k3HOhhMpm40Bh10MLebrdx8+ZN/Mu//Aurti0WC6anp3H+/HnodLp9XRBGGeRJTRsYhUqQgn9ubg6nTp3CxMQEzp8/j7Gxsed2bz8vaDQaFlxtbm5yJ4ei1Kenp+H3++FwOHDhwgXmGRO16VnE1Q8DhEES4+PjOHv2LBKJBMrlMpLJJOLxONvHPSko5U2tVuMHP/gB3nnnHWi1Wtjt9j21EcKxvnCDpbhp+p5RAFEPtra2cOXKFdy7dw96vR5+vx8+n2+ktSEPA+mBqLMuFAI+CojuQcWVXC7HwsICLl68CJPJhLGxMS62hvV+6Pf7SKVSCIVC2NjYYJHx41KYarUa1tbW+NC+X7Erl8tx7dq1ATs+0ibpdDqcPXsWr7zyCoxGIyYnJ5+7sE5oxEBuIEK/8oWFBc5KOAzPxqEqmgGwJzQA+P1+WCwWXL9+nUUZzWaTb1L61Wq19jXgf1aQSqV8c0skEpjNZh6hqtVqFrMJO8x7mcELRRTUOaNOu9vtRiAQwMTEBHefDwuEEbaUckifrVarZdun52kn+DzR6/W42yEUshKXXa/XM4/dZrPBYrG86Jd84CAOskwmY9qTRCJhG0mfz4epqSk4HA5OnHpZQOuCTqeD3W5Hp9OBzWZDu91GqVSCUqm8j9q11/oiXCuFUCqV0Gg00Gq18Pl8zM2k0Je9sLtgGkUI3WoqlQoymQzS6TQ0Gg0MBgMLL4cVwj2DDi+PW+zt1gg96N8SXgvS8tDhnf7fbDbD7XbDaDTyJHTYQRQXcpSRyWQDRgKPciClacWjgDRYBL1ej2KxyGmegUDggROCZwk6/CgUCqhUKqjVao6RJ+420eAOAw5fNfH/oVAo4HA4OM++UCggn89jdXUV5XIZVqsVVqsVgUCArbhe1PiaFgmpVIqzZ8+iXC5Dq9XCarWiVCrxaZZsxYR2WRMTE/D5fDwGoQ72+Pg4LBYLezIftsKR+KyFQgGbm5tIJpMwm8145513mCNH73tUN+gHod1uI5VKIZvNsnq/3W4PRNYe9ghf0jKoVCq88cYbsFqtAMDuD0RLobH5ywbq7pI4UavVsv3X9vY2NwtarRaCwSCCwSBv9hKJBF6vl9MjdxczxN3VaDQ4f/48H8wf5BjysBjlUQGJv2iyQ65I5JoyrPoJEsy3221MTk7ixIkTKJVKiMViqNVqB+pgIhT40ectl8sxNzeH2dlZ9hSXy+U4efIk71OjUFhJJBIO4dFqtfjhD3+I2dlZxGIxxGKxgfA0otA9DfbyhaeDR7fbxfLyMrLZLLtSGI3GA3qnjwaKP9dqtXjnnXe4eefxeKDVajE3Nzfyz7wQh6uSEkChUMBut6Pb7eLEiROQSqWIx+PsrDE7O4upqSn4fD74/X643e4XtthRB0av18PhcKDb7cJkMsHlcvFDSONUKpqNRiP0ej1OnjyJ8+fP82hUo9FgbGwMY2Nj3E04TDcsoVarcdrQ9vb2QNF85MgRuN1uqFSqQ/neAXB4QDKZZHoGGcwLE+4Oe9FMVKPXX38dr7766sCfD7tV0/OAzWaD1WpFt9vF7Ows2u02p4M2m02OXO/3+wiHw9ypkkqlcLvdOHHiBEwmE2ZnZwdoXSqVamC98fl8L811pqKZiiGpVAq9Xj8yRXO/38fExASOHTuGTCbD6wdwP+/2SUECv2PHjvE+JJfL8cMf/hDvvvsuj/NprRq1fcput/MEr1wuI5VK4caNGwC+4yALr+nTFs1CdzCiJCqVSrahXVlZwZUrV3Dq1Cn89Kc/xcTExFO/v8cBBbf0+328/fbbOHHiBGQyGfP7D5P4HDjERTOBFjSXywWpVMqWJ+Pj4/D5fHA6nQMP74uEcIM3GAz8mo8cOQKn08mOGiTy02q1mJqa4m6Q2WyGSqUaejHKQaDdbiOTyfBBiLwgKdzmMBfMwHcLldlsZk68UqlkqzASwdHBahS6N08L2nhF3A+aPNBGazKZ4Ha70Wg0oNFo0Gg0cOTIEQ4ooZ8h1xWi+gi79TRWVyqVhyL+91HR7/e5KBLazFksFoyNjcHpdA6tC4hUKoVGo0G/34fb7cbMzAyMRiOSySS0Wi3y+fye/ub7QXgPEN+WIJFIMDMzwyE7NMKn/ZbcUkb5mSV6ic1mg1QqxdTUFNrtNur1OrLZLN8npVJpoINPBy7KUtiPUmEymdhb3+v1QqPRsOBbqVTCarVCoVCwQJDsY18U6HpQyBJN/A7b/nPoi2aJRMJ2U61WC+fOnUOn02HujTABa1gWfRLw2O12tFotto8iv0tSp9KBgG5S4kCPWizlk6BcLuPbb79luo3H44HP54PH44HL5RrajeugoNfrceLECdTrddy9excmk4nFgDKZDF6vF4uLi7BYLEMXsiDi+YM2NIVCgYmJCbhcLnYT6vV6ePPNNwfCGWj0TA0FSkwlCNebYVo7nzVIBLa8vIxoNArgO6ea48eP42c/+xkMBgPMZvOLfZH7QKlUwuVyodvtwm6348yZM0gmk3C5XIjH47h69Sq++eabR+42m81mvPHGG3A6nTzRoPtAKpUyFYMOtFKpFAaDgWmQo1wwE/R6PY4fP45Op4NTp06hVquhWq1ygiZZ29Jz1ev1EA6HEQ6HUS6Xsba2dp9NKPBdd3l+fh6nT5+GxWLBsWPHYDQa0Wg00Gg0eNKjUCiwvb2NYDAIj8fzwu89omYA31vfHra14dAXzcB3HyQVDi6X6wW/mkeD8DW73e4X/GqGDyQATKVSbG9DNmKHbRy0F6jTrNPp2HJNJpOxdZHBYOBOxWE76Yt4MtAGptVq7+N4ezyeF/SqRg+NRgPFYpGDhMg6j5wzhpWeQS4HAJjOp1arMTExAblcjvX1dajV6kcWk1FAEE1shQma1Hn1+/2Hegokk8lgMpkAgIXGtVoNWq0W1WoVRqMRRqNxoGimUBjat/YSVRLlgZpnMzMzMJvNaDQaqNfrA0Uz8N1hzmq1vvBm0WHsLO/GS1E0izh8oIWn0WjA4/HA7/djamqKu+6H7XS7H2QyGS5cuACZTIZOp8OTiOPHj8Pr9Q71Ji5CxChDLpfDZDJBoVAwRWrUuu7UKZ2YmIDb7cbrr7/+yGJAg8GAmZkZmEwmtnIUBqJYrdaXai0mkJ6KCmav1zvggDU5OYnTp0+jXq/jvffe2zNwSCL5LkGTkgCJgkmcZhIHymQyTExMQK/X73kYFnHwEItmESMJKpqbzSYcDgdOnjwJj8fzRNHHowypVIrz58/jlVdeue/rL+OGJULE8wIVzWq1Gnq9fiRdinQ6HY4ePQoAePXVVx/bPUO4xuxea17WtYeK5v2sYoXBMg+63kIKC02JhN9P11er1WJsbOxQUiGGEaP1hIsQ8f+h0+kwPz8PmUyG6elpeDwe2O32Fz6eehE4zONPESKGCeQDTpaeCoUCrVYLDodjZAsWWjvENeRgsd9h4iD+zt1fG9V7bxQh6R+UMaMIEc8R9XodkUgE9Xoder2eU+AoqlOECBEingVKpRLK5TJHkvf7fdhstpcqPEeEiJcVYtEsQoQIESJEiBAhQsRDIM5jRIgQIUKECBEiRIh4CMSiWYQIESJEiBAhQoSIh0AsmkWIECFChAgRIkSIeAjEolmECBEiRIgQIUKEiIdALJpFiBAhQoQIESJEiHgIxKJZhAgRIkSIECFChIiHQDS0FfHSgPxVW60WCoUC2u02ZDIZZDIZtFotfD4fNBqNaBYvQoQIESJEiLgPYtEs4qVAr9fDvXv3cP36dSSTSVy+fBnZbBY6nQ56vR4zMzP4T//pP2F6ehoKhUIMSBEhQoQIESJEDECsDEQcevR6PXQ6HeTzeYTDYUQiEdy6dQvJZBImkwlmsxkSiQTVahXdbhcymexFv2QRIkSMAPr9Pv/q9XoDU6rdvxchQsToQyyaRRxa9Pt9lMtlrK2toVAo4PLly7hy5Qrq9TosFgsMBgPsdjscDgcmJyfRbrdRKBRgNBqhVCpf9MsXIULEEKPZbCKdTqNeryMcDiMcDkOpVMJut0OtVsNgMECv10OtVsPhcEClUr3olyxChIinhFg0iziUoO5PqVTCzZs3EYlE8NVXX+Hq1avQaDSYmpqC0WiE1+uF1+uFzWZDr9dDoVCAUqmEwWAQu0MiRIjYF81mE9FoFPl8Hl999RWuXLkCrVaLhYUFmM1meDweuN1umEwmmEwmsWgWIeIQQCyaRRxK1Go11Go1pNNpRCIR7OzsoN1uw2azwWQyYW5uDhaLBQ6HA3a7HSaTCQaDtwr0ZgABAABJREFUARqNBgqFQiyYRYgQ8UB0Oh2USiXkcjnk83nkcjnU63VEo1EUCgV0Oh10Oh00m00EAgHodLqXSmTcbDbRaDTQaDSQTCbRbDYhlUohk8mgUqlgs9mgUqmgVCp5zRWpcS8XaLrbarVQLpdRLpehUChgsVigUqmg1+uh1+tf9MscgFg0izh06Pf7iMVi2NrawtbWFj766COEw2FMT0/jBz/4AbxeL3784x/D4/FAoVCw8E+r1UImk0GhULzotyBChIghR71ex8bGBsLhMFZWVrC+vg4AWFtbg0KhwNjYGCYmJjA1NYWZmRkYDAbI5fKXQmTc7/eRSqUQiUQQCoXwP//n/0QkEoFWq4VWq4XH48FPf/pTeL1e2O122O32gTVYxOFHv99HPp/Hl19+iWQyiRs3buDWrVuw2Wx499134Xa7ceLECRw/fhxS6fC4Ix/+p/clQL/fB/Cd4I1+T1+n/3+QKEUikQzVTfk0IEFOtVpFKpVCMplEIpFAMpnEzMwM3G43xsfHMT09Da/X+6JfroghAz0v3W4XvV7vod9Pz85heoZEPBh0j7TbbRSLReRyORSLRVQqFXQ6HQDgrqlcLofBYECj0XjpRMaNRgOlUgmpVApLS0tYX1+HwWCATqdDoVDA6dOnudOs0+mgVCqhVqtfqmv0MoL26G63i1qthkQigXA4jNXVVVy7dg1erxd+vx+9Xg+BQOBFv9z7IBbNIw6iIZTLZWxvb6NSqaDVaqHRaKDZbCKVSqHZbMJms/E4zGq1DnRTdTodJicnodPpeKEfRdCop16v4+bNm/jTn/6EfD4PpVIJj8eDo0eP4q233oLVah26kY+IFw+6fxqNBm7cuIEbN26wI8JekEqlmJycxOTkJEwmE2ZnZ8X76iUA0TG2trawtLSEzc1NJJPJgUNWv99HoVAAABiNRlQqFaYnvIyTLGratFotSCQSxGIxfPjhh7BYLPD7/ZiYmIDT6cQbb7wBm832ol+uiGcAKpLb7TaCwSBCoRASiQQ+/fRTJJNJhMNhAN+tw+l0GnK5HKVSaaAROAwYzepIBIDvFuZarYZMJoNkMonPP/8cyWQSlUoFlUoFhUIBd+/eRblcxtzcHGZmZmA0GhEIBAY2d4fDAaPRCJlMBrVaPdJFczqdRrFYxK1bt/DJJ59AIpHAbDbDZDLhyJEjeOONN6BSqV7KjUvEg9Fut5HJZFAsFvF//+//xd/+7d+i2+3uWzTL5XK8+eabePPNNzE2NgaPxyMWzYccNFLe2trC2toa7t69i62tLbRarfs292KxiFKpBIvFgmq1imaz+dK68tAzRDxv6jBKpVLMzc1henoac3NzOHbsmFg0H1J0u11UKhXUajXcvn0bly5dQiqVwpUrV5DNZvnQ2Wq1kEql0O12xaJZxMGjUqkgnU4zDSGRSKBWq6Fer6NcLnPHuVwuI5PJoF6vcwIeoVQqwWQywWq1wmazwW63Q6FQMAdvVNBut5HL5bjwaTabUKlUMBgMMJvN0Ol0UCgUkMlkL40YR8Sjo9VqIZlMIpPJcGJkp9PZ917p9Xrs/d3r9RAKhdBqtaDRaHjMrFarX2raRr/fZ6pLpVJhL/Rms4lut4tWq4VWq8XiMJlMxuLcYUK/30en00G73UYikcDa2hrC4TB3zvai8mi1Wmg0GpjNZj6oH9Z7gUbuzWaTBZFbW1vY3t5GLBZDo9EYeO90X/T7fUgkEqZpiOvy4UWz2UQ8HkehUEAkEkEikUA+n+e1APjucKVQKKDT6WAymaBWq4funhidikjEfej1egiHw7h8+TJisRguXbqEZDLJm1S320Wj0YBEIkEikUChUIBcLodKpRpYwFQqFT766CNoNBqcP38er7zyCux2O06fPg2z2fzi3uBjolwu48aNGwgGg9jY2EClUoFGo8Hc3By8Xi98Pp9YNIvYF4VCAV9++SV3EXeHVexGv9/H2toa4vE4XC4XKpUK3G43/H4/JicnodfrMT4+PnBAfdlA3aJms4mlpSUsLy+jUqkgEomgXq8jmUwinU5Do9HA5/PBYDDg5z//OX72s58NFbeVwpFqtRouX76Mf/qnf0K5XEY8Ht+zaJZIJPD5fJiensbs7Czsdjv0ev1INSEeB+12G61WC/F4HB9++CFisRiCwSDC4TDK5TLy+fyeP0eTwMnJSbjdbtGW7xAjn8/jj3/8I4LBIK8FrVYL1WoVAHhf1ul0mJmZwfj4OOx2+9Dt1c/1CRYK0w665U5inJcNlUoFyWQSqVQKmUwGmUxm4M+FXDISqeyGTCZDOp2GSqWC3W7H2NgYpFIp2u3283gLB4J+v49Wq4VsNotUKoVyuYx+vw+ZTAaz2Qy73Q6dTvfS3id7YffzSKf9vSAUkdI1PCzXkQ6ZtVoNqVQKsVgMlUpl4Hv26xASFardbiMUCqHRaECj0cBisUAikTySmHDUsde6Tl+jTbFeryOVSiEYDKJYLGJ7exvVahXRaBTRaBR6vR7FYhFmsxmvvfba0I1ke70eGo0Gr7fb29tspyZ8buiZkMvl0Ol0cDgcsFqtbGV5WDvNlLparVYRDocRDAaxs7ODcDiMVquFZrO5789KpVLuxO+VrDgsEN7nu7/+JKD3OGzv81mg3+9zpzkcDiORSCCTyQxcO7IjVKvVPPkexobDMyuaqdNJD0Gv10M2m0Uul0Or1UKpVDqwokyn0zFPV61WQ61WH8jfO+zo9/tIp9NYXV1FPp9HvV4f+HOlUsnpdgqFYt/rQp8HjaeXl5dRr9dx/vz55/E2nhqFQgHFYhFbW1tYXl7GxsYGAGBhYQGTk5O4cOEC/H4/xsbGXooF6mEgf9l2u41SqYRSqYR8Po87d+6weEkIiUQCi8XCKYr0rFmtVlit1uf/Bg4A3W4X9XodrVYLd+7cwZ07d5BMJnHnzh3mxT/OZlir1bCysoJwOAy5XA6r1YperzdSB88nAa1BmUwGzWYT+Xye15NyuYxarYZYLIZarYZIJIJYLMbfR/cf8N2GqdVqYTQah1JvUK1WsbS0hFQqhXA4jEajsWeHmRoPWq0WJ0+exOuvvw6XywWj0XioD+zVahXZbBbJZBLxeByxWAzZbBaVSuWBTjS9Xg87Ozv4/PPPWRBYqVRgt9tfCLeZHKiIOiR83a1Wi+sX4HvKTrVa3bchtRvCQlmr1cLn80Gr1UKpVHKX/bDdI/V6HfV6HdlsFplMBqlUirvLBIlEgkAggKmpKYyPj+P8+fPw+XzweDxDdz2eWdHc7XZ5UWm32+h2u4hGo9jY2OAFdPeFe1LQWMflckEikbxURXMmk8G9e/dQq9XQaDQG/lwul8Nms0Gj0cBoNEKv1+95A5bLZdy7dw/NZhPJZJLHoruL8GFEv99HsVjk7sbKygo2NjYwPz+P+fl5TE9P49y5c5iamnppTvUPQ7vd5lEzdfqCwSD+4R/+ATs7O/d9Py1ogUAAbrebPTSpmB7Fa9rtdrmo++KLL/BP//RPqNVqbLT/oM7YXqCiWS6Xw263IxAIQCaTPfJmOqqgNWh1dRXlchnBYBCVSgXRaBSxWAylUom7ytREoZ8TgopmanwMG6rVKlZWVphysLvDTFCpVPB4PLBYLDhx4gRee+01GAyGQ50w2u/32eIzlUpx0VwoFHjit58lY7/fRygUws7ODhKJBE6cOMEOG1ar9blfMyF3XWghCHw3Vdra2uIpFHVPU6nUfXvvgyCTySCTyWCz2aBQKGCz2aDX6zng5bDdJ/V6nbVG6XQaqVQKlUplYA2QyWTw+/1455134PP5cPbsWa7nhu16HEjRTCcJ4tCStUitVkOn00G9Xke73UY4HB7gsj3uxrQfWq0W1tbWUCgU4Pf7odFo+MY87BB28glyuRwymYydMsxmM4xGI3Q63Z4/m8lksLOzw92TSqWCUqnEJ0Pq3g9rYlO73WbxIx3QaORHbiCHdSz6MHS7Xe6E1Ot1NBoNVKtVhEIhVKtVJJNJJJNJpiRQF2U3KpUKcrkcpFIpgsEgqtUqx40rlcqR5GsKO0rlcpk7z51O57FpFdShkkgkPMYdNorBk2IvMR912NrtNjY2NrC5ucl0C0qAy+fzqFQqvK7QxEuhUMBkMkGhULBo0mQyYX5+HhaL5YUUS/uBJjGRSIT51w9q9qjVagQCAXg8Hni9Xj4EDOO6eZDodrtcbNLzszs3YD/Qs1Kv1xEOhyGTyWAwGGC326FUKnk/f9bo9/tc3DUaDf4voV6vIxKJoFar8ddarRZPVx4VNHEoFApQqVQwm808tVOr1XA4HCwgHpbn4HEh9GJOJpPY3NxEMBhEoVAYEP4JoVKpuE4ZZirTU+9y/X4f0WgUW1tbqFar3EGmQAkqkIn/1Ww2+YR2UJuKRqPB0tISjEYj/uIv/gIWiwVqtfqlTRfS6XQwGo2Ynp7Gr371K0xNTUGn03GMKwBepBqNBtbX1xEKhVCv17n4lMvl+Pbbb5HNZjExMYGxsTEoFIqhu6b9fh/lchmxWAzpdJrvK1qM9Hr9UL3e541qtYrV1VXmkdLCtbKygmKxyPdAs9nck5pByGQyKJfL0Gg0zEF9/fXXkc/nYbPZcOLECZhMpuf3xp4SwkW9Uqkgm83yvfOom/3Lgr3EfPl8nu8rOlyTK0av10Or1eIDLDVHhLH1586d44683+9nxbxcLofZbB6KZ7bX62F5eRnffPMNYrEYLl++jFQqhVwuty//3+Vy4d//+3+PY8eOwWQysZXnqB0oHxfUuKCJZ6PReOyDZy6Xw0cffQS9Xo90Oo1+vw+z2YyZmZnnYuXY6/Vw69Yt/PGPf0Q+n8fS0hKKxeLAnzebzYHuM3WmH6QHEUJYCFICokqlgt/vZwrhz372M3i9XqhUqpEVRlLAWKPRwBdffIEPPvgAuVwOGxsbKJfL910vEoSS+G+YrRkPpGiuVCpIpVIolUo8nguHw8xlo/8Sdo9qhKeph52shOM92txUKhW63S50Oh2PSqRSKTQazdO+vZGEXC6HWq2G0WiE3+/H3Nwcx5cS6HOjrjJ1Q2izq1QqyGQyzDO02+3o9/tD2TVptVpc7NNCTRxupVI5tCfWZwmhECufzyOdTiMcDmNjYwOFQgH37t1DuVy+r6uqVCq5mBSi2Wyi2WxyN1aj0WBychLpdHokaQi02VF3TLgZ7lc0S6VSSKXS+8Ruh73AJhFcvV5HOp1GMBhENpvF0tIScrkcryEA7lsbyEJKKpVCp9Nx4ez3++HxeLCwsICFhYWh7KgJqV9kRbiXdgT4fk/TarWYnJzE7OzsC3jFzwf0fAinnM1mE41GA61Wi6cSu4vmhxXRzWYT0WgUarWa7chkMtkjF6RPC/Lg3tnZ4RTD/Vw/DvLflEgkA1NSmviN8kGL1lfyXF5fX0e1WkW5XL6PYUDPDk0sNRrNUO/ZT/2p9Ho9rK6u4oMPPmBOIPkCk5hmd5iEWq2GxWJhb0aFQsFxow+7UdrtNsrlMlqtFvMxqRPSarUQCoWwtLQEq9WKxcVFGAyGp32LIwWiUCgUCqhUKmg0Gmi1Wr7+/X6fR2iRSAShUAgbGxvcSSQVdDqdxueffw6z2Yz5+XnMzs7C6XTitddeGyrzeRqpbWxssFm+Xq/HxMQETpw4AafTOZQK3GeJfr/P/MJEIoE//vGPSCQSiMfjiMfjkEgk8Hg8GB8fh8lk4g4xcU63t7exvb2NdrvNCzmBNkga1ZfLZRgMhue2sR0UyJ4wHo8jFAo9tPCVSqWYnZ3F7Owsut0uc59jsRgSicRzetUvBqVSCVevXkUymcStW7dw8+ZN1Go1ptgZDAZ4vV7odDp4PJ4BTrJGo4HX64VWq4XBYGBtBYlJh9FSikBcXSqYKZhht7hTJpOxaOnIkSP30eAOE/r9PjY3N7G1tTXQJCORfz6fRzweR61W2zPw5UEgcW6v1+P6Qa1WP9e1hfY/qVQKu93O3uEHfY9SQ4PWkWw2y4eQcDgMpVIJl8sFjUYztM/Hg0DTpmaziWq1ylPN3Z+lcCLscrlgtVqHPh/iQIrme/fu4Te/+Q1ardZ9HWQatwnHDHq9nkcu1AHVaDRwuVwPFYE0Gg3EYjFUq1X0+33E43F0Oh0Ui0XUajWEQiEsLy9zfvnLVjQD4KhW4oMJi0YqelqtFsLhMG7duoVQKIRsNotyuczfl0qlkM1mIZVKsbW1ha2tLczOzuLo0aNDVzRns1lsbW2hWCxCKpXCaDRifHwcJ06cgMFgeOkmDlQ0Ly8vIxQK4dNPP8XOzg6PT61W68B4PBAIAPhevPunP/2JC6Jutzuw0JFeQS6Xo1wus5hu1IrmSqWCGzduYGNjAzs7Ow/d3CUSCWZnZ/GTn/wEzWYToVAIlUoFvV4PyWTyOb3qFwMqmjc3N7GysoKVlZWBYAqv14uFhQXYbLb7vN2tVitOnz7NLitUAIyKbSFNUamjLpyYAt93ybxeL1555RX4/f5DfUjv9XrY2trCJ598glgshs8//xypVArA95MXujeEzxTdKw8CTX46nQ4XzTqd7rmuLfT6pVIprFYrU4YOcrpK16ZcLqNaraLVaiGTySCbzUIikSAcDvO+7XQ6D+zffZ6gQ0G9Xke1WuXDwW4oFAq4XC6YzWYumjUazeEumoHvizTg+0WEugoajWbP7sP4+Dh0Oh3UajVzdx7EZaHNu1wuI5lM7jlCJV9euVwOuVw+9AvyswI5ltApr1Kp8DWhg0W5XMbW1hbnv+8emdB4RSaTsXUd+RwPC6grQJONdrvN1k6UAPiyJrKRmj2bzXKEr1arZc/qQCAAh8OBsbExuFwuAOCustPphNPpZP/h/UQ9RFcY9uKHOlidTge5XA65XI5FyZlMhg/gND6maYVOp4NSqYTFYoFWq8X8/Dw8Hg+q1Sry+Tx6vd7A4r6btjHqoBjoaDSKfD7PFAyyhTMajVCpVJidncXc3BzMZjM8Hs9Ao8JkMg1MukYBtOET7Yt4uruLN4VCweNkn88Hv9/PXNTDDFp36ZD9MBGcXC5noTBNQInyQ+t3rVZjES15pufzeeh0OqZO0XrzrEBuQFNTU2g0GkxfO2hOOt1HuVwO1WoVUqmUu7JCIX6j0Xikw8YwgmxNC4UCr69CEMvAYrEgEAjAbrfD6XQyK2GY3/NT3wmU4OJwONDtdvkGO3XqFE6ePAmr1cqiCIIwMpUeBCq897tY1WoV1WoV8Xgc6+vrPP7Z/Vo0Gg2sViuMRuNQn1aeFUjgl8vlmH+oUChgsVhgNpuxs7OD//E//gebz+/s7KDZbA4IHghE9XC73Thx4gQ8Hs/QdFFo0SWVcyQSgUajweLiIiwWCxYWFuB2u1mt/zKBRnxXrlxBOp1GOp1GvV7HkSNHcPr0aXg8Hrz99ttwuVw85aEOS7vd5iI7lUrh2rVryGaz/GfA9wdj2gCHfZGjSN9CoYA//OEP+Pjjj1Gr1Vg4SgW1EDMzMzh+/DjcbjfefvttOJ1OprJks1nU63Xm4AkL7sNQLAPfi+CuXbuGRCKBpaUlpNNpGI1GnDp1Cna7HefPn4fdbsfExAQmJib2FAqT2GmUQJ2/SqXClCZyChFCp9PhxIkTsNvteP/99/GjH/0IWq0WFovlBb3yF4MHPfv9fh86nQ4LCwswmUxwuVxwuVzslFEul7Gzs4NQKDRwKEkkErh16xbK5TLOnTsHg8HADbZnBalUitOnT2N8fHygSUB1ykGsccJu/Pb2Nv7Lf/kv2N7eZuOEZrOJnZ0d9Ho9uN3up/73XhRqtRrW1tYQi8WQSqUG1kUS/blcLvj9fvzyl79kjYPZbOaQk2HFgVSV1ImkolmhUMDr9WJmZgZ2ux3Hjh17qjhm6iD3ej0W/e02HqeNnERwKpVqqDfyZwkqcOr1OgqFAnK5HHeMC4UCtre3sba2xkb0e230JOChborFYoHJZBqag4iQM0UjIOp+ORwOGI3GoRQtPi/UajVks9kBix+9Xg+fzwev14vJyUm4XK4BcRvdNxRk0mw2OXZc+KzRJiKXy6FUKqFUKof6WSNxDTmIXL9+/YGhIxKJBAaDAePj4xgfH8fJkyfh8Xj4z3u9Hqved99fewmgRg10L+TzeRb9ESfRZrPB4XDA4/FgdnYWbreb76lhvgceB71ej9cUEhgTj18IakbQ9RgfHz+0642w2NtNv3hY91elUsFiscBut8Pn82FsbIydFZRKJdLp9H0/U6/Xkc/nUSgUuCP9rGka5A1NntrEZT7oDrdwjbBYLEilUjxhp6kYcedH9RBOlNlCoXAfpYlMGsxmM2w2G/x+P6anpx84kRIaPwjTaV/ElPOpKyCZTIbz589DJpOh3+/zDUY2ZTQifxIQf7LVauHmzZu4efMm0uk0d79SqRR6vR7UajXcbjcMBgNmZ2cRCAR4dPgyggqCWCyG3/3udxxHqdPpkMlksLy8zBzm3Q8lHTjIso5ibY8fPz5UwQPVahV3795FJpPB9vY2KpUKd00NBsNLfWgCwFZfQjGOcAOgDYE2JlqQOp0OQqEQUxeEqm7gu+7a2NgYjEYjTp8+jbNnzzIVZlTwsIVWKpXC7/fjrbfegsVi2dPuSrhg0y/h+jeqqNfriMfjKJfLuHnzJq5du8bULZPJhMXFRZw/fx4WiwUzMzNsq3aYnrVarYbV1VWkUins7Oww9Wu/otnlcj0XS7QXAWpMNJtN5HI51Go1LC0t4e7du1zQAt9nA1BzhtxSDAYDPB4P3nvvPbjdbj6Qk/BcLpffJ3Yj15JQKAStVjtQYD9rCKmm9Bwf9L1N9Mlarcax0mSaQD7f09PTQy2SfRioaM5kMqjVauj3+wMWe6dPn+ZpJ02w9/p86bBULBaxsrKCUqnEjRqdTofx8XFotdpnPoUQ4qmLZqlUirNnz+LMmTP7ngKe9IOnDlG1WsX169fxwQcf8MNUq9V4o1er1ZiYmIDNZsP09DQCgcBIexw+Lcj1oF6vI5FIDHwGQpugvU6xpGZ1u9148803WeBy9OjRZ6IiflJUKhXcvXsXOzs7HLbRbrehVqs5cONlhbBrLLSUExbN9Cufz2Nrawu9Xg8SiQTdbhc7OzuIRqPcJRDSoDQaDaanp+F0OnHq1CmcP39+pMJjHmU9oqL5zTfffCTLQuHf+aK6HweFRqOB7e1tpNNp3Lp1C1evXmUfWSqa3333Xeh0Olit1qGfMjwJaLRMSXX7xSQrFArmYgo98A8Tms0mc2w3NzdRKBSwvLyMu3fvsg0h8D3lkvy2lUol3G433G43Jicn8cMf/pApPAqFgovFTqezJ32nWCyiUqnAYrGwBdvzsLV8HodeWptrtRoSiQTC4TDvxRqNBoFAAAsLCyNfNBcKBWSzWT5YUWiNXq/H6dOn8Ytf/IJ1Ng/SsjUaDaRSKVy6dAmRSAQGg4EpwfQMAhidohk4uBuNRj50sq1UKvygRiIRFAoFFicJRzUqlQput5vjS2mk/LKDOof7gRYwiiDXaDTcObLZbJiYmIDD4YDBYBiqghkYfCjpAEXOGRRu87JCSFUiQWy/30epVEIsFkO73cbdu3dhsVg47phO9J1OhyNwha4YlApJ94XX64XVah2JgrndbrP9XqlU4o7wbtBIlmwwiYYihDAUpdPpjOz4dD+0221kMhnE43GUSiV0Oh0OiqKxdaPRgEQigUqlQqfT4et1WEApmkIx1oMwTOviQYA6oZ1OhyOxS6USOxSRFkAYi04e3BqNBmNjY9BqtbDZbLDb7SwOValUvCeR5zc9k3vhQbHrhwV7iYaFAutRg9C3m9I0KehGoVDAarXCbDbDbDZDo9HsS3Gj+4s0ObFYDJFIhO8XjUaDarUKi8WCdDqNQCDAeopnvR8NB0EV3/sHd7tdxGIxvki/+c1vEI1GEY/HkUgkOIxACLPZjLfffhtzc3MIBAJsjj3sm/mLBhWYk5OT+OUvf4mJiQmmcdANrlQqodVqh+4BrtVquHfvHpaXl5FIJNDv96HVajE7O4tjx46N9Cn9IKBSqWAwGNBsNpmTvL6+jmw2C7VajT/84Q+sYqdnKp/PsxMJFczNZhMSiYQ7RoFAAH/5l3+JyclJ2O32kXjGCoUCvvjiC6yvr2N9fX1fzrFMJmMbzL26FrQhkFiSBJOHaUMne7n19XVsb2+zjsTr9bLLSjAYhFqt5hhgp9MJh8NxaJ63ZrOJWCyG7e1tpi69TGi320gmk6hWq/jTn/6EP/3pTyiXy4hGo+zGRCN3alZ4vV4cO3YMXq8X77//PlwuFx+mlEol7yWlUgnlchnhcBhffPEFVldX2bpRxOiDQm4ymQyCwSDW1tbYg5o6zF6vl9129rLza7VaiMfjqFQquHTpEr766itOIC2VSkwv1Gg0+Oqrr6DX6/HXf/3X7Kv9rB2zhqpops27XC5zt0MY8VytVvf8WblcDovFwkEWQgoC4SDoIsOGJ7W2ou4g8X8dDgcWFhYwNzcHtVrNh45h7tYTZyqfz3PniwJyzGYz1Gr1ofmcnwQKhQIajWZgAaEoZIlEwrQdGqmSW8Zu60Hgu2KSXAHsdjvGxsZ41DoKaLfbyGazSCQS+64hwHdrBN3/e7034QGDpmGj5k+9H2i9rNfryGazXDRR912n00Gv16PX66FQKPAaQcmjo2qNtRtEbarVagOOGXuts7tT8YSdUQAj2y2kkTi5h6ytraFcLiORSPBaCwwKAImu43a7MT8/j7GxsT3/bmqO1et1ZDKZ+5wV9ns9lDJ4GLBXfXJY0Ol00Gg0BgLuaE8hizmn08m2lXsVt51Oh4Xb0WgU9+7dQ6lU4tAcglKpZC1TKpVCu92GXC5/5k2MoSmay+Uy7ty5g3w+j7t37/Lv4/E4i5H2Q7FYxFdffYVwOAyDwTDgE0qeq8SDIXEinUhGEZ1Oh5XdxLd7lFExWb2cPHkSZrMZfr8fExMTcDqd7JtNJ79hXezpvTYaDeZuk6eux+OByWRiTt2TggoiOlgM8+FhL0ilUszMzOD9999HJBJBtVrlQKB6vc7cZYpvlcvlD1Wnk58mPT/7LXjDCIVCAZvNBrfbPRDgsxsmkwlvvPEGO0MI31+/30c0GmV/58uXLyMajT5SMMqwg+zlVldXEQqFcO/ePcRiMQCAz+eD3W5nsWc0GsXy8jI0Gg3cbjf0ej1arRbrCIY9AvdBIKeMXC6HUqnEXNr9Pt9ms4lIJIJutwuFQoFGozEgHhsbG8PY2NjITT1brRYSiQQymQxisRhbLB7EAZFsGu12O44ePQqVSvXAVM1SqYTr168jn8/j9OnTsFgsI3Utd6Pf7/N13dnZYb7vYUC/30cikcDm5ianDNPBk9YGl8sFr9e7p3CW9vZsNstprcvLy4jH4+ygIgTRqOiQJ3R2eZYYqqL55s2b2NnZwZUrV3D16tVHvgilUglff/0186aEBRNFBrvdbtjtdsjlctjtdphMppEtmklNWiqV+KZ82HWiIthsNuONN96A3+/H/Pw85ubmeCEbFju5B4H4cI1GA61WC91ul/1zhUXz0yysxMcivveoFs1OpxPr6+tYXV1Fr9dDPB5nlfbjgEz/A4EARyKPwr1CILEIdcuI470bZrMZr7/+OmZnZzEzM3Nf0RyLxXD9+nUEg0F8/fXXiEajhyLIpNfrYXV1FR988AFSqRTW1taQz+fZSs5ms/Fztby8jG+++QZarRaBQICfPaLFPYpwclhBBXM+n2ch2oPoN41Ggzf0druNXC7H9xa5SrndbtYVDGsjYjeoaI7H40gmk8hmswdm+UauRna7nSPHH5SqWalUcPPmTUSjUdhsNpw4ceKpX8OLBCXYrq2tHbqiudfrIZFI4Pbt29jZ2WGHLqVSyVbADocDXq93T8cdaoblcjncuHEDW1tbWF9fRzwe3/PeI6MImlwIRe/PEkOz81FYRa1W4wSgR31IKXaTRCnCDZ0+GPLz9Xq9qNVqmJiYgMFgGJkFnlKqaOyxubmJfD7PYwlh0UxCMOL9UCKTyWSC1+vlFDiiMYyCmIvQbrc51IRSu8j6yWQyPVLQhjDqtVKpoFKpDIzMMpkMMpkM5HI5TCYT29tQB9tsNg89NYHoGWQNplKpeMESFgHkCdpqtZDNZgfoGRRWQYsdxZwO+3vfDRKNCu2PhCCRo9ls5iJwN6eZ7pVEIoFcLnefT/woodVqMcUkl8uhXq8jGAwyJcNms8FgMGBy8v+x957PeZ1nevj19t57RwfYq2SKpJrlIst27F3vrnczmZ3MJB/z5+RbZpLJZDJxdnc2XjcVW7Ik0hTV2EGA6Hh7773+PvB33zoAwSaJwPu+PNcMhhIJgjgH5zzP/dz3VUIIBAKwWCw8YaCGg1QqZSs2Svwa5cODkDZAk006lD8M1LwA7lOYhJ0wEiVTCh5RfqxWK3dLh23NpZ8hFS+0Lux2WyKuMlm9arVazM3NIRQKwe12P3bKJ6RJ7qaw7P43dDodnE4nvF7vjgnyKINExMLpOU14yfVLpVJxHSNMNAWeTBRJ1Lz9BjW1hL7mUqmUO83EBNhrfS0Wi0in04hEIhxdTyJ/YSAevVOUnrg7rv1ZY2iKZoq4zWQyj+Qd7oVWq4VIJMK0gt1FE72AVqsVyWQSDocDb7zxBjwez0h0AGjRSqfTSCQSiEaj+M1vfoNIJIJwOMxCClrghaEkZBV18uRJHD9+nNPyKPyDuL/DtoDvBSpcUqkUUqkU8vk8SqUSDh8+jGPHjrGQ8XHXQmOdVquFO3fuYHFxcQflY21tDaurq8xxlcvlOHz4MBYWFuByufDyyy+zzc2wQq1Wc6f8H//xH9keijobdEjY3NzE5uYmYrEY3nnnnR1jUq1Wi+PHj8Nms+Gll17CSy+9BI1GM3KetDTFunHjBhqNxgPpVE6nk0WOk5OTCAQCD3RCBoMBwuEwrly5wi4+o4jBYIBCoYBMJoNEIoEPPvgAiUQC9+7dw8rKCmw2G86dOwe73Y6FhQXMzs5Cq9VyuqZEImGHjRs3bqBer+Ps2bMje4AQgji81F0tlUqPLJqbzSbW19chlUpZGwCA+d0fffQRuwR4PB7odDp873vfw3e/+10olcpnLlh6WlAxR2mZyWSSvfyFP1/SN4RCIfzDP/wDJiYmYLfbWYj1pImIVKTvxfGlf2NmZgY//OEPMT09DY/HM1T36+uC7ObIVQK4X+QSL9zhcOywMWw0GlhfX0elUuHp+6NAlpmhUGjfa5tarcb7MhX55KzicrnYg3q3VWW/38fi4iI++ugjJBIJfPnll0in0+xeo1Kp4PP5+Lmw2WwoFov48ssvHwhPedYYmqKZXpxOp8OirseNxYWbH3XIdhfBVGjRac3hcPAIgEZvwxwDTOIjGkXk83mkUimsr69je3sb5XL5Ab43GbSr1WrY7XZYLBZMTEzgyJEj0Ov1cLvd0Gg0B3RF3wxU3FKXudvt8kL9uOh0YSeFOkqZTAbhcJi7+O12mykNwFfJiGTMLpFIHohvH0ZQJ0sul2NycvIBmzTqtsvlcuaGC0//JBK0Wq1wuVxwOByw2+0jZedIGzG975Q8JjwkkubBbrdzh3Uvo/3BYIBarcbxynt1mnf7YA/rfWq326hUKsjlclhbW0M4HOZAE6PRCJfLhWAwyBucWq3m7qjD4YDFYmF+fKFQ2PdN61mAOs00xaJOM/BwSzmacO7+OgRKetPpdCgUCjAYDDh27BiLcYeNykJJu9Rlpk7z7u4dXRMdrObm5lgo+iTYLZ7cXQTS2kOibo/Hw5OOYd2n98JeXU+qcWjaI0xVJKcR6r7Tz4NoQ1SI7nW/6FcS7pLTzX5CuLdSp5lqORJYP+w5oUCbSCSyoyFGoGk5Jf7abDZ+h57botlgMODMmTPw+/04fPgwUqnUY7sXtNnX63VEIhE0m002VO/3+xxFSd20TqeDra0tZLNZ6PV6lMtluFwuXLhwgTuHw/JS0uJdq9U48e7OnTu4c+cO8vk8IpEIKpXKA24HMpkMU1NTmJubg91uxwsvvMDeukIboHGBRCKBRqOBzWZ7ZNFMAoxsNstCg3w+j42NDWxubnL0u1KphMvlgkwmQ61WQzQa5eQmjUaDwWAwUjw04QiUCjkaazWbTWxsbODTTz9FJpPh7inRFAKBAC5evIhAIIDp6emRovH0+31+X0iUQh1A8mkmQfDp06fxgx/8gMWCj4pzFY6phZsiUVh0Oh2OHDmCs2fPwmg0Dl1SIm1OsVgMsVgM0WgUiUQCdrsdhw4dgs/nw0svvcQCQJPJxA2MUaZfHASE9oSJRALFYhHLy8u4fv06zGYzpqamYDAYeNx8kBgMBtje3sba2hqi0Si+/PJLxGIxpNNpANjx3ng8Hhw/fhyTk5Ow2WxPJbxutVp8+Lx79y5WV1f531CpVGz3eObMGZw+fRperxder/cbi7v3E+T+QBxb+qBCeXFxEVevXkU6neZDF9EuNzc38X/+z/+B0+lkn/1Go4F4PI5Go8FfS3gw1+v10Ov1PNHQarXcENyPeoaurd1uI5VKYW1tjV2tAPCh+3FNrWaziVKptCNMiCY4Ho8Hb7zxBrxeL3uIAziQ92aoiuZTp04xx/Jxp4fBYMCfl81m8dlnn6FYLOL48eM4duwYqzAbjQb+/Oc/IxqNot1uIxwOQyKRoFKpYHV1FQsLC5ifn4fVah2qgoAeoEwmgy+//BKpVAqffPIJrl69+kiBpEQiwcTEBF599VV4PB68/PLLcDqdY2e3J4RWq2XT9McVzZT09a//+q988CiXy7BarSwOpfFYJpNhb9JkMolerweVSjVSRTOAB55rsharVqvY3NzEF198gUqlwhZjJpMJwWAQ09PTuHDhAqanp0dO/EdF87/8y78gm82iUCgA+Gp0LpVKmV93+vRp/PznP9/R5XkU9uLvkpcxCZxOnz49tBOsSqWCeDzOhXMikeCkPyqaXS7XA+vFuNjr7ReoK9hut1Gv1yGXy7GyssLCdIvFwnaOB1009/t9bG9v4/Llyyx4TaVSO3QywP2mjMfjwcmTJ/l5fxq6VrvdRrVaRS6Xw9LSEu7evcv/BmlT6J386U9/CqPRyIXgqIA0FOT4QBM+ISXw008/5VoHAE856/U6UqnUjjWbpmXCAztRgqRSKdxuN+tNZDIZbDbbvk5DKYyk0Whw0UzdZnKgoqL5UdM3OjgIfbuJ1+7xePD6669jbm4O4XAYkUgErVbr+S6aafGQyWRMLXjYeIPsRVqtFsc0ulwuWCwW+Hw+OByOHQXO9PQ0c6WFaUbFYhGlUon5RQfdhaUTG6WyhcNhZLNZbG9vI5vNolgsPpFAkgJJSM0+rGPibwvCyOjdzwx5rrZaLcRiMVbjksCAuFY2m407J0JPUCoUn/S0PMygwxZxFovFIgqFAmq1GnPHZDIZzGYzgsEg/H4/9Hr9DlHKsIPWB+ECXKvV9qRSCMeZD6ODEf+dfOJpA9wNYaTyMCZoCqHX6+F0OtHtdnH48GE4HA7Mzs7C7/fD4XDwZrwbg8GAKRkkAhwX0HNAI3Lq8j3KlYieG3p2pFIp+v3+jk6ZcLrR7/dRKBTYNcHpdKJUKnERfdCUHnpn6Gf7qEkvFXD08TTP+m4uM0GpVCIQCLDfM01qDnr/EtLZqHglezSifdLaSp+TTCb594WfR84kVFTuFrERTYieJyHVEvhKtEz1klwuh8vlYu9jn88Hk8m074cM+ll2u90HqCfE1d5r76SahyYQ5FhDhwKHwwGfz8faLI1Gw777xWLxQA7yQ7MT0qYjHGfshXq9jmg0imq1iq2tLXz++edwOBx4/fXX4Xa7mXsJfHXSn5qawoULFxCLxfCHP/wB8XicRyEajQaJRII7lU8qYngWoBeqWq3ivffewx//+EdUq1XEYrEdm/ajIJFIWHFssVhGptj5uiC6RKFQgEqleuD+UHJgoVDA22+/jffee4/HZiqVCufPn8dLL70Es9mMhYUFGAwGjv9cXl7GpUuXkEql4PP5cObMGUxMTIxU10MIeoZSqRSuXr2KRCKB27dvI51O8z2Ry+U4evQofv7zn3ME7je18NtPNJtNhMNhlMtlbG9vs5iJCrzdqv3Hbfb0/OTzeYTDYVQqFT5gCP8udccmJycPRIDzpJBKpZiamoLL5UKtVsPp06fRaDS4cFMqlTAajXv+XaHtXrlcHgsusxAU1GI0GrnpQBv6XpDL5XC73VCr1TAYDNDr9ahUKlhZWdkzGrrX62F5eRmxWAxmsxnLy8uwWq347ne/i9dee43pCQdRJJJ7QSQSecBFZzdarRYfRqm4/jaCXOx2O3784x9jZmYG09PT8Pv9kMvlB07LEHaKw+EwR6yTl/fGxgZnJlADgqwIiaIjPCgUi0UUi0XmAO8GrUvC+PqJiQno9XoEAgH4fD5u4qhUKthsNlgsFnY7Iv3Nfq7ZwgMDaT663S7kcjk8Hg9TbXbvnVTzVCoV7iB3Oh0+KFy4cAFvvPEGHA4HpqenYTAYkM1mcfXqVWQymUf67j8rDE1FRaTuR0F4MqWHOJ/Pc6pdMBjkRU/4d4CvLFhsNht3oOiDTteUJngQGx69QNVqFcViEdFoFMvLy2g0GigWiw+MW2jjF45sCHK5nP2qR6XY+SagEehenWaKh6b8+u3tbchkMjgcDrZMmp+fZ46hVqtFNpuFUqlkPqdUKoVWq+WQh1E9iJCIslarIZ1OI5lM8hix3+9DqVRyalMgEOCT/UF3ep4G1Bmmoo66zsCDIuEnQafTQbFYRC6X40MrvXNC0R/x6l0u19ALlsg+sdPp8K9Go/GRll4k2qrX62xTB9zvtj7MtWjUIJPJ2HWGJnSPuiYSOGm1WphMJm5SqNVqfqd2r89UbFUqFWg0GhQKBRYHSqXSA+WNU9HzqEAX4KtxPBXMJPh62L0SFoz0/gjvi7BI9Hg8CAaDcDgcLLw+aAgt+AqFAsrlMgqFAovV1tfX+WdarVaZpkAT8b0K492g94g6y2RTaDAYYDKZ2CJ2YmICU1NT0Gg0O9xKzGbzs78RD8Huny914YGvUlZNJhP0ev0DewkZHJAvOjmnUUedimWz2cwHAZqUFgoFDuki7MfzMjK7Pz2U6XQaV65cQTabhVQqxSuvvAKXywWPxwOj0fiA/59EImHOVafTwcLCAm8UyWQSuVwO7777Lm7fvo033ngDr7322r4XCfSwJBIJ/PGPf0Q8HsfNmzf3VMuS8M3pdEKlUiGXyyGbze7r9ztMoJfSbDbzWBz4Kl0olUrhz3/+MzY3N1EoFLCwsACr1YoXXniBxU+hUIg9IDudDpaWlvDpp59ie3sbxWKRnyEKyDlo/uHXAQnAwuEwtre3cefOHe7E9vt9GI1GHDp0CFarFXNzc7BYLJwQOUoQWlfSpvZ14q6pSKTuEomihEWFVCrF7OwsZmdnEQwGcezYMfj9flZ2DzsoHrvX6z2yYVGr1bC+vo5isYiNjQ2USiUolUq2rpyammJv61E6YAkhkUjYZrBUKnH3Tiho2g2FQsHcZOqONhoNHD16FNVqFSsrK1hZWUGn03nA5ajVanHY0NraGlZWVmA2mzE7O3sglo4SiQRWqxVTU1NIJpNsZbobQiEpxRi3Wi0+cAtBB1YqIhuNBmtI1tfXOZ2U7rXH42HbP4PBALfbvV+X/wCEwr3PPvsMn332GSerkn0nUSyy2SynyFLzhtYcWnfoMCWTydBqtXY8U1KpFIcPH8bhw4eh1+vZWk2pVLJnMzV5LBbLA13lYQ5po1Ct69evY3JyEocPH4bVamU6ZTqdxmeffYZ4PI719XW0Wi3o9XrMzMzAYrFgdnYWgUAAvV4P9+7dQ61Ww927dxGLxdBqtfjQSvdiP9afkdgRB4MBi1fC4TCuXr2KeDyO119/HS+//DJMJhNHuu4FilkGgLm5Oej1esTjcUgkEuTzebz77rvQ6/VwuVx45ZVX9nXhJyurdDqN9fV1vPPOO1hfX+fEv92estTVCoVC3BnK5XLPtbJ9r5MsWd9Q0by4uIiFhQUsLCwgFArhb//2bxEIBNgKh07J7XYbS0tL+N3vfsdjNAC8iNtstpEtmmn8urm5iTt37mBra4snNwaDASdPnkQwGOSieRT58MLJAsUhf500M+LJV6tVvmdUNAtN+2dnZ/Hmm2/C7Xbj6NGjsNvtI1EwA2AHkcehWq1icXER8XgcGxsbqFQqsNlsOHToEDweD6ampkaa608gikWxWITNZoPVakWr1XpoiqZKpYLL5YLb7cbJkyfZr5ooPG+//faODtruojkej0OhUGBjYwP37t2Dx+NBIBA4sKKZin+FQoFr167t+Xn9fh+lUgnRaBQajYbFbXutE3TvCoUCbt++jWKxyMVmLBbjwpGKI4vFgkqlglQqxSFMB/UuCcVtV65cwX//7/8d9Xod5XL5AZ777mnCXs8KvWu0dwiLZplMhkOHDuFnP/sZ7HY7Tpw4saNzLOzi7/7vYUe/3+cmINnnAWA/8Gw2i88//xxra2vY2NhAq9Xiqa/X68X09DR8Ph+y2SyuXLmCRCKB5eVlxONxSKVS7kALi+ZnfV9GYpUTFs3pdBr1eh29Xo87JU/CAyO/QPL6o1AP4sSSaf9+YzAYsF8q+S5T+s9gMIBcLucROY1QySNTrVazaOd5UbYLxTf0ktDirFKpdoyF6HONRiPMZjOsVivsdjusVisn3QkXsVgshkqlglgshlKphHa7zV1Du90+NMKUpwFx6jqdDtLpNDY2NhCNRlmkQgdKt9sNv98Pv9/PnQyK/x01CH1gd4uNCPQ+kWPKbm/3UqmEXC6HaDSKVCqFTCbzQJogeXhrNBrush7k/aLwGloXv+lzSsVeMplktw1ygaBpl8/nG6lk1UeBbLNI+EnuB4/6/EKhAKlUikgkwgdN2sCFvPmHCSv7/T6q1SrS6fSO9Wu/QSLPbDa7I5iCIJPJWCBJYUBer5cTZ3dfnzBhsVwu86SGfKCz2Sza7TYkEgkMBgML+Z1OJxdCB/ku7V4PhL7SnU6H92GhYI8ooHsVteQCIZPJsL29vUNQCHwlNKf1aJQaM0J/egrUEuYZtNttlMtllEol/qB3rV6vc3NKyKMnugp199PpNKLRKOLxOGq1Gq9BExMT/NwoFIpvhVv/OIxM0by2toYPPvgApVKJY2y1Wi1cLtcT22EplUp4PB7mAclkMubpEZ9rv9Hv93Ht2jX8y7/8C/L5PBfOVARrNBoefx47dgxHjx5Fv99HuVzmQm8UC5uvCxIqUQiFSqVCoVDA3bt3UalUcOTIEQDg2E2r1YqjR49Cr9fj8OHDmJ+f54AGcmjp9/tIJpP41a9+hc3NTdy9exebm5uwWq04d+4cXC4Xzp8/j/n5eahUqqEeh+1Gp9NBKpVCtVrF5cuX8U//9E+o1WrI5XKQyWSYmJjA/Pw8JiYm8P3vf59TFWnTGodiaC9otVpMT0/D7XazJSOh3+9jaWkJV65cQTwex+XLl5FOpx9IEwTudxuNRuOefL39xGAwQCKRwObmJgwGAw4dOvSNYof7/T42NjawuLiIRCKB999/H6lUCpVKBSaTCX6/H+fOncPc3Bwnq44yBoMB8vk80uk0Njc3kUgkuEHzsCletVrFF198AaVSiaWlJXz00Ufw+/348Y9/DKfTueNzHyZs7/V6iEQiuHr1KorFIl5++eVv/dqeBI9LvFSpVOwM8+qrr+KHP/whe7nr9fo9f/4UO7+xsYF33nmHJ1t0kC+VSpBKpQiFQrhw4QKsVisOHz7M7g8H/UxR04XW/F6vx8Xh9PQ0jh8/DrlczjS22dlZTE9P7ykyFrpL/PrXv8ZvfvMb1pcQNWZ6eprdikYJ1JBUKBQwGo2w2+3M/6aDJR22l5eXueEpk8mQSCSwvr6OlZWVHbQ3+vPV1VXE43GkUim89957bINoNBp3JFJOTU1Br9fvSzz9yBTN1PGgcZDQEoxu0sPGOUJfVYovpRMicV8PQoRBJ9d8Po/NzU0WL3U6He6kksehxWJBMBjE/Pz8DoeAg1YW7yeEtlCUTCeVSjnxzWg0ot1u84GDCme73c5pkBTYQCd54p2Vy2Vsbm5iZWWFRRwA4HK5EAgEeMMYpYAP4KsxGI09t7a2uLtBxvhut5vdEw4iSeogIJfLYTabYbPZdii6aWOjA2wymWSqhxC0KZJo7KA9mSn5NJPJ8BiUYpqfxKOdNnX6tdfroVAoIB6PIx6PI5PJsI6EFP0OhwMul+uhRdOogbrMQgHpozq/RAWiv0tUoEqlArPZvCN981EgG7/HxXY/S1DuQS6X2xHMQSALMBK8UkIfdRWFThBUGJPIvlAoIJFIIBwO7/h61JkkC0SbzQaHw/FQ95b9hLB7SoVzu93m95zsbVUqFQevzM/P48iRI3sKY4nu0Wq14HK52OmJPkelUnFAyShNMglU6BLXmsShAPg9omchn88zB15oxCCEcA3K5/M87Uqn0zCZTPwxMTGB2dlZWK3WfaOHjUTRDIBHPTTKIoI+jTXohEofBAq1yGQyKJVKWFpa4pf463Advy00Gg1Eo1GUy2VsbW0hl8uh1+vxRk4hLVqtls3dA4EA/H4/MpkMbt++jUQi8QDvedyh0Wg4gINGZJlMBteuXUM+n8fCwgJKpRJ7V1qtVly8eBGlUglmsxlmsxkymQypVArJZBIrKytYXV1FMpnEnTt3kMlkmNvn8/lw4cIFeL1eBAKBHSPXYQeNv0hokUgkuNNDlBWNRoOTJ0/ihz/8IYe7PC/QarWYn5/HzMwM3G43Bx6RPeHVq1dx/fp19nEXQq1W8yEqFAqxCPmgPd6Xlpbw61//GlqtFnfv3oXZbIbf7+dENa/Xu+eUZDAYYH19nQ/uGxsbPFKPx+PodDpQq9UIBAKYmprC1NQUuxwYDIaxObhrNBq2HbXb7SgWi8jn84+0XyPQFGJ9fR3/7//9P5hMJqytrSGZTO44yBOoOyeVSuH1enHq1ClMTk5Co9E8q8t7JIRi53w+j0KhsGNfIcEbCbHIR3liYgIajQb5fJ7/nESE9HVyudwDuhutVovJyUmYTCYcOXIE09PTXIQPA+hADNzXQX3ve99Do9Hgg82pU6dw4sQJtkZTKBRwOp18gNy9RwwGA6hUKha6UWFZqVQem3w87JBKpbwG2Gw2BAIB/tkLG5y5XA4ffvghFhcXuSmYSqVYN0SoVCq4ceMG1tfX+ZkhAelgMIDH48HCwgImJibgdrthtVr3dfo7ckVzpVJh+6dr166hWCzC5/NxvCfZztFDOxgMkMlk2Gv15s2byOfziMfjjzSuf9ZoNBrY2NhAKpVib0wydzcYDPjBD36AX/7yl9zFonEFGe6XSiUkEok9Fc7jDLKiMZvN0Ol00Gg0yGazHN1JynWJRMI8uQsXLmAwGLAamrw1i8Ui3nvvPbz33nssSiBf74sXL8Lv9+PChQs8fh6FYplAXTMqmikuvNvt7khQPHnyJL73ve89N/aEBCqajx49ymmglUoF169fRyQSwaefforr16/veahWKpUIhUIcT+/xeA6ch9jv97G8vIx/+7d/g0qlwo0bN2AymfDCCy/g7NmzsNvtTEna6+9ubm7igw8+QDwexwcffMBj0H6/D6vViuPHj8PhcODixYv47ne/C61WC5vNNjRFzjeF0BpLWDS3Wi321H0Ums0mp7hSR5WKhYcJw6h76/f7cfz48QNPviOxs1QqxdbW1o4/a7VayGQykEqlWFpa4o5zq9WCwWDA2toa1tbWkE6ncfnyZWQymQe0BUJotVoWkh45cgSTk5NDpaGgolkmk2Fubo41T7VaDYPBAIcOHcLCwgJ3V5/U9508vcm1Zliu95uA7IKlUikXzSRwBcAi+0KhgEuXLvFhUSqVot1u71k037p164F/p9frsTf6qVOn4PV64fF49j1bY2SKZqHgRiKRoN/vs2eoXC7f4ZWYz+f5Yez3+1hfX+ciKZlMcr45BVxQFOh+3HyigwijbIvFIi+wQgqCWq1mBwN6yCQSCdMJyC9VSFUhAdcoC7meBCqVCm63m1OByG84Go2ygJI4aIROp4NWq4V6vY7t7W1UKhVOZxoMBnA4HJDJZNzRd7lcPOIeJdB0JRwOIxwOI51OM7+MxoCBQIBFkaNGOXka0Ga9W8BHCV00ii6XyzxCjkajKBQKO4IbSOhDxcLk5CRcLhccDgcLpA76XaPuJVE1iKu/tbWFSqXCglg6PAqTzZaWlhCNRrkjKLS3MpvNmJ+fh81mg9vt5o7gKI6RHwUSu9EEgfYZol08iXXhXsFcez0XJESl7ACKQT7Ig9du6psQRMGgZyuZTKLZbPJ6Eg6HkUgkuKG12+uZ7gHtZfR82e12FvIf9PuzFyQSCR8Qu90u9Ho9c2qpWP463/swXus3Bdk2+v1+APf94KmTTusN+XvTmrqbBkTY/Z4plUo2P/B4PPB6vSz+22+MRNEs/GFQgUwdZOKirq2tQaVS8dhe2GnOZrNcNBBnmAolu92Ot956C36/H8eOHXvmG0GtVkOpVMLGxgY++OADrK+vIxaLMf+NuFSkQiUOlfAlo5Symzdv8smXBAl0kiWh3LgWQ2azGa+//joWFhbw/vvvI51Oo1wu47333mMB4O5DEPGkWq0Wi0nJjN5qteL8+fNwOp04d+4cXnjhBWg0mqHg1z0ter0ePvvsM/z6179GPp/H0tIS89+pE/CTn/wEoVAI8/PzY1f8CLHbPYM2ctIFyGQyFAoFFItFtick4eTuTiHZq01MTOCXv/wlgsEgTCYTT7YO8j6Sf7vZbOYY38FggHK5jNXVVRiNRly/fp3pTMR9LpfLaLfbPP6Uy+XMV3799dfx2muv8diewhaMRuOBRz4/C9C0QC6X42/+5m9QKpXwzjvv8HQqHo9/aymIarUak5OTsFqtOH36NM6fPw+1Wv1EFoDPAkK/+0aj8chCMBwOs5CY9hjyHiYNhXD/FTqICEMrDh06hMnJSaZHDSMkEgmcTidMJtMO3r9Go9lzb36eQRacOp0Oa2trWF1dZScicmQhb27Cw1IRd8NsNuPll1+G2+3GhQsXcOHCBa519hsjUTQD9zuLBoMBlUqFT8IUcSqTyXjBp26Q8KUtl8tcXNIJhjY5jUYDv9+PycnJfek0dzodjppMpVKIx+M7eMm0GQl/peugD9rsCoXCDs9YEiURpeOgxUnPEtRplsvlbJFGZul0oNqtwCY6DlEXer0eH040Gg28Xi/8fj98Ph9/7VErDOhgkM1msbq6inK5jFwuxwcDKqz8fj8mJiYONEnqWUH4rjwMpN4nfUMymUQ6nWbR216+q5QK6Xa7MTExgYmJiWd9KU8FEuH0ej1UKhW0221eJ4lrqdVqkUgkkEgkmHrQbrd5iqXT6eByuWAymTA5OYnjx49Dq9XyOzbOoO6XTqfjSYzX64XZbOZxPU2wvgmtj76WyWSC1WqFzWaD3W4/8LWGRG9UMAsbLsKDJ8VFP64hI1x76fmiPVqn07EN6EHxuJ8UFDDybWFc92RqbgL3nVMocIymu7Q3PezdET5zQvEyrVsej4c1Gk6nkymr+42RKJqlUimmpqbQ7/cRjUbZS5cWf+EPg/whhdg9VpNIJPB4PPB4PJicnMSxY8cwOTn5gPXUtw0q2ulU3mg0UK/Xd3g1BgIBOBwOWK1WHiNXq1VOMEyn07h37x5KpdKOUaBarUYoFILFYkEoFGJqwbhudCqVCsFgEDabDWfOnGHBVjqdRqvVYkWuMKqVNgWtVgu/3w+1Wg2/389f5/Tp07DZbPB6vSMl+gO+8lmNxWI8fSGbNIrIDgQCOHz4MILBIILB4Fg5Hwixe8Gl0TL9GQCUSiV88sknuHv3Lh+qyZ+XPm/3szMxMcHdjoMIoHgUaI18/fXXkc/ncffuXU5DrFQqvAbSIdHj8fDflclksNvtsNlsnPBHtnVms3nPcf04gzqoCoUCJ0+ehERyPwTrxo0bKBQKiEajiEajTG95mgKa7DL9fj9effVV+P1+zMzMHPg7SFkIlJL7Tf2iae0UUpuUSiWOHj2KI0eOwOv14tChQ3xAO+jr308QDYjoHeOUsUAWnIFAAG+99RaSySTW19extrbGGhsKuBFa/EokEjgcDqa7UUS4w+Fg7+7Dhw/DYrEgEAjsaCjuN0aiaJZIJJiYmIDP50M4HEYymYTVakWv10MqldqR706G2o8CiQaPHTuGqakpHDt2DMFgcF94VcSNI4/GRqPBRb5KpYLP5+OACRIfkBXd8vIy7ty5w4WRUGBBBTc5PTidzpFP6HoU1Go1gsEgW/Z1Oh0Ui0Wsra2hWCxifX0d8Xh8B1ecOs9qtRpzc3Ow2Ww4e/YsTp8+zfGlNKUYpUWcDosUd0whJqlUCv1+nxfpYDCIs2fPwuv1IhgMwuFwjNR1fh3s9bMkp4wrV67sKI7pPtLv0d8TFs3nz5/nwmeYIJFIMDk5iddff527yMlkErFYDJlMBgCQzWYhl8sxPz+PyclJHser1WosLCxgfn4eBoNhXz1PhxHCoIoTJ05genoa6XQaZrMZyWQSn3/+ObLZLPM0n7TokUjuB3l4PB5MT0/j5Zdf5tjsYbjPtVoNqVSK+fzfFCRcJ/9enU6H06dP46233uLUt3E8tD8KNOEW2lQ+iS3hqIC68iqVCj/60Y9Qr9fxxRdfcCT9rVu3WFi7O0rc4XBgbm4OJpMJMzMzMBqNOHz4MA4dOrQjNOggC2ZgRIpmANzp0Ol08Pl8XFDK5fIdHpmPWsTkcjk/rNPT02wrRt6I+/Hytlot7myRCIcKO/L9VKlUCIfDbPidSqVQr9exsbGBcDjMaUrAVw8pncB8Ph/MZvNQLMLPGlTMmEwmeL1e5pZWKhXo9XpYrdYdixHdK4PBgNnZWZjNZrZOos7SKN63TqfD7wBNYCqVCiQSCQtdyXLM6/XCbrdDqVSO5WZFmxJZGtH/C5MiCQ+zeqJikayU6Pmw2WysGxi254SoFXQQIuGe0+mE3+/f0TWfnJxEKBTid4E6zxaLhUV+43zgflIQjYK43F6vFyqVCpVKhfmZuVyO/Xd3W9MJKXcUgBEKhfiD0t+G4V5LJPe9h6emppBOp5HNZgGAhVtPCqI8ElVIq9VCo9HA5/NBr9fzNFSv1481ffBRoOwFsv+kZMRxAj0HVAwT/ZUoYVtbW5yKSM+XXq9n+07azym9lw5fwzD9Pfi39QlBN8vhcOAHP/gBms0mRzPm83lcv36dPTV3K3cJxFvV6XQ4fPgwjhw5wurl/dgEKTJ7dXWV3RuEnfFyuYzPPvsMGo0Gm5ub+Pzzz9FqtZBIJFCv1zlggAokAKy8np6exg9/+ENMTU3BbrcP3ab+rEBjaZfLxamO9OvuTYwKIRq/kniS1NujSGUhzn4ul8PGxgb+9Kc/YXNzE6lUCnK5HA6HA6+99hrcbjfOnTuHF198kRXv4wg6KJDTDnmjCvUMTwKdTgeDwQCr1YpTp07B4XDg5MmTsNls7GgzTJBIJPB6vbBYLOh0Ojhz5gwfpnYXPSqViqcudLCgzirZoIm4DxJjq9VqGI1GdDodvPzyyygWi8jlcvjiiy+Qy+UQi8UQi8UAfNXg6Xa7HLlMnbNjx47hyJEjXEAOi1hbKpXi9OnTcLvd2N7eBgCe6qZSqSf+OhqNBrOzszAYDOxCRBM9m80Gk8nEXvnj4u/9NJBIJHC73Th58iQ3xr4tcekwgdxh+v0+zpw5g4WFBTQaDbbJ/d3vfoe3334bjUaDO88TExN45ZVXYDabeQIjjCYfhoIZGKGiGfhqQ3S73XxCabfbHFxiMBiYL7MXdDodQqEQjyBDodC+L1idTgf1ep25psLinpLI6FRFFmnxeByNRoMPCQS6HyaTibm4lFL0PEGn0x2Y6vygQWMuEoYmEgnEYjG0220+FLjdbgSDQRZQDMMm/awgFMTSr09bMNN7ZTQaeYLjcrmYZzesFn3kTADggRhnEV8PwlQ4EqzZ7XYODsrlcuy522w22clIIpFwwJDJZILP54PVasXk5CRmZ2ehVCqh0+mG5vAlkUh2hEQ4HA7eb6hg2esd2j2hJSs5q9XKNDCXy4VDhw7Bbrfv2/UMK4QuN4VCYSimDM8CdCAH7tvFWSwWFiTXajW43W6o1Wq29BwMBjAYDHA6nbBYLHA4HEPb2Bm5n5jwxEGjV5vNhpMnT7Kd3MNEDAqFAmazGUql8sD4nJQxPxgM+MWhxbXX63FnKJ1Oo9lsst0RuW4QiNsTCoXwne98B4FAAGazeSz9U0U8iG63i2q1ilarhU8//RR/+ctfkE6nOY2LorF9Ph8OHz4Mv98Pu90+FCf1ZwmNRoOZmRm4XC4Wy2YyGVy/fv0BE/2HQSqV4oUXXsD3vvc9GI1GhEIhprcMa8EsYv9AXVKLxYKTJ0+iWq3i0KFD/HwJi8xut8sJkhqNBm63mydbw/YcEaXC7Xbj1VdfxcLCAq5evcp7D+1VBLPZjGPHjsFisUClUrHH9fz8PIxGIwu7KAFPxPMNmUzGtBzy6K7X69zkCwQCCAQCHEs+rBi5ohkALzbCEBCyi3scoV4oDNrvAkLIG2u32zCbzbyYEKWEKAWtVgvpdBrAg9dEhwWVSoVAIIAXXngBdrudDwQixh/dbhelUgmVSgWff/45/vmf/xn1ep1De+x2O06ePAmv14sjR47A7Xbv8C8fV2g0GkxPT/MBVKFQYHNzE+vr609VNJ85cwb/+T//Z+Z+Cz9EPN8gqyulUsnR848Tc43CM0Q2pS6XC6+88gofyolKWK1WdxTNRqMRFy9eRCgUgl6vh06ng16vRzAY5Okf0YCG9ZpF7B9kMhkMBsOOaYROp2Mtkt/vh9/vH3pt0UgWzXthmG8yQSKR8FiOimeJRIJIJIJOp7PDBWSvBVilUkGtVnN4B/mJEldsXEc9Ir4CGezX63UOGaCpRL/fZ16qzWaDx+OB0+kc2wS3h4E6fUajER6PB61WC16vl+0bKWadRstms3mH7ZVSqYTT6eSkPxEiHoZR2HeeFhRCAgA+nw9Hjx5FrVaDw+HYEU7h8XiYfqHT6TgjgcSyw178HBRIVNxsNjEzMwOr1cpuV8/DGi2VSmG32zE3N8cUWxIMDgtv+VGQDMbF62REQI4ZxWIRi4uLyOVy+MMf/oB33nkHzWZzh2+zEHQSI17quXPn4HA42JKFVN7Pw0v3PIPoOxsbG/gf/+N/YGNjA2tra1hbW2PfaYPBgB/96Ed48803YTAY4PP5WHD0PG1i9Xod9XodsVgMv/3tbxGJRHDjxg3cuHEDUqkUer0eKpUKFy9exPnz53dMsM6ePYszZ848V/dLhAjgq5S2fr+PYrGIYrHI+QJCC09KGCVhrNBxZq+AFBH3kc/nkc/nUalUsLq6inq9zgJRYbjMOCOfz3M4G9l7Wq1WzqcYZohtlH0GWWGZTCZMTEzAZrPh+vXrPMYSWrAIQWk7drsdLpcLU1NTzFmlxCoR4w3azBqNBkqlEiKRCDY2NpDL5VhQYTAYmC/mdDrZ8ul57JiS5VWn04Hf7wdw3xGAuu7UHfN4PJibm+MDJ3XqxXdKxPMIstoDAJfLBZfLdcDf0XiB9noSr7daLe40j0Kn9dsAFcijCLHTfEDodruc1HXnzh3cuXMH3W6XFdi7QWNks9m8I7WLLHxEjC96vR6H4Fy7dg03btxAPB7Hxx9/jEwmA71eD71eD6fTiZdffhlOp5PDKmgC8Tx3fKrVKkeKh8NhRCIRdshQKBSYnZ3dkcpG2gPSSYgQIULEtwWaNpPIv9frwWAwsObkeSiaRxli0XzAII7qw4IWdmOviGAR4412u41CoYBarYZf/epX+L//9/+iXq+jVCqh2+1yNG0oFMJf//Vfs5hiFH2nnxXo/dpt8whgT9qK+F6JECHiWUMYOiRiNPD8zWyHDCRIErnIIh4GSoUslUqoVquQy+XQ6/UwGAyQy+WYnp5mug7Z9TzPneW9QPdDvC8iRIgYFojF8uhBLJpFiBhS0BQin8/j448/RiwWQzqdRiAQgNFoxJEjR2CxWDAzM4Pp6Wm28nkehCQiRIgQIULEfkMsmkWIGHJ0Oh0UCgWk02n0+30YjUbYbDZMTEzA4XBgcnISwWBQLJRFiBAhQoSIZwiR0yxCxJCCXs1CoYDbt2+jWCwyJ1er1cLv90On08FsNouiNREiRIgQIeIZQyyaRYgYAfR6vQd+TxSDihAhQoQIEfsHsWgWIUKECBEiRIgQIeIxEKXkIkSIECFChAgRIkQ8BmLRLEKECBEiRIgQIULEYyAWzSJEiBAhQoQIESJEPAZi0SxChAgRIkSIECFCxGMgFs0iRIgQIUKECBEiRDwGYtEsQoQIESJEiBAhQsRjIBbNIkSIECFChAgRIkQ8BmLRLEKECBEiRIgQIULEYyAWzSJEiBAhQoQIESJEPAbyg/4GRBwcqtUqqtUq2u02isUiOp0OjEYjDAYDFAoFTCYT5HLxEREhQoQIESJEiBAroucU/X4f6+vrWFxcRDKZxOXLl5HP53H69GmcOnUKDocDL774IqxW60F/qyJEiBAhQoQIEQeOkSuaB4MB+v0+BoMBfwCATCaDRCLhj+cVdD/2wu77UqvVkEqlEIlEcPv2baTTaej1erhcLkgkEnQ6nWf97YoQIULEyKDf76Pf7wPYudYK19bd+9DzvB89D6DnYK9nQ/gsSKXS5/5ZoPsirN2onntSyGQyyGSyZ/L9PQlGrmguFAr47LPPkM1mkc/nkc/nYTKZcOzYMZjNZni9Xng8nufu4ex2u6hUKuh2uzseSAI9aHK5HFqtdsf9GQwG6Ha7aLfbSCQSuHPnDprNJi5evLjflyFChAgRQ4l+v4/V1VWsrq7uoLQplUooFArI5XLo9XoolUrY7XbY7XYoFAoYDAbI5XL+EDE+6HQ6KJVKaLVauHfvHlZWVtBqtXgvpufAarXixIkTMJvNkMvlB1r0HRTa7TZyuRzfn2q1ikqlgpWVFVQqFfR6PXS73Yf+/cFgAJlMhnPnzuHFF1+EUqmEWq2GVLq/0ryRe4Pz+Tzef/99rK6uYm1tDWtrawgEAvjlL3+JiYkJSKVSuN3u57JoLhaLaDQaOzrxwP3TrlKphFKphEqlgkqlemDx7vV6aLfbSKVSGAwGkEgkaDQaB3EpIkSIEDFUGAwG6PV6WF1dxXvvvYdyuYxwOIxGowGtVgudTge1Wg232w2tVov5+XnMz89zg0KtVkOtVotF85ih0+kgl8uhUqng0qVL+MMf/oByuYxEIoFWq4X5+XnMzc1hamoKHo8HGo0GAJ7bojmZTKJcLiOZTCKVSiEej+Odd97h+9VqtR7adR4MBlAoFPgv/+W/YH5+HjqdDgqFQiyaHwWiZnQ6HbTbbf6o1WpIp9NQqVQolUro9XoAsO83cz/R6/UwGAxQKpVQKpVQq9Wwvb2Ner3OY6J+v8/3QKVSQalUwmQyQaFQQK/X73mqk0ql3DV53g4e445er4der4dWq4VMJoNWq8XvEB2UCIPBgJ8FmUwGu90Om80GqVQ6NAt+q9VCNptFq9V6YJLyTYsT+noSiWRorlfEwUIikUCr1cJut0MmkyGZTKLZbKLRaKDVakGj0UCj0aDb7SIWi3GxnE6noVar4fP54PP5+Dl9ntfXTqeDYrGIdrv9yN97FCQSCa9Lcrl8X7uOnU6HG1UbGxvIZrOIRqMolUqo1+u8tpbLZWQyGRgMBpRKJVSrVUgkEqhUqn35Pg8K3W4X1WoVnU4HlUoFlUoFtVoNW1tbqFaryGazyGQyyGQyKJVKaDQa6HQ6aLVae349Ia0jkUhgcXERGo2GTQu0Wi00Gg0UCgUX08+qoz8yRTMVgUQjaLVa6PV6kEgkqNVq+Pzzz7G2tga3243Tp09zkTiOhXOv10Oj0UC73cann36Kzz77DPl8Hnfu3EGxWOTiCPiKU0Wdjunpafyn//SfMDExgUaj8cCpTqPRwGazic4ZY4hGo4FqtYpYLIbf/va3iMVifOIXFs30TKhUKthsNuh0Orz11lt48803oVKpoNVqh6KQzGaz+O1vf4tEIgG9Xg+dTgej0Yj5+XkYDIZv9LXp61ERPgzXK+LgQIenqakpKBQKxONxlMtlSKVSJBIJxGIx6HQ6dLtd6HQ6LC8vo9lsQiqVQi6XQ6FQ4Gc/+xl++tOfQqPRwGKxQKFQHPRlHRiKxSIuX76MTCbDv5dOp/GXv/wF6XT6ib6GQqHgdcloNCIYDEKr1T6rb3kHyuUy8vk8NjY28L/+1//CxsYGUqkUMpkMN7TkcjkymQxPgFdXVwEAwWAQer1+rA9N1WoVt27dQi6Xw40bN3Djxg00m02USiW02200Gg3U63W0222USiWmlT4MEomEpz2XL19GJBLZQXmamZnB7OwsLBYLjhw5ArPZDKPRCJPJ9K1f28hURdRlpg8h/aDdbiOfz/Opptvtjm3BRw9Oq9VCs9lEOp3G+vo6stkslpaWuGgWdpElEgl3QSQSCcrlMlqtFjqdDnq9HosXpFIplEolNBrNgXCFnjWE4lHh80MF4zh3fwaDAdrtNur1OgqFAjY2NrCxsYFIJIJIJLKDykP/TeNmg8GAEydOMF1HrVYPRRHZarUQi8WwubkJo9EIo9EIi8UCu93Oh8avA7oHEomEOxZyuRxSqfS5EvPstdY+Cg8TYo/qPdt93YPBgJsKjUaDO1u07wwGAzSbTcjlchQKBWSzWV6LZTIZzpw5g0qlAgAwGo3PVdFMzxH9WqvVkEgkkEgk+HNisRhu3LiBZDL5RF9TLpdjfn4euVyOdTn7AVpLa7UaCoUCNjc3sbKygkajwT9/lUoFqVTKU/FSqYRisYhisQiHw/HAZG+cQPcnl8shmUxidXUVt27dQqvVYvooNT4JjxPN0v0aDAbIZrOo1+s7JoGDwQBKpRKNRgN+vx9KpfKZHaBGprLs9/u8ALXbbTSbTd4Ye70eyuUyP8jdbpdPe+OEUqmEcrmMYrGIO3fuIJfL4dq1a7hz5w7q9Trq9fqOLrMQ3W6XX2p6YOPxOH+dfr8PnU6HI0eO4Ac/+AGcTuczOaXtN+iA0e12kclk+IVLJBJoNBp8TxwOBy5evAiHw8G873EAjcna7TaWl5dx7949xGIxrK6uIpFIoFwu8+cKFy46nJVKJTSbTdy4cQMGgwEejwcvv/wy7Hb7QV0So9vtolQqIZvNIh6Po9frQa1W4+7du1Cr1V/760okEi7CadynUqmwsLCA+fl5KJVK6PX6sTyY08+91+thcXERd+/eRaPRYDoP8ODGRkI4nU6HQCCwY7PS6XQIBoPM+R3292owGHAzgYqcXq/Hv5fNZpHNZpFIJHD37l0kEgkUi0UA96cTJ06cgMfj4b0ql8vhypUrKBQKuHv3Lv75n/8ZgUAAP/7xj+HxeA72YvcJJPYqlUrY3t7G9vY2yuUyC8AI5XIZ1Wr1ib9ur9fDzZs30e/3MTMzA5fLBaPR+Cwu4QGUSiVEIhEkEglUKpUdDQW3241XX30VDocD4XAY4XAYarUan332Ge7evYvvf//7sNvtUKlU0Gg0Q9GAEIIoe6SFEjqTPQ6FQgHFYhGRSASXLl3C9vY2Njc3mTbb6XR4jfkm3x+AHd/T2toayuUyPB4PTCYTKpUKpFIprFbrt344GZlVn6gZVDTTIgZ8tXk2m03UajV0Oh0oFIqxKpoHgwHK5TKi0ShisRjee+89xGIxbG1tYXt7+6FWSIROp4NOp7OjaCanDOJBa7VaHD58GD/60Y+g0Wig1+v3+zK/dfR6PeaYbW1t4d69e8jlcrh+/Try+TxvjAsLC/B6vVCpVDAajUO/uT8piHdXrVZx584dXLp0CdlsFmtraygWi/zM7F5YJBIJv1cymQw3btxAqVTCwsICjh07NlRFcyaTQTqdRiqVArBTyyDsoD/p7wmLZnJEUKvV+OlPfwqLxQKDwTC2oi7q2LVaLdy8eRO//vWvkc/ncffuXS5odturkRDObrfj/PnzsNls/OcOhwNKpRIOhwMAhv696vf7PIVLJpMIh8PodDq8rxAXM5VKYXl5GZlMhicQBoMBx48fx+zsLEwmE4xGI1ZWVrC6uopSqYSlpSVsbm7i6NGjOH/+/HNTNFerVVy/fh3RaBSXLl3ClStX+GC2e696mj17MBjg1q1bWFxcxNmzZ/HTn/4UExMT3/J3v/e/S3txIpFAtVpFs9lkCqTP58MvfvELzM3N4dNPP8XVq1eRy+XwxRdfoFqtwuVy4cyZM9DpdFyUDhPa7Taq1SpkMhmvpVQ4PwqDwQDFYhHb29tYXV3F5cuXsba2hmaz+QBX+ZvUZsQXF6JarWJ9fR1+vx/BYBCNRgM2m+2ZdPRHZtV/1IUrlUqYzWZoNBre6J7khzwKIP5yp9NBJBLBvXv3kEqlkEqlUCgUeNwhk8nYzkb4d1utFvr9PtveBINBFlAVi0XU63U0m022c6HR0ijxwYli0u12Ua/XuatOXeRcLodms4mtrS1sbm6iXC4jm82iXC6jXC6zkAfAE5+ohx3EGatUKrxph8Nh5HI5VKtVyOVyaDSaBwQUcrmcOw3NZhOpVAqdToe7DsNEYdFoNJicnMRgMIDRaIRSqWShMBU/wq4E4UkKaTo09Pt9VKtVnsysr6/DZrPBbDZ/o272sIAoCPQzr9friMViqFar2NzcRC6XY0utdru9Q1xD96zT6aDRaKBSqSAej6Ner/PXbzabiEQiaDabCAQCMBqNQ/P8EAaDAYuVms0mMpkMGo0GYrEY4vE4ryd0AC0Wi8jn8zzBonei0WggGo1CJpMhEAhArVaj1+uxqJSmPrVajdeccbYfo+ZMLpdDPB5HOBzm+/Z1iiZyf5LJZA9QxCwWy74eYvei+en1elitVtjtdhiNRuj1eqY60s+/2WyiUqkgl8uh2+3yujUsGAwGaDQaKBQKPEECwD7TjwPVD0RjIu43ZT7Quy88MNH7IxSe0ySv2Wwyq6DRaHCjdHcxTAJ1lUoFvV7/TBtfI1M0A18VNLu5hSaTCefPn4fb7cbhw4eh1+sPxIrkWaDRaGB9fR3FYhHvvvsu3n33XdTrdV58qCg2m804ffo0LBYLP4y1Wg2RSATtdhtvvvkmfvjDH6LVavGI7N69e8wpo0KZuECjVDQ3m03U63WUy2UuEDc2NrC5uYlKpYKtrS0+HDSbTd7khSOiTqcDmUw2lCf/p8VgMEA0GsXGxgZisRhb+hQKBeTzechkMhiNRtjtdszNzWF+fh4mkwnz8/PQ6/U8gg6Hw/inf/onxGIxGAwGuFwu2Gy2oeFiejwe/Mf/+B+5i764uMic7WaziWQyiXQ6zd30pwFthq1WC8lkEr1eDx999BHC4TDm5ubg9XpHnr5EXeVer8eC0HA4jH/913/F9vY2crkc0uk021GSoJhss4RuRjSirlQqO4oXq9WKTCYDp9OJN954A16vd6jeL+p4Li0t4caNG8hkMvjiiy+Qz+dRqVRQLpd3cHFpwknXDIAnoIlEAv/yL/8CvV6PN954A6+//jqy2SykUinUajW7JxBNLJvNwmg0fmPR6jBiMBggl8shkUhgZWUFf/rTn7C6uopqtfq1u4xWqxUejwd6vf4B0d/ExMSBvo9SqRSBQADHjx/H1NQUfD4frFYrC9JI7NZoNLC9vY0vvvgCHo8HNptt38SLT4LBYMBTFL1eD6lUCqPRCI1G89hDiUQigU6ng9PpxGAwwIULFzA9PY0vv/wS169fBwDWhtAhXXgA0uv10Ov1MJvNOHr0KAwGA7a3txGNRlGpVBCJRFCr1fb8t7VaLYxGIzweD+bn5zEzMwOn0/lMDugjVTQTdgs0FAoF7HY73G73jk7zOIC6G9lsFpFIBGtra2i323xSI/GeVquFw+FgkUG/30elUmHlrs/nw+HDh5HNZnmsWCwW0Ww22QKHTmvCscwwYncCU7PZRLVaRalUQiqVQj6fx+bmJpaXl1Eul7G1tbWDO0d/F7h/WKAicFyEXiS0SafTiMfjWFtbQywW4wKJOsx6vR4ejwcTExOwWq04fPgwTCYT4vE4jEYjut0uL2gqlQo6nQ4ajWZong21Wo2JiQkWlhCvX6fToVar8e9/Hf6ckAJGh1MaxRsMhodaI40SqOClYCQqcu7evYuNjQ2mwtF7oVKpoFarodPp+O9Tl5a61UI3BADcoad/Y5hAh4ZOp4N8Po/t7W0kk0ksLS0hnU4zTQPYOYES7j1SqZT3o3q9jkgkApVKhaNHjzItDPjKl5fuNxUN34TbOeygA2w2m0Uymdwh8HvYRI/W373EpEajETabDQaDAT6fbwd90OVyHXjHVqfTwWazwWKxQKPR7Ai9kcvlfECr1WrI5/PQarX7Jl58GnQ6HbbGozXwSQ86CoWCqZ1utxtSqRTr6+tQKpXssyycVNG6Qi5FVPw6HA6YzWZUq1UUCgV0u92H7jv0Ncg9yWw28yTwuS6aKUWmUCgglUoxAZ9I5VQ0CRf5US9+gPthLn/84x+xtraG5eVl7vhYLBZenI8dOwaTyYTZ2Vno9XoeIZZKJS6ec7kc/vSnP6FQKODatWvMyyMus9frhcVieSbE+W8TtVoNtVoN5XKZyf/xeJzHwvF4nEdglUoFEokEc3NzOza3arWKcDiMer0Oi8UCh8MBv98Po9EIrVY7NJ3Ur4t+v4/19XW8//77nFpGgqxAIACDwYDZ2VnehOhnTu/V+vo6NjY2kM/nWbBy6tQpXLhwAXa7fei47hKJhFNASQzc6XSYfvO0nS2h/znpB1KpFHv07qZBjRqIakGC4kKhgLW1Nayvr3N3mTZzorwdPXoUZrMZfr8ffr8fwFc6ifX1daytraFSqWBzc3OHmIsO9XsFKh00isUivvzyS2SzWXz++ee4du0a091MJhM3ITQaDXw+H9RqNVN2Go0G81mj0egOBxo6jBAFgwoPt9uNqakpzM7Owu12w2KxjAXFZy/0ej3cunULv/3tb5FOp5HL5QAAZrMZJpMJarUaVqt1xwhdpVLBarVCrVbz5wnpUiaTCSaTia0whUWywWAYy479fkMikXA4nFKphM1mg1qtfuIDiVKp5J/DwsIC3G43+v0+9Ho9ZDIZp2OSmwgJJ1UqFXK5HLLZLADg+vXrGAwGyOfznCK4m8dMFEOVSoWzZ8/i7NmzcLvdCIVC/Bw9CwzXKvYQ0Ji0XC6jUCggmUwiHo/zIkWnN3IJGPZO6dMgn8/jT3/6E7788kvu7Gi1WlgsFhiNRrzxxhv427/9Wzb6lslkCIfDiEQiKBQKvDnmcjlsb2+jUqng3r17KJfLzP9VKpXw+/1wOp0wm81DWzQLO6iJRALvv/8+YrEY7t27h7W1tR2nYoPBwKdO8u2lojmdTrOLhtlsxsTEBPMtafQ8yhgMBtjc3MSf//xndkXR6/U4evQoLl68CLvdzpGuFM5QKBRw+/Zt9vteXFyEVCqFzWaDz+fDyZMn8dJLL0GtVg9l0ex2u+FyuQDsNML/Ouj3+0xXWFxcxGeffYZ0Os2dpFEvmtvtNvOPP/74Y2xvb2NpaQnLy8s7bD1pQ3K5XHjllVcQCoVw5MgRHDlyhO3V2u02Ll++jMuXLyORSCCVSj1QNFOHetjuGXkFb2xs4M6dO7h79y6LFo1GIw4fPoyTJ0/CZrPh1KlTsFgsvHlT8yGXy+Hq1avIZDJM06AJB71bxLGnonliYgIulwtms/mgb8EzQ7/fx61bt/CrX/2KKYTAfSplMBiE0WjkJg9BeJgPhUIIBAIP7OMPsyZ7Us6tiEdDuJZ+HX0POU/RBLfZbEKn0/EkgITBRJ3T6XSYnZ2FRqPBl19+yQ09okjRnk21jxA09dNqtTh9+jR+8YtfMI3wWe7jw7WKPQIP89jd/TnjCKHvMvkS0ghEq9WylRPxuLVaLUwmE3OdgfsWORT3ScEocrkcJpMJNpsNExMT8Hq9Q9Vppg2KhIvNZhPZbBa5XA6ZTAaxWAyZTAb9fh9GoxFSqZS5VxaLhQ8W09PTPFJvt9vo9/ssPlAqlUw7GHVKT6fT4XTIfD7P4QoajQY6nY676jQ+VCgUO9KrSOVcrVZRLBbZWk0Yv65UKofm+RDi2xRw9vt9FAoF3Lt3j1M2AXB3jChgowYqhjOZDMLhMOLxOBKJBB8gATDfnd4hq9XKSXYulwsmkwlKpZJpBf1+H/V6nfm69Pv0vFgsFni9Xvh8vqERARJFgpLJiLdtMpmg1+sxPz8Ps9mMmZkZ+Hw+dsKgKRTZZvl8Puh0On7XyJMXuF8A5nI5lMtlHi0bjUb4fD44nc4DpxJ8EwjDxZrNJvr9/gOdXolEApvNhpmZGfT7fd6f3G433G43T7522xM6HA7odDp2lhiG5+XbBrnT0F40bPg21lKaMAH3pwvkFEP5D0Sh7XQ6iEajkEqliMViLDym90kIEv8J6x6bzcYCTBJePuu1efRW/ucQu0/XKpUKHo8HDoeDR1wKhYIfduJ9ET2Dkotu3rzJoSjAfSGVz+fD9PQ0fvGLX2BychJms3koTuwkJEkmk4hGo/j973+PeDzO4hwyT+92uwgGg3jhhRdgNps5DcjlcvHmREVALpdDPp/H0tISPvroI6RSKfYedjgcI0/LKJVKuHLlCvMyy+UyTCYTPB4PnE4nd84owIaoKqlUCqVSCZVKBdVqFclkEhsbG/x3SaBBiuZRP1w8Dr1eD5cuXcJ/+2//DeVyGalUijswx48fh9vtHirxzpOARGztdhtXr17F7373OxSLRSwtLXGxq1arYTKZMDc3x+/S4cOHYTabMTc3B4PBwAFJpLWoVCrY2NjA9evXUa1WUa/XIZVK4XK54PP5MDk5iTfffBOhUAgOh2MoiiCaWG5ubuLmzZtYWVmB2+3GyZMnEQwG8Td/8zfsN02R7PQrdbysViucTic6nQ5eeOEFjn+mtenu3bu4fv06arUams0mFAoFZmdn8b3vfe+ZJZXtB4QCv1qthu3tbbRaLZw6dQonT57cYVF27tw5tmEjr24Sm+/lgEGCSRJkD8Oz8m2DDpnZbBYGg2EoOc3fBmQyGXQ6HbszBYNBzkegA/pgMEAymcTvf/975PN59njudDo7HHjocwl+vx8LCwvQarVwuVzQ6/U4cuQIXC4Xc8ifJUamaCbu8jCezJ4lhFYsNKagDiktMLuTuxQKBRQKBbrdLrRaLTtF0AMJgBctm80Gp9OJQCCAUCh0wFe7E0TJyWazWF1dxebmJur1Oou8er0en2hdLhccDgfm5uZgs9m4o0ELMAB2BDGbzUzhodx6EkKOMtrtNov/isUiR5MSdcdkMvG1A1+9UzRmF1rNVatV3tyEYpZxL5jJujCVSmFpaQmdToevXafTwWq1wmQyjdx9IJ5tq9XiFFF6t5rNJheIWq0WTqeTp08LCws8XhVyBInXW6vVUCqV2P6SOs1qtZrTGelw/qyEOU8DEv/ROlIsFlEoFLiL7nA4MDs7i6mpqcd+LTo4EW2j1Wohn8+j0WhgY2MD2WyWO8801fN4PDzlGSUI918SZxHnv9FoYGpqakdhI5FI4HA42JFnNxVjHCGcgj8svRgAx0gLaSvjBkrYBcCHTplMhkQiwVoI8j/f2tpCMpnc08+ZvhatG/Qeud1uaDQaeL1e6HQ6Fv7txx4+EkUzWWjdvHkTGxsbT5UaNOrQ6XQ4duwY5HI5B5s0Go0ddnHpdBo2m415qoR4PI4PPvgA0WgUKysr7OdM/ML5+XlcvHgRXq93KEUUQms4s9kMt9vNVBUSEGi1WuZZ6nQ6+P1+doZ4EttBikoeB1/vVquFcDiMtbU15PP5xy7IJK4JBoOIx+MoFAqIRCI8oVAoFCwWHLXO6tdBtVrF6uoq8vk8otEogPtxxzMzM7BarTh16hQWFhY47GQUQIVOPp/H9evXkc1mOaq41WpxR+j48eM4evQorFYrjhw5ApPJBK/Xy9Ma2gCpACARXSKRYEEuaQqkUimCwSBeeuklpnwNE6eZNnShWJwmLhaLBfV6nbUxT3I4ItehZrOJe/fuIZPJYHl5GZFIBFqtFvPz87BYLJicnITBYBgpO09CLpfDJ598gkwmg+3tbYTDYfbA7/V67JdOoLUlFApBoVCMNB1lLxDFQOhbT1M6mUyGe/fucQrk0tISH07p3dnc3IRKpWIP+HFrSJCbjjBFM51O4/Lly+zcRQnHRG/avV8RFYM0OX6/HwaDAadPn8bJkyfZk1mlUsHn8+3b/j0cq9hjMBgMEIvF8PnnnyOZTD7Quh9n6HQ6HD16FHq9Hv1+H/F4HLVaDWtra5BKpbxAh0IhjrEF7t+zjY0NfPDBB9xV6vV6PJrXaDSYnZ3FxYsXmcs3TKCOEKnZzWYzF3IKhQJmsxmnTp2CzWbD3NwcZmdnuXu8FyfrYXx32hiHKbTj66LZbHIaE6nVH3dNxNdsNpsoFAqIxWJsDUaneqvVymP5cUa1WsXNmzcRjUYRDocB3H//Tpw4Ab/fz0XzKB2wSJRGcc6bm5u4c+cOkskkp/mp1WocP34cP/vZz2CxWDAzMwODwcDv0e4QGIpXv3btGtbW1rC6uopKpcJdZoVCAb/fj+985zusLRimJEChtSZFxpPA2G63M8+fgjQeB9KZNJtNLC8vswd+OBxGIBDA7OwsJicnuWgetYIZuC9If/vtt/m6tre3uaOqVCrx+uuvP7DGkgMG8Ph1aNRAe4bwGSqXy2yrR2vwvXv3sLy8zKmBVDSTQLtSqTxgSzgOEIZLhcNhrK6uIhwO43e/+x2nbFLIzcOaO1KplKdcDocDL730EhwOB86cOYNTp049sN+LRfMu0Dh+LxWlMPRk3F5OlUoFt9uNwWCA7e1tmM1mHu/QiLRYLEKr1WJ9fZ3NvweDAcLhMEqlEhqNBgaDAQu7yAje4/GwwGXYXlgKUrBYLJBIJJiamoLdbodcLucOKOXME9f2cT//crnM4kHikun1erhcLlit1pEbme6GUqmE1+tFvV5nSyxKUiJu7tbWFlQqFf/Ma7Ua6vU6tra2kMlkUCqV0Ol0+HBFCVfj3Gkul8vsJhEOh3mao9FoeBTo9XpZbDpKa0yn00Gz2UStVuNuD9GbtFot/H4/X6PVaoXBYHigWBR2jfL5/A5PY6Ij7KVsFxamwwLqMpMLDPn7U6JfoVBga0+bzcZhPrTG7HUYJ5F1LBZDOp1mK63JyUl4vV54vV7mXg7TvXgSkOiPLMLy+Tyq1So6nQ4UCgVsNhsL9/bCqF3vk4LsJ8vlMh+0yEpNLpdzmiY1L6gBQYLzVqvFe3c+n4fZbB6qg+U3BfmzV6tVbG1tYWNjA/F4nCdSJMYlSCQS9rZWqVRsLWi32+F0OmGxWBAIBGCz2WAymQ409XkkimYhT2gvM3ji+ArHiOMCs9mMV155BfV6nU+pxWIRGxsbHF5Sr9eRSqWQTqeh1Wp3JAJub2+j0WhApVKxlc/f/d3fIRQKYXZ2FsFgEHK5fOjGZxKJhEe7nU4Hp0+fRrfb5QOSUJzzJB2hfr+P5eVlvP3220gkEigWi5BKpQiFQrhw4QIMBsPQddufFna7HT/+8Y+Rz+fxq1/9CisrK2g2mwiHwygUCgCAWCzGNnw6nQ7Ly8tYWVlBKpXC559/jmw2C7lczornEydOYGFhAVardSQ7ZI9Dv9/HvXv3cO3atR3piXQAmZ2dxUsvvYSZmRk4HI6RugfUQc3lcohGo7h16xbu3bvHB26r1Yof/ehHmJiYwLFjxzA7OwuFQvHA5k2hJfV6ne3l8vk8bt68iWKxOHLcTFLZN5tNXLhwAV6vF4uLi1heXkalUsF//a//FQaDAS+88ALOnDkDm82G48ePs0ha+Az0+30sLi7iL3/5CzKZDK5du4ZSqYSjR4/iBz/4AVwuF86fPw+HwwGtVjtSRaRQ9Le6usrWnsTTNpvNuHjxItxuN2ZnZ0fq3fgmkEql8Pv9MJvNcDqdWF9fh8vlQjgcxvr6OjY3N3Hv3j3WQZBWgA5nkUgEkUgEyWQSi4uLaLVaWFhY2OFLPeqgfIlIJMIUlVarxYLZ3XWcVCqFw+FAMBiE3W7nTAAKKtFoNMxjpobPQd2rkakwhW38vTrNxC8atxdXoVDA6XSi3W7zmAIAHxAoXYpGIdQtJbU8cYLpYTObzVwwu1yuoV7ISXn9bYDGZ9FolAU6NJ6mAINRP3CpVCoEAgG2EZTJZFw49ft9pFIpyOVy9ho2Go3Md8/n88hmsyiVSjCZTNDpdNzpt1qtY9lpJtEfcbkppCKdTsPn87E9n9PphNPpHMl7QBQnEr3l83n+M7VaDZ/Px77BRMkgULOCBDv0/lBxSV1HIXaPS/dzbPqkoL1Cr9fD6XSyFoBS/dbW1jhAw+v1suMBWc4Jg5K63S533kkcV6/XYTAYMD09zZ3sUfVkplQ/ihUX/rzJw5vWnGH7OT9LkHi8Wq3C6XSiVqshlUrxAbJWq0EqlXJomNDFKZ1Os+CaMhSoKTYu97DdbiORSDD/PRKJcKH8MKokhdq4XC5MT0/zdM9oNEKpVHKH+aBx8N/BtwCtVouFhQVMTU1xMti4QOiecejQIfR6PaTTaZjNZqTTaRYHUpw0uWPQC0gOCKdOncLp06e5ezaq48JvAkqL20t0MA6gEaBSqUQgEMD8/DwajQZ7c3e7XWQyGWi1WhaixONxJJNJVnPTM0PeznTYGnXqym6Q6K9YLOIvf/kLrly5gkKhwGPWo0eP4nvf+x48Hg88Hs/I3oN6vY58Po9iscibFk3lDAYDrFYre+MKQXZQyWQSuVwOn3/+OesnUqnUjoh1ootRYUBdNVpjhmGj2wvUTZ6dnYXf78fx48dRKpX4UBCJRPDOO+/AZrMhHo/DZrNhYWEBCwsLaDQa2N7eZm738vIydDodXn/9dZjNZhw+fBiHDh3iw+co4nGpflNTUzh37hympqYQDAafq72EeOwWiwUXL17kn/cLL7zARaFEIoHdbofdbufU4larxbznRqOBtbU11Ot1eL1efj/HofEndOshX/NHQSKRQKVSsd6KimWaAA9TQ3Q4V7OnhE6nw8LCAo4ePTo0XqDfJqiTvrCwgFAohHg8DgCIRqMsDqRce+Crkxxx8bRaLU6cOIFf/OIX7JYwzB3mZwHiZZKX7Dj6YxKtgoID5ubmkM1meYxOmx7wVUdwN+WJDmi0eJHP5rhBKPr75JNPcOXKFdZMKJVKHDt2DH/7t38LrVYLo9E4kgXzYDBAo9HYEbIB3C+atVotDAYDb+q71wMqmm/fvo1wOIzf/va3HFHfbDYhl8s5jYt0E3K5nC35nE4nXC4Xe8gPIwwGA86cOYNer4cjR44gm81ie3sbv/rVr7C1tYV4PI4vvvgCBoMBW1tbsFqt+MlPfgKfz4d8Po8vvvgCqVQKX375Je7du4e5uTm89tprOHToEKxWKwdFjeo6+7hUv9nZWbz44ouYn58f6ev8OqDrtVgsOH/+PDezMpnMjgKRir5KpYLV1VV21JBKpWxNWCwWcfz4cQ7BGQfQhOppqFtk/6rX6zksh+7fMD1bQ18006ZOHbNarcabPJ32hF6yoybUeRrIZDI+jZHvLnUxdp/kqNNM90Wn08FoNEKn042FU8TXAd0jSsmjpCqhCnccIJVKYbfbMTc3B6vVyiNWivWlA9ZuL1EqqkixPA7iyN2oVquo1WqIx+NMySiXyxys4HA4oNfr2U931P27SdwmLJrJ21wqlaJer6NSqfAm1+12OaBjdXWVPVRrtRqL48xmM38+TbhI+KfX6zmO/iDFOk8C2j+IpkX2irOzs3xYpL2l1WpxIMr169dRLpdZ7CWXyzE5OYlgMAiLxQKdTjfyzw2BKEzCwqfVajE9Z2tri7uEu0NL6PfGGWQ9J0ziFe7F9BwNBgNYLBbOCSC/fAoDKpfLKJfLPOEbNmH+00KlUsHr9TJ/eXe3mbIBqLYj/2/S1CwvL6NQKMDn88Hv97N4dxjeqaEummlBbjabSCaTWFlZQblc5kQ7CvigRYpe2nEFFcBGoxF+vx9KpRK3bt164POE4yF6kZ1OJ/x+/3OxkD0OlKhI/F61Wj1WCVQymQxnzpzB1NQUCoUCrl+/zhtcOBxGo9FAPp9Hq9VCt9vljkChUECv10MwGMT58+fh9/tHXhwpRL/fx+bmJhYXFxEOh/GHP/wB0WiUI5T9fj9++tOfIhAI4Pjx4zAajU/s1TuMoG7xzZs3mYIjlUqhUqmg0+kglUp5WkUFLnVQc7kcstksMpkM+/F2u12cP38eP/vZz1AqlfDJJ58gnU6j2+0im82yXyppL4RJpcMKKpyJVmKz2eDz+dBoNHDnzh3cuXMHqVQKn3zyCaLRKBKJBH7/+9+j0+mgWq1iMBjg1VdfxY9//GM4nU7MzMzAbreP7DPzJCAuO4mLibdN8dihUAh6vZ5/b5h//t8GqOlisVhgMBh2FIf0Z0R1azabWF9fZxvYeDyOeDyOlZUVrKyswGw2Y2pq6qFuJKMCm82GH/3oR6hUKlhaWsK9e/d2TMKJ+kUd+Eqlgmg0inw+D7VajS+//BJ6vR4//OEP8f3vfx8Gg+GB2PWDwlAXzeQJSglO5XIZ9XqdT73CDjNtbsNwEnlWoMWHUu5UKtUj+YJCgSQdMJ7XgpmEO71ej+1tVCrVWHaaAbA/brFYRLVaRS6X40MoWYQ1Gg0+lApBdkpms3lo+ahfFxRikUgkEI/HEYvF2Ktar9cjFAphenoaNpuNn4m9hMejgMFggFarxZQk4YROLpezOFZIv0mlUrh37x7S6TTK5TJqtRpPIZRKJdxuN44cOcL85nq9zoWxsNNM3cZRuVe0TlKUOL0r1AkkkSAdNnf/vVAoBJvNxuEl4wKaIFC6KABODgWAtbU1ZLNZ1Go1tFotmEwmaLVatNttjoke930Z+Cok62GTOepGk7jaYrGwhzqJbEulEhQKxZ4OYaMGch8iaz2hLSVNwemwrlKpWFNDmpJCoQCVSoWFhQXkcjmmV9IE5yDXlaHeEYVFMy3+zWaTCx+j0QiXy8XWZOTtN64g9XIsFsOlS5cQiUSwtraGwWDA4zChsluhUKDZbEIikSCfz7MIzGAwjF0x9DCQlzUplfP5PORyOdxuNwwGAzQazYG/hM8SarUaoVCIHSAOHTrEXbJms4kPP/wQH330EYsjx/U+AODCJ5fLsR+18HoptCOTyaDdbiObzbIugDZE8gkfZoEbQSqVwufz4cyZM9je3sby8jLy+Tzq9ToymQxvZMKuFsXa1mo1qFQqmM1mTkN0Op04e/Ys9Ho9CoUCH8Z6vR53aQ8fPoyJiYmRF2RLJBK+BqPRiJs3b0ImkyGVSrGQi1Cv15HNZrm4HBeQJefLL7+MXC7HHUFCu91GMpnkKPLt7W2oVCrcuHEDGo0Gx48fx7Fjx2A2mzE3NzeUqbP7BWGstNfrxYkTJxCJRLC1tYVGo8H7eq/Xw8zMzAF/t98cMpkMWq0WSqWSQ32ERfP8/DxnB1itVqTTaSQSCSQSiR2UoOvXr6PZbMLlcuHixYtwOp3weDxwu90H5gM/3Ks+wPxL4t7RKZ9iOv1+P9xuNywWC4xG4wF/t88Og8GAu2QbGxu4dOkS1tbWUKlUOClPKLqhwrnRaKDT6aBQKCCbzXKhOOwb/rcFenZonJjL5aDVajE5Ocmc8HEWsVDRDHz1TNDiRQb0//Zv/8bv1bCP078piJpCUeEEiUSCTqeDYrEIjUbDokm1Wg2Px8OUBhJIDlMs9MNAXuenT5/m7xsAd56z2SwnHwpBhye32w2TyYTJyUn8/d//PWZmZqBSqbiLXC6Xkcvl0Ol0OAjn0KFDmJ+fH3lBNl2/y+WCTqfD1NQUd+6FRTNxMXO5HFQq1VgVzRKJhKla4XAY8Xh8z6KZPpd+pe50JBJBsVhEIBCA1+t9rotmAFzgeTweHD9+HFqtFleuXEE2m+VwJZlMxg5YowzSDQHgQDUhaB+Kx+OQy+WIxWK4fv0613hkyXf9+nXcvHkTPp8Pg8EAwWAQJ0+ehMViYftHsWh+BPayLRlWL9BvCzTC6Xa7bDJPVkcUy0lq+KmpKWi1Wk6Ea7fbKBaLLO5JJpNot9twOBwja4P0tKBrJ4V/t9tllb/b7R46Ze6zgHBDA746SFBcML1X1EU1GAxwOBywWq1DXxg+Lai463Q6cDqdLIpTKBTo9/v8jlBBrVQqUSwWmcqjVqvZw1c4aiXl97BxWen7MhgMcLlcLISkLjMJQoWfT7HXExMT/EEBA/Q+0QcJs4kuptVqodPpRv7wRUl/xWIRsViMPZgp6a/b7XIBSfH1tEYD4FCLUQY1poLBIJRKJU6dOsUFnrB4poMDCUpJvJ/L5RAOhyGVSlEoFKDX6597TY1EIoFOp4PNZkM+n+eDOPl9G41GFs2N8vsjxKPqM61WC4/HA6lUyh7ntVoNsViMKT9EKSRr3VAoxE4jj7OyexYYrx1xDNFut5FKpVCpVPD+++/j7bffRqlUwtbWFur1+o6kv1/+8pfw+/3Y2NjAxsYGMpkMPv30UxSLRaysrOCjjz5CKBSCz+d7bk79jUYDq6urSKVSbM2n1Wpx5swZzMzMIBQKjT3fbjfq9Tru3buHfD6PZDKJfr8PmUzG3ciZmRlcuHABGo1mrISAEokEPp8PZ8+eRS6Xg1KpfEDw9uGHHzKHl7qGKpWKF37iZ5JO4PXXX8d3v/tdTlkcpveKhMA2m43H7FNTUyxEIhcEYdFsNBpx9uxZOBwOfOc738GLL74IvV4Pn88HlUqFcDiMcDiM1dVVbG5uYnt7m4NyrFYrW82N8mGLDhM3b97EJ598glgshk8++QTZbBZnz57Fj370I9RqNdy+fRvFYhGJRALr6+sIBAKQyWQIhULs5zzKhY9UKsXc3By7IPzkJz/h7t+NGzeYe9vr9fj3hCP4tbU1JBIJzM3NYX5+Hq1W67kRBz4M1Gmmg2koFGJ6xu3btzlIqN/vjzVtkGAymXDhwgW0Wi0cO3YM4XAYqVQKH330ETKZDDscFYtF/PnPf4ZWq4XFYsHp06cxGAwOpPk3uivbc4Jer4dKpYJyucyLc6PRYK9hYdLf5OQkJicn0W63USqVOKyCjNVTqRT0ev1YjH+eFNQZI8s1KhCtViuHLzxPIKswoutQEhW5KpCxvN1uHzu7OSoiKRLc4/FAqVRy4lutVuPnpNPpPGCTRF00oQ96KBTCsWPHIJFIhnI0T+I2vV4Pl8sFiUSCYrHI6ZC7ed06nY55g5OTk5ifn4dCoeDuYLPZRD6fZweFer3OiV3UiR/1KRZxKnO5HDY2NpBKpZjDrdVqMT09jVKphFQqxfczEolAIpEgkUiwi0iv1xspMeReIK9cAlmEEZedfm9ra4vpKb1eD4PBgDvSRqMRmUwGdrsdJpPpoC5laEDviMlk4kj3breLYrGIcrnMVo7jPEEnKBQK2O127qwTDW5lZQX9fh/ZbBYSiYSbh0qlEoVCAa1Wi6eD+w2xaB5yUIb71tYWbt68iXK5jMFgwAXOqVOncPLkSfh8PrY7Iu9MAqnkE4kEG61TQMEod4SeBPSyRSIRlMtlAF+FvhiNxrEWju4GUTLC4TA++OADbG9v8+JktVrxyiuvwO12Y35+fiy778Jxs9PphNFoRKPRYKpBo9FAMplkelO9XufOD/GdycEnmUyi2+0iHA7jk08+wcTEBObm5mCxWA76MndAqVQyBenFF19EtVrF4cOHkclkOGJbuPHodDpMTEzAYDAgFApxl50673fu3MFvfvMbZLNZjuQ2mUwIhUJwu90j/z41Gg327r59+zZ3T2dnZ6FQKPDiiy/ixIkTaDabcLvdKJfL+PDDD9FoNCCTybC4uIh4PM4UHur0jwslgcSBUqmUn5t+vw+LxYKJiQkUi0Wsrq4yJa5YLCKbzeKdd97BtWvX8LOf/QyhUGjoaEwHAfIyrtVqiEajCIfDcDqdqFaraDQaTAl7HiCRSGAwGNjZ6rXXXkM+n4dCoUAqlWKOM/Ggv/zySzgcDpw6dWrf363xrpjGAPl8Hu+99x5u3LjBRQ95NWs0Gpw8eRK/+MUvYDQaMTk5ySe13SBPSJPJxFHSoyBm+qZot9tIp9MsYqERO4W9UFEw7hA6R2xvb+PDDz/E0tISc5otFgtefvllzM3NYWZmZiyLZgBsLwcAMzMzO4SRjUYDqVQKjUYDpVKJC+lUKoV6vY5IJMLipmKxyN6ixG996623DvLS9gRFZut0OjgcjgfEoHuBfvbC1EiyJqSimXQW5HEcCATgdrtHvjiklLZ0Oo1bt27h5s2bsNlsePPNN5nac+LECQDA8ePH0Ww2UalUcPfuXbTbbSwuLkIul8PhcGBiYoK9e0f9vhAkEglCoRCCweAOKkYgEMDRo0cRi8Xwhz/8AfF4HNvb2+xY9Pbbb0OlUmFqagpvvfWWWDTjq7yAdruNRCLBNDGa4ND073kBpf/ZbDY4HA7U63XE43F8/vnn3MCgBORr165x6q3ZbN7X73O8K6YRBglPIpEId4bpoSEPRJPJBI/Hwxntj0r6o5EjWbkIx8zjDPJ3JKqK0P3gcT7X4waybhR+0AFCp9PBYrHAZrONZWy2ELuFkQQ6cNJ7RElwUqmUrS6JzkBFEImehv19+iajXqJ31Wo1poWR+E+hUMBsNsPlcsFms43s+0RrYr1eRzQaZfFft9uFQqGAzWaDy+WCwWDggo+eAYfDgampKZTLZWxvbzOFJRKJoNlswufzcZrZOBxGdz9LZFtI6aNmsxnVapVpOjR212g0Y0f5+qaggyl17skilfRKzxuE7is0Cd/93gjTJg/ifRrNFW7MQSKUy5cvIxqNIhqNcsgAAFitVnz/+9/HxMQEjh8/jomJCXY+2GvjFkaRk53L7mjUcUWv10OtVkOlUuFxmMfjgd1uZ27r8wKyWysWi+wkYjKZeLQ6Pz+PhYWFsUpHfBpQcUTvCxXDdNjc3NzE5uYm1tfXcf36dWQymYP+lvcFjUYDW1tbyOfzbMWnVCphMpmg0WiwsLCAl19+GWazeaiEkE8DOlhHo1G8++67WFpaQjqdRr/fh06nw4kTJ3D06FEWsdHBSS6X48yZM9DpdNjY2MD//t//G7lcDrdu3UKtVsPk5CSLKOmgPm6QSCQc7KLVarGysgK1Wo1cLgeJRMK2l+T5/TyuLU+KdruNTCbDVmxms/m5vF9UKFP4Sbfb5ftgMpng8/ngdDoPZIIzFkXzOBU+tGHn83keE9ZqNX5oZDIZ1Go1vF4vczN1Ot0OO7GHfV3haPZxI9pxATkhdDodTmTSarU7PK2fB5B1IfF1qSBUKpUwGo1MWxjVoufbgLCDvBskbKLwE3p2aGEfdcHXo9Dr9VhMS1Z19C7RhMLpdI5E4MvD0Ov1OJ0tHo8jEomwd7lSqYTVaoXD4YBWq+WfM3UJrVYrJicn0Wq1uCgm6o5Wq2XrLCoAxhE0daCpFQVbAPfFqGR7OK7X/21B2Gl+ngT7u0FddwA7XEQoJIY6zQex5o7mCgfsOIWMuicoQShCuXXrFm7fvo1KpYJarQYA8Pl88Pl8mJycxKFDhzA5OQmbzfbAtQu9nakwJvU8KZh1Ot3Y8OxEPBzdbpfT/65fv46PP/4YyWQSpVIJMpkMwWAQZ8+excTExHPnJPI0GAwGyGazWFlZ4RH883L/KpUKbty4gY2NDYTDYQwGAxgMBpw4cQIulwvz8/OwWq0jS3caDAYoFAqIx+OIRqMcsECdPrPZDL1ev6MQJFBiIIXjXLx4EYFAgGPalUollpeX0W63MTExsaPoHicUi0WmE4bDYUSjUZRKpYP+tkYO3W4XpVJpxwF1HJ+XR6HRaGBzcxP5fB7hcBi5XI7pcQCQy+WwtraGVquF48eP7/v3N3ornABESaBkmFFHo9HA+vo6UqkUbt++zb6NZD/j9Xpx6tQpTE5OYmFhAcFgcM8XisbJVDRLpVLodDq4XC44HA4Yjcax3eBF7ARZGVWrVdy4cQO///3v2TFCKpUiEAjg3LlzPLEQsTcGgwFHCSeTSeY6Pw/3j56dxcVFpFIp5rCeOHECU1NTmJ2dhdVqHVlxFxXNW1tbOzQkVDCTNZhOp9vzGknAJJfLcfHiRUxPT+Odd97BF198AYlEgqWlJTSbTWi12oeu2aMMCoKhYjkcDiMWi6FUKj0X08xvE2QxS0Xz84hms4mNjQ0kEglEIhEUCgW2/5TJZFw0A+Bp0H5iqItmMpnf7ZdKoEJwXJLLhJ7CZAVF103hE1arFSaT6YHuOgneKAUwnU6jUCgAuC9wstvtmJiYgNfrfS5GZEQ/6XQ67MFL4q5xHqXvhvCZIjeIdrvNVB+9Xg+73Q6z2fxc0VWeFOSM0Ww2kU6nkUqlkM/nmatJntbjeP9oRNpqtVCr1VCtVnlkTOEuxOsd9fep2+1yQiaNhSlFkSzjHhU2QWuL2WxGp9PhjjLRw4Qpk8MK8lUmwXC/399xICAxI4FcVTqdDiKRCJaWlpBKpZDJZFAsFtFsNgGAxcZ6vV6cbj4Bhpk62e12d1hwUo1BHXGKnicxn/B9oeeFarp2u73ja9dqNdRqNWSzWaytrXENQ0Ev5Bdvt9sRDAbhcrlETvNuCEVc5NFHkEqlCAaDuHDhAhwOx1h0TqnTvLm5ySIjKm7kcjmcTifm5+fhcrkeCBBot9vIZrOoVqu4e/cuLl26xDxom82Gs2fP4q//+q9hNpuHzkv2WYB4zMQt3N7eht1uh8vlgkajGYvJxJOA0v/o1E5Rt2SwHwwGceLECajV6rF3zfg6oC5rNpvF5cuXcenSJQD3D6ImkwkzMzNje/9arRYajQaKxSKSySQSiQQHdtAhflwis2u1GjKZDDtmSCQSBINBfOc73+EY8ccdtilN0+Vy4cqVK/z5FAU8zBzVfr+PlZUVXL9+HdVqFeFwGM1mk3MADAYDgsHgjmjwZrOJcDiMUqmE3//+9/i3f/s3tmsUFkUqlQrBYBA+n29POqGI0UGtVsPi4iLy+Tw+/vhjXLp0icNs5HI5/v7v/x5/93d/B7VazY5eBHpeqDDO5XJcEPf7fdy9exdLS0uoVquIRqOo1+sol8vodrtQq9XsXnPx4kX8/Oc/h8FggNVq3fd7MNRFc7/f55dvr1M6eY9aLJax6PLQaIbS/Aik1qbOllar5dx1YUe1Wq2iXC4jn88jk8lAKpXCZrNBrVbDbrcjFAqxCG7cQafZVquFer2OarXKHaPnyR2COHK5XA7VahXdbpdP7ZQUN45d0m8L7XYbuVwOqVQK6XQa2WwWCoUCHo8HGo0GBoMBFotlLCZdu9HtdtmfmcRJJHoUUuNGlZYhBF1ru91Gr9eDRCJhHQjtL49bM+RyOfR6PYsk6b5Qt3lYu4fkEFMoFDiyeGVlBc1mE3a7HYFAAL1eDw6HY8dzTgeqfD6PaDSK1dXVPVMxFQoFDAYDzGYz1Gr12K299HMVitcIZKEGjL5hAU2zaT1cWVnBl19+yYdBhUKBl156CY1GA1KpFL1eb0ed0mq12P8+nU4jmUxyh7rf72N1dRU3b95Es9nk1D+CcFrhcDgQDAYPzI1mqFf6RqOBlZUVHosO66LzbYH4p5lMhi3mhIJH6vB0Oh1Eo1GOQa7X68hms/jiiy+QTqdx48YN9Pt9qFQqWK1Wtvoh9fKov7yPw2AwQD6fRyKR4JNtv9+Hx+PBmTNnEAwGx5Z/SqAY6Hw+j7t372JjYwPJZJJHrsePH4fT6UQgEBi7TezbgPD+LS8vY3NzE4lEAv1+H2q1GhMTE3A6nbDb7Qf9rT4TDAYDJJNJbGxsYHV1lfmVOp0OJpMJXq93B5953J4hqVQKg8EAj8cDh8PxRIfKXq/HB/RWqzUS/t2VSgUrKysoFAq4dOkSLl26xNaU1Kza2tqCWq1+INmw1Wohn8+j0Wjg1q1bDzg3ER98amoK586dw9TU1NhxulutFrLZLBqNBlZXV5lrS/u1y+WC2+2GTqfjptUoolKp8ATiww8/RDgcxvr6Ohe99IwXCgWsra1Bo9HAaDRCJpNxw6FcLmNlZQXVapWFowRK+iuVSuwDL4Rer8fhw4fh8XgQCoXY81t0z9iFer2O9fV1bG1tPVdFcz6fR71eB4AdXB4SPHY6HT6l0ZgjEongN7/5DWKxGHdL5HI5bDYb7HY7LBbLSFtCPQ1ItLW2trajaHa73Thz5gzsdvvILl5PCuJy5/N5rKysYHFxkYU55HwQCoXg9/vH/hD1dSC8f8vLy1hZWUEqlQIAaLVahEIhBAKBsR039/t9FiRvb2+j0Whw99XpdHLRPDMzM5bXD9zfqN1uN6xW6xMXzY1Gg4vmYS+Ygfv0o+vXryMajeLSpUu4fPnyjq54OBzm9WGvnzN9Ho3ohaDI+tnZWbz44ouYn5//RiE7w4hWq4V4PI58Po8//vGPeO+99/g9UavVOHbsGI4ePcoi/FHcdwaDAarVKlKpFDY2NnD58mXcu3dvB/+ffqaFQgHr6+ts7SqVSnHnzh3cuXMH5XKZI9ZpCiz8u3t16glarRaHDx/G1NQUAoHAA/z6/cTQV1DPU3odUTDUajUv0oPBgC3kMpkMVlZWdoxDiYxPfs6dTgdqtZq7y9QRG8du0KNAkdGlUolPrQqFAiqVauy77eQGkEgk2MKw2WxCpVLB5XLB4/HA6/XC6/WOhRbg28bu+5fP51GpVPgQ6nA4EAgEEAgEYDKZxuq9EvqaCwXF3W4XcrkcdrsdMzMzzG8dp2ungk4mk3GzQqPRPHa9oM5YrVZjoWi5XOYuHIkmh3HNabVaSCaTCIfD/HMW7rWPKmT2Aokh1Wo1pqamMDc3h8nJSeh0uqG8/m8KolQWi0Xef4nHPhgMkMlksLm5iXq9jmAwiHa7zam0wqCxh+UrDAvoGdZoNNDr9TCZTCiXyw+I+ciFhuh/UqkUkUgEuVwOlUoFjUaDp3hCKo8wCZAS/2QyGQwGAwwGAwKBAAea6PX6A113hr5ofp6gUChgt9vhdrt5dNHr9dBsNiGVSvGXv/wFd+/e3fF3Op0Oer0eWq0WisUi+v0+AoEAZmdn4ff78aMf/Qher5cVrc8D+v0+EokEbty4gWQyiXq9zgcSq9UKo9E41h33fr+P27dv4/3330cikcDW1hZKpRIWFhYwPz+PiYkJvP7661z4PC/PxZNCeP+SySSWlpaQy+UQDAbZH/3NN99kb+Zxun/EgW80GlhbW8Onn36KcrnMwR3f+c538Mtf/hIWi2WsqCm0aQs3br1ez0l3j1ovarUayuUyEokELl++jHg8jo2NDeZ06vV6GI3GB8Tbw4BSqYS//OUvuHHjBqrV6jduTpnNZly8eBEulwvnzp3Diy++yC5X44hms4mtrS2mSwI7XUWuXbuGq1evwuPxoFQqwev1YmZmBtPT08hms0xTIKeRYYREIuEAtXq9jhMnTsBoNOLevXuoVqtc8He7Xdy6dQvhcJgPnwBYD0H3hQLcdoN0ElqtFj6fDwaDASdPnsSJEydgtVpx7NgxmM1maDQasWh+WtACR52Bcel2kCKdRjtyuRy9Xo9PoplMBplMZoe4gEAPqUKhYM6hz+dDKBSC1+sdSwHGo0BiAlLfAvfvL9FcxvVekE1jPp/H1tYWO6p0u13odDp4PB54PB4eF4rYCRKQZrNZvn/CotHpdMLtdvN9HDdQIhnxDjOZDNtfymQyWK1WTE9Pj52gWFgsU/Es3GcettEPBgN2jCgWi0ilUojH46hWq/z1lEolr+fDBuLtU2T4XqC9hgRdtOfSfRJCp9PB7XYjEAhgamoK8/PzY3Wo3I1+v8+6osFgAIVCgX6/D7lcjsFggHK5jFwuh16vh3A4jF6vB5PJBIfDgWq1yjaH9GwJ7+sw7VFkOajT6WC1WlGtVhGLxfhZoMNWqVRCqVR64u+dJjGUxkrdbGpuhUIhHDp0CEajEW63eyjoLcP3Fj8GSqUSJpMJWq2WNy6yPRp16HQ6HD16FHa7HQaDASaTCaVSCRsbG6hUKvx5SqWSHQ9onGaz2fDCCy+wSwbZJDkcjqFdsPcDUqkUSqUSvV6PeVYHyYd6lmg2m0gkEqhUKrh37x7u3buHZrPJlJ+FhQWcP39+bCwav20UCgVcv34d2WwWV65cwfLyMnq9HjweD2QyGS5evIhXXnkFNpsNZrP5oL/dZ4J8Po/3338f0WgU165dQz6f54AlmUzGjitCd4hRh1QqhcvlwrFjx6DRaHD58mUUi0UsLS3hn//5n2E2mzE7O7sjYl6Yunrv3j3maq6vr6NarUKv1+Oll15CMBhk8bHb7R6qQgi470V96tQpqNVqbG9vY3t7e8efT0xMIBQKseiv3W6zwM9kMmFubm7HfTEYDJidnWU+87Bd77cNrVaLQ4cOweVyYW5ujhsU9Xod7XYbN2/exK1btyCXy1mQvbKygsuXL6NarfJzUygUoNFoYDabMTMzg7m5OTgcjqG5f3T4s1qtOHPmDEKhEEqlEpaXl9nh7FFTCjqU7m7eCZ8XimA3Go2YnZ2F0WhEMBiE3+/n5OdhwMhVUgqFgh0h3G433G43dw9HHTqdDkeOHEEgEIBer4fBYEAikUAymdxRNCsUCthsNmi1WuYGzczM4Je//CVmZmY4yUrYjX+eQaf/56Fo3t7e5rjnlZUV9vc2Go2Ym5vDSy+9xNMMETtRLBZx6dIlrK+v4/bt21hZWYHRaMSxY8fgcDhw/vx5/OQnP2HbtXFEoVDABx98wOl/uVxuRxdIpVKNXUiFRCJh73uKxVYoFFheXkYsFoPdbsdLL70Em83Gf4dCHlqtFj755BNcvXqVE8sUCgXOnj2LF154gYtmr9c7lGuxXq/HyZMnYbVaMRgMOCYduF/ohEIhnD9/HvV6HWtra6jVaggGg8wxfeutt+D1end8zXGcAj8MWq0Wc3NzaLfbvGe3Wi2kUilUq1UoFApkMhlUKhXcvXsX9Xp9h983CShJa2MymTA9PY1Dhw4xJWIYQFMTi8WC06dPo1ar4e7du1CpVKyDeBgvm54HuVzOUfQ0tfB6vXjllVfg8XhgsVgeOIwJO+7Dci+GumiWSqVsoE+LNJHDTSYTNBoNj9PGATKZjMcPLpcLjUYDOp0OuVyOU8iA+yb6brcbarWa47KDwSBsNtsOasfzjE6nw7wyoW3fONIzaAFqNpscQlEsFtHr9XgyYzab2XLwefKp3o1qtYparcZaARqlyuVyxGIxJJNJDhay2Wyw2WwsprXZbGNVMNNm1+/3kc/nUSwWsba2xpQeUsdrNBp4vV722h2X9VYIGj9TiEe73Uaj0UCz2US5XEY0Gt3RuCB7OVpnaI9yOp1cSIVCIV6nh/WeqVQq7oALpwrA/f338OHDCIVCrKtpNptM76Lo+HFoWH1dCD251Wo11yl6vR4ymQx+vx9Hjx5FoVBgugbRMsgfG7jfcaXwLSosh3GdkUqlUKlU6Pf7cLlcmJmZQb1eRzqd5hCfVqsFhULB2iHqEms0Gng8HqjVaj6Y2Ww2BAIBOBwOTp/U6/VQqVRDW8MM53f1/0OlUsHr9UIqlWJxcZHFXIFAAB6PB3a7HQqFYixiXIH7tAu3280P5IkTJ9DpdPBXf/VXO9KkaFQiNA4nviWpTp9nCC1yGo0Gd39o0x/WBenrgnjvmUwGH330EVZWVrC5uYlerweNRoO5uTl4PB74/X4WNY3T9T8p+v0+Njc3sbi4yKlTzWaTuxvxeBxXrlxBMpnE1NQUXnvtNbjdbnz/+9/nqdawFj9fB2Rx2Ww28ec//xkffvghcrkcFhcXUSwWWRlvs9nwgx/8AIFAAEeOHBmre0DQaDRQKpWYmprCX/3VXyGRSLBvMYn8hHsMaQcAwG634/jx43C73Xj99deZ8+71evnQOqwwmUy4ePEi2u02XnvtNVSr1R1/ToWMUMRFU4dhv7b9gFwuh9ls5ikDFdEOhwP9fh9vvvkmzp07h3Q6jUuXLiGVSuHGjRu4efMmi/ilUimmp6fx4osv8kHroB0iHgYSyGo0Gly8eBFmsxmZTAZXr15FLpfD9vY2otEojEYjzp49C5vNBovFwm5ep0+f3pFITBos2pPpYxhFs4ShLpopBcZgMLDwRK1Wc+eM4pCH8eH6OqAXDsBQEN5HESTYoU5Ru91mXjMlmA3rCfbrgq650WjsECIBXy1KQheA57FgJlBccqlUwubmJiqVChwOB2w2G5LJJIrFIsrlMh9gyVrO4/GMncUa8XIbjQYSiQSWlpY4kZTCTORyOXeaSScxjiDxlV6vRyAQgE6nw+LiImQyGZrN5g7ryt1/z+VywW63w+PxYG5uDn6/H1ar9UAifp8W5Ngk4utBIpE80GmXSCQskqWpsNlsRiQSgUqlQiQS4Sk5Cf+sViv8fj9cLhf/2TCCaBYymQwOhwMzMzMwGAzY3t6GVCpl8TA5ptC7QVadR44c2UFzGkUMdfWg0WgwOTkJp9MJhUKBI0eOQKfTYXJyEgaDAZOTk2PZ9RDx9VCtVrGxsYFisYjV1VVkMhkolUr4/X6YzWZYLJaxKnoIpN4nGk8+n4dSqUQwGEQwGMSxY8e4g/G8vy8mk4lTEAuFAlKpFCQSCbRaLfR6Pd544w0AwJEjR3DkyBGYTCYeuY/bGJpcQorFImsnGo0Ghw74fD643W5MTk7i+PHjTFMZx3eIoFKp4PP5YLVa8eMf/xgzMzPsW72Xu4REImEaj8lkwsTEBIxGIzQazQF89yKGERKJhFNYJyYm4Pf7cf78efR6PT6ITU1N8bMzCmm1EokEZrMZEokEVqsVKpUKtVoN+XweuVwOOp2OLTmJYqvT6caiGTjURbNarcbk5CQGgwEOHTq0Q6BAv47zAi7i6VCr1bC4uIhYLIa1tTXkcjlYLBYerdNLPk4YDAYc5EIfhUIBPp8Pfr8fU1NTOHr0KKampsYuiONpIZFIuGhuNBooFAqIRCLQ6XSw2+2wWq04d+4crFYrpqamMDU1NdZiWiqaM5kMkskkkskkUzJkMhncbjfOnj2LiYkJHDt2jA8b43gvCEQJBIDJyUn88Ic/fKK/J7RhG+f7I+LrQa/X4+jRowCwZ1ib0EZ2VBobJpMJRqMRg8EA8/PzTBUl7E6SHJe1Y6iLZmDnYiRCxKMwGAzQbrfRbrd32GQRPWEcTrl7gQzhbTYbjh49yvG/LpcLPp+PE7rGrVP6daBUKqHX62G323Ho0CEYDAaEQiGEQiEYjUY4nU62PxKq3McVtNFR8pvQy9zpdCIYDLJ453lZg+lnTvxKESK+DYxaUfwkGJdC+Gkw9EWzCBFPCuL1VqtVdDodDAYDaLVaLCwsYGZmZizpCdQ91Wq1cDgcrHSnwkelUsFut499dPiTQHivqCBstVpQq9Ws1tZqtRwZ+7xtBsD9Q4XH44Fer8cLL7yAn/zkJ9Dr9WPLZRYhQoSIp4FYNIsYS5DVjVarhdlsHvtOM3WbR0F8dJAQ3iuhivt5BQng6H1RqVTsMuNyueD1eocqWECECBEiDhKSwTcNmxchYkhQqVSwvLyMcrmMSCSCSCQCi8WCc+fOwW63c+iLCBEivkqQrNVqWF5exvLyMrutqNVqHDt2DEePHmWawvPYeRchQoQIIcSiWcRYgUQWQlECbfjipi9CxE4I3xVyh6D3hLrQIkSIECHiPsSiWYQIESJEiBAhQoSIx0BsI4gQIUKECBEiRIgQ8RiIRbMIESJEiBAhQoQIEY+BWDSLECFChAgRIkSIEPEYiEWzCBEiRIgQIUKECBGPgVg0ixAhQoQIESJEiBDxGIhFswgRIkSIECFChAgRj4FYNIsQIUKECBEiRIgQ8RiIRbMIESJEiBAhQoQIEY+B/KC/ASEokarT6aDb7aLb7aJWq6HX60EikUAqlaLf76PVaqHf76Pf76PX60GhUMBgMEChUECj0UCr1R7wlYgQIUKECBEiRIj4JhgMBmi1Wkin02i1Wmg2m2g2m5BIJJDL5ZBKpXC5XHA6nfuS+js0RfNgMECn00Gv10OhUEChUEC5XMby8jIqlQoUCgUUCgWazSZSqRQajQZ/WCwWnDp1CjabDTMzM5ienoZUKhVjk0WIECFChAgRIkYQ1BhNJBL49a9/jUgkgu3tbUSjUUilUphMJmi1Wvzd3/0d/uZv/gZy+bMvaQ+0aB4MBhgMBnxjms0mut0uKpUKisUi8vk8otEoCoUCVCoVVCoV6vU6IpEI6vU6qtUqarUabDYbHA4HOp0OXC4Xer0eAEAmkx3k5e0bKAmdfqUu/NeBTCYTDxwiRIgQ8f9jr/WV9i6CVCrl/UZcO0U8KehZol8JEomEp+v0388jqDas1WrY3t7G2toaVldXsbq6CqVSCYvFAr1ej1dffXXH/XuWOJCimW5Cp9PB1tYWtre3UavVkEgk0Gg0UCqVUCqVuCXfbDYhl8uhUCjQbreRz+fRbreZwlEul9HtdqHX69Fut2EwGKDT6WC326FSqQ7iEvcNtVoNtVoNrVYL+XwezWYTq6urWF9ff+LCmRZ8pVKJkydP4sSJE1CpVNDr9ftychMhQoSIYUS5XEalUkG73UapVEK73UY0GkU0GkWn00G9XsdgMMCJEydw7NgxaDQa2Gw2KJXKg/7WRQw5KpUKVldXUSqVuA6Sy+UwGAxQKpUIBAIIBoPQarXw+XzQaDQH/S3vO+r1OsrlMlKpFDY2NrC2toZ8Pr/jc/b7UHEgFRF1k+v1Om7cuIHLly8jn8/j7t27KJVKaDabaLVaAL7qfNIHcZq73S4UCgXfrPX1dchkMpjNZkxNTcFqtcJoNI510TwYDFCr1ZBOp1GpVLC+vo5yuYz33nsP7733HnfcHwepVAqNRgO1Wo1//Md/hNfrhcFggFqtFotmESJEPJcYDAaoVCqIx+Oo1WqIRCKoVqv49NNP8dlnn6HRaCCXy6Hf7+Pf//t/D4PBAKvVykWPCBGPQrVaxY0bNxCNRnHp0iVcvnwZSqUSXq8Xer0eL730Es6dOweHwwGbzfbcFc1U32SzWSQSCWxubmJ1dZU7ygfVgT+QiqjdbiMej6NYLCKbzaLZbKLX67GAT6fTodvtQiaTQavVQqFQQKlUQi6XMym83+9DJpNBLpej0WggFouh2+2i0WgglUoxR3qc0Ov1uLter9fR6XS461GtVrG1tYVSqYRsNsv36ElAI6DBYIBUKoXV1VVYrVaoVCreABQKxTO+OhEiRAwTer0erzmVSgXdbpf/TPh79HkEiUQCk8kEk8nEIm2ZTMZTsXa7jWKxiE6nwxNEtVoNj8cDtVp9YKNoGpMLp3a0vtbrdS6e0+k0arUaN3cGgwHS6TRWV1dhMpnQarWg0+n2/DeMRiMMBgPkcjlUKpVIhxshdDodFAoFdDodqNVqaDQayGQyKBQKSKVPZ0QmFLfFYjHk83l+lqrVKnq9HrLZLJLJJKRS6djVMk+CwWCAcrmMeDyOTCbD90cIaqaOfac5n8/j3Xffxfb2NvOS5XI5Dh06xIuoUqmEVquF3++HVquF2WyG2Wxm7nOv1+PPDYfD+Kd/+idEo1Gk02l8/PHHmJqawsLCAqxW60Fc4jNBtVplvjeNdW7duoW7d++iXq8jlUqh2WyiXC4/Fb9HKML89NNPkc1mEQgE8POf/xx+vx8OhwN2u11c2EWIeI7QbDZRq9VQKBRw48YNFAoF/rNSqYTbt2+jWCzyGk6HdLlcjnPnzuE73/kO7HY7Tp48CZPJhLW1NSwtLSGVSuHSpUvI5XK8rk9OTuI//If/gImJCd4I9xvtdhutVgvJZBLvvvsuEokEtra2EA6H0Wq1mJ5Rq9VQrVYxGAz4IPHll18iFotBo9E8lBYok8lw5swZnDp1CgaDAX6/HxqNhvU6IoYbxWIRH3/8MbLZLCYnJzExMQGtVgun0/lUPz/i6ebzeXzyySe4ffs2CoUCBoMB2u02MpkM5HI57t69i2azibm5Obz44otwOp3P8OqGC/1+H91uF6urq3j//feRSCRQLpcf+DyqAfdTv3ZgnWZquRPZXalUwmq1Qq1WQ61WQ6vVQq/XY3JyEnq9HjabDVarFf1+nwWDCoUCcrkcSqUSJpOJTyOpVApGo3GsTmf0QlWrVZTLZSSTSeRyOWxtbWFlZQWNRgOFQoFpLcDTCVJ6vR76/T5yuRz/e4VCAWazGSaT6Vu/nqfFk3bNhaMb4f/T16D/30u08zwLLghCcS7w1X0fVaGTUMS1+9r2AnUtvkn3QvicCZ9HKgSH/f7R999qtVCr1VAqlbjbQ8jlclhcXEQ2m0W5XN6xoUmlUlitVgQCAfT7fdRqNSiVSuTzecRiMUSjUdy+fRvJZBJ2ux12ux0A0Gg00O/3D+z+9Ho9dDodVKtVRCIRbG1t7Siaa7Xajm67ELlcDrVaDSqVCul0es/JnFwuh81mg9/vR6fTgcVi4fdq3Irm3e/abuEkYRQEb/S9NxoNJJNJxONx6HQ6WCwW9Pt92Gy2r/X1qEBOJpP8XNF7Rxz6XC6HYrH40OduHDEYDPhdLBaLvPa02+0dn0c6LKVSCZlMtm/PzoEUzSaTCRcvXsTc3BwXyXK5HFqtlk8OVAxbLBbuOms0Gj7d9/t9XnCMRiPTN0hEqNFoUK1W0W63IZPJRtZJg6632+1icXERn3/+OQqFApaXl1EqlZBIJPilelIO86P+rXq9DgDQ6/WIRqOQy+XQ6/XweDwHtqDVajVsbm6iVqs99d/t9/ssGg2HwwiHwzAajThy5MiOw4BarYbb7ebncdw2sceBxu2dTgfhcBiRSAS1Wg2xWAztdhvHjx8fOaFTtVpFtVrdYVMZjUYRj8fR6/XQbrd3FNBGoxHz8/Mwm80IBoMIBAJP/MzTe9rr9RCJRBCJRNBut1Eul9Hr9VjUo1arYbFYho7uRIWykIawtraGtbU1FItFLC0t7SiMqYBoNBoPbGaDwQDr6+sYDAbQ6XS4du0a1Go1EokEEokESqUS8vk8Op0OyuUy+v0+XC4XU8oOoss8GAxQLBaRTCaxsbGB5eVlbG5uolgscrH8qOldr9dDo9Hgid1e1yCRSPDZZ58hlUrBbDbj8OHDMJvNOHbsGI4cOTLS+xSh2+3yvhuLxRCLxdBoNJBIJNBsNnktpn1FqVRiYmICwWAQOp2OKToHDeH0NZfLIZfLIRwO49q1a4jFYohEIrh+/TqCwSD++q//Gn6//6mLfjpUfBt79zihUqlgeXkZ+Xwe165dY9vhZrMJANBqtVCpVPB4PHjttdfg9Xpx6NChfVs3DqRoNpvNOH/+PNrtNoxGI4xGI4AHu34P+z3g/gNH/0+CP5lMhnw+j3w+D4PBgGq1ilarxX82iqCXt9ls4u7du/j973+PYrHIjiO9Xu+BrtY3AfEONRoNYrEYZDIZfD7fN/663/R7Wlpa2tHp2gu7O4hSqZQX8VarhcuXL+OTTz6Bz+fDL37xC/j9fv48o9EIqVQKs9kMAM9l0VwqlVCtVnH9+nV88sknyGaz+OKLL1CtVvEP//APIyV0Im5gOp1GoVDgEegXX3yBa9euodVqoVKp7HhmvF4v/t2/+3cIBAIAwBvhk/57nU4HnU4H6+vruHr1KovIWq0WLly4wM+ZTqcbuqKZiv5qtYrV1VVks1lcuXIFV69eRbVaRSaT4U2LsNsmS4j19XVsbW0BAG9mwm4/FQn9fh/1eh25XI4PMftlHSXEYDBAqVRCOBzG5uYm7t27h42NjSf6fqhrSKjVag99brLZLK5duwaz2YzNzU04HA6oVCrMzc0BwMjzm7vdLorFIur1Om7duoUvv/wS2WwWt27d4gNIo9HgJoVWq8Wrr76Kixcvwm63w2KxDEXRTNz2TqeDWCyG1dVVbG1t4fr16wiHw8xjPnnyJF555RV4vd6n/tkJ1wwRX4EEknQwWV5e3nFoValUsFqtCAaD+MEPfoCZmRk4HI7x7jRLpVKo1WoeS30dhwaJRIJOp4N2u416vc5BJzKZDAaDgRMCR20RIo/lcrnMHDpahLa3t1EsFlGpVNhBhPAkGw2NwWgTI27VXhB6R+7HJiZMeGw0Gtz5rFQqyGaze1rN7PU1hKCimbphJOKoVquIxWK8WFExQzQfh8MBh8MBhULBtnv0McqgeywsXuRyOWQyGRqNBtbX15HNZrGxscFdRJPJBL1ez8WyRqN55Im+0Wig2WxCJpNBp9Pt+2G11Wohm82yODgWi6FcLmNzcxOVSoXH6LR2CJ8Z6rIOBgPMzMygXC5DqVRCrVY/9JrpPSH/+Eqlgo2NDYTDYTQaDaTTaXS7XQ5rkslkQ9NVouK13+8jnU7zAWN1dRX5fB6pVIo7PN1uFxKJhCd+EomE11dKcKV3q9Pp7OD77obw2SDB4MTEBD9b+7leC4sj6jJHo1E0Go2v/XN6XEe61+uh1WoxRzydTiOZTEKr1Y7MFGc3KpUKa242NjZQLpexsbHBk9BKpbJDPAmABW+JRAJra2uoVCrwer0AwBO/gwI9FzSlWl9fRyKR4OebUoqbzeaBHfTGFXTwyuVyqNfrO+6vRCKBTqeD1WqF2WyGwWDgicVYF81EqRgMBl+7pU6c23Q6je3tbcRiMSSTSfh8PszOzmJubg4mk+mRG96wgfjanU4Hn3/+OT777DMUCgWsra2hVCohmUwikUjwBvU0oNGf8MDSaDSYjnHQaLfbaDabqFarbJ1348YN3Lp1C5VKhYuQR2H3wkWOINSNr1ar6Pf7KBaL+NOf/sTdZIlEApVKBYfDAY1Gg/n5eczNzcFiseDo0aMsVqIu9KiCNgHiiw0GAz5gJhIJ/M//+T+xuLiIYrGIcrkMm82Gc+fOweVy4cKFC5ibm2Ong70wGAxYPGUwGLCwsACDwbCv15jNZvHb3/4W0WgUKysrWFlZ4YN1t9tFrVZ7YCEmlEolXLp0CRqNBhqNBl6vF0ajkb1S9wIV39vb2/i///f/YmtrC5ubm9ja2uLiSCaTwel0wu12w+PxYGpqaj9uxWPR6/W4KP7jH/+Id999F+Vyma3VarUaKpUKgK/4g9PT05ibm4NKpYLJZIJMJkOpVEKxWGTBYLFYfOS/q1Kp4PP5oNPp8MILL+D06dNwuVzw+/37uvkB99+JWCyGSqWCjz/+GL/73e9QLpcfe0D/pqjX61hZWYFSqWQ7MbfbjZdeeumpObIHjX6/j7W1Ndy8eRPJZBIff/wxMpkMSqUSyuUyOp0OH0LokNrpdJDL5SCTyfCXv/wFd+7cYRFoKBTij4NqeHU6HeTzeZTLZVy5cgX/+q//inq9zrQi4P6+Ua/Xh+YQPC6o1+s7RMPCxoZUKoXb7cbJkycxMTGBQCAAl8u1rw2tAymaKTP8m4KcIsrlMur1OprNJlQqFWw2G8xmMxPERwXUnSGBwMbGBnK5HG7fvs3+1btHpE8K6uAoFAru7g/TWKjb7XLRnM1mkc/nsbGxgTt37qBeryOdTj/AndyNhwlNdoPEokKoVCpOnpTL5VCr1Wg0GvD5fDwR0ev131gkdpCgMAYhn5cODs1mE5ubm1haWmKbMb1eD6fTiVAoBKfTCYPB8MgDKHFiSQm+H+KV3SlttVoN4XAYGxsbuHfvHpaXl3ckZNLBcffkgL4OuUEUCgUWsD1KONjtdpnqsbm5iZWVFebuEoVMoVDwWPpprCCfNciJiLjrd+/eRaVSQSr1/7H3nz1ynll6OH5VzjlXV1VXZ3Y32SRFSgwSJVEaTdqZ1c7OAhu8wdgXNuBvYMCfwJ/AMGAYC9i7wnodZn4zI4200sxIokgxUyQ7sFPlnHOu/wv+z1FVs5uxQxXVF0BQoUPVU89z3+c+5wpx1Ot1vs/JVovWVuKdms1mSCQSJJNJSKVSdLvdp6KdiMViqFQq6PV6jIyMYGZmBjqd7olTjL0ATbSy2SxisRh8Ph/q9XqfoPpJ2I5KCDy+40yhXGKxGMlkEtFoFCKR6Ilr3CCgd1rV6wQRCoWYykDiNiooe7MWyDqW9jqaxAiFQiSTSWi1WthstgN9jyTIq1arSCaT8Pl82+6XvfTIQ7wY6J4irUMul3uk3qFOs8lkgsFgYH7zfmLo5s3UOWy1WlhaWsIf/vAHHiUrlUocOXIE3//+92Gz2QbC9eFZUK1W4fP5kMvlsLi4iG+++QaVSoUL5hc50ZIjiU6nw8zMDFQqFe7fv4/FxcUDPyl3Oh08ePAAd+7cQSaTwb1795DNZhEIBJBOp9FsNve80Gi326hUKmg0GlhfX0exWIRGo0E4HIZGo8Ho6CjcbjdfP/KeHYYpBj0zS0tLzOclW8K33noLFy5c6BOykc5gfHwcR48exfj4OOx2+1MdFGjRe5JwajdA6upGo4FgMMh0jFu3biESiSCRSLCfu0ajgUwmw9GjR3H06FEWHAuFQj5w08i80+ng5MmTcLvdUKlUO47LO50ONjY2sLS0BL/fzyPcYrGIbrcLmUwGq9UKpVKJo0eP4tVXX4Ver9/Rw3e/QNZq8Xgcf/jDHxCNRnH16lUkk0m0222o1WpoNBo4nU7uCDudTigUChZtkc+wQCDAN998g1Qq9cTfS8+LTqfDiRMnMDIygqNHj8Lj8UChUOwrLYFoEvF4nO1Pb9++zdSwZ11vyN2J7v9eit2TXkcwGMTly5cxMzODs2fPwmw297nVDAJ6BdXhcBiRSASFQgGrq6s8nQgEAjzFIdcljUYDpVIJh8PB9npSqRSpVApffPEFUqkUT06r1SpSqRRUKhVcLlefbukQLz9Ij+b3+5FOpzkVurf5QEmJp06dgtls3nECuJcYyqKZujtLS0v48MMPmc+sUqlw5MgRvPfee1AqlSwwHBbUajX4/X7EYjEsLS3h/v37PEZ/UchkMuj1etjtdpw+fRomkwnFYhFLS0u78MpfDJ1OB6urq/joo4+QSqVw79495HK5PsHQXoOKZuAh125zcxMymQz379+HQqHAkSNHMD09zb7VRFEYhqKZFNpLS0v4//6//48DGgDAaDTi9ddfZzETxdB7vV5MTk7i6NGjmJyc5ALpSaAD7W7dt48DjXiLxSKuX7+Oq1evstAqm81yF0gikfAG/tZbb+HnP/855HI51Go1i4ez2SzzMSuVCk6cOAGPx/NYR4Nut4uNjQ387ne/QywWw+bmJpLJJL9vuVwOp9MJk8mE+fl5nD59eiCCgur1OkqlEkKhEH7zm99gdXUVyWQSiUSCC32FQoFjx47h1KlTMBqN7DbTa0FJn3MikcC9e/ee+HupENTpdDh+/DgmJycxOTkJj8ez79Mbos7EYjF8/PHHuHv37nPT1QQCAYxGI8bHx3naQvf/kzzzu90uQqEQCy3pEDhoU1KiDtbrdayurrKLxG9/+1vEYjHuPhPNTafTYWxsDGNjYzAajTh+/DgMBgOHuywvL8Pn8zFdqlarcdEsl8vZB/sQ3w10u12eLvt8PraypImPUChkaqDL5cIrr7wClUp1IA2IoSmaacRKAp9iscjEfKFQCLfbzUbjcrl837lxLwIacdVqNaTTacTjcebfPmnh0Gq1UKvVvCEJBALuJBGHs91uQ6PRwOFwcME3aF3SRqPB0erU0dgOve93N15/oVBAuVzuoxP08u7IOzaVSrElYi6XYwHCQRdAj0O320WtVuOY9Ugk0pc8RfcKiXTII1en08HlcsFms/F7fpZrvV+bHdGY0uk0YrEYEokEqtUqjEYj1Gp1X3CExWKBUqnEyMgIu38QHUCtVqPT6UAikfAGTlSU7d43PVe1Wo19VrdeVxK7eb1efu5IdHmQ61K32+W1MxaLsUiLfO/JG99gMGBsbAxOpxM6nY6fO6IvEZ2KCr1kMslC2+1AhaXFYoHX64XVaoXRaIRSqTwQulNvumrvevm0EAgEkEql7Nw0NjaGI0eOsCi02WxCqVRCqVTyul6v17cd55PGgKYz+yW+fhrQvlsul+Hz+VhUGwwGeTIhFotZ86FQKLirPDIyArfbzboJuVzOLj0kcm+1Wuy1azQaYbPZYLfbmQp3iO8GSHMUjUb7UqJpPVUqlXC73dBqtbDb7TyZ+s7EaD8PaGELBoP4P//n/8Dv92NxcRGJRAIjIyP4yU9+Aq/Xi6NHj0Kr1Q6V5yWdsmOxGG7fvo3NzU2EQqEndllFIhEmJiZw/PhxyOVy6PV6iMVi5pbl83ksLy+jUqlgcnISFy9ehEwmO5CRxuNAGzmp9XfaeEUiEaampnD8+HFIJBIoFIoX4sa3Wi3cvn0bd+/eRaPR4NEsod1uo1AoQCAQsEBxamoKs7OzaDabnFY5iIs7bXbxeBy//OUvEQwGcePGDaysrEAikcBms0GtVrMfLwU4iMVizMzM4Ec/+hG7iBxktPHjUCgUcOXKFWxubmJxcRGLi4swmUy4cOECbDYbvF4vRkdHuUMhFothtVphsVj64lfFYjF0Oh37KXc6HSiVyh0L3HK5jPv37yOTyeDatWu4fv06arUadynJccPtduPP/uzPMDs7C7PZDKlUeuAHVZrqfPXVVwgGg9jc3EQ8HodUKoVGo8HY2Bj+/M//HBMTE7Db7SyyochgWlNpLc7lcrh9+zYuXbrE/OjtIBKJcPLkSbzzzjuw2+147bXXODnvIO6tZrPJyX7EN39aSgbdF3q9npPaXn/9dZw7d66v0+z3+xEIBBAOh/Hhhx8iGo3yPtYLKh53KqoPEiTQ9vv9+OCDD+Dz+eD3+xEKhQA85KePjIzgzTffxIULF6BSqfiwrVKpoFQq+zysNzc34ff74ff7+ZDrdrvhcrng9Xrx7rvvwuv1Qq/XH/izcoj9Q6fTwebmJj7//HMkEgmOsafgO4fDgZ///OcYGxvDsWPHYDAYDqzGG+iiuffUTUVNLpeDz+fD+vo6YrEYX1i73Q6v18spS4O4ye8EEmiVSiVkMhkkk8nHjglJjEYn/JGRESiVShbm0M8UiURQKBRotVowGAzsJUmdjd7C4aAXauq2UzCASCR6JL2NRADkcqHVaiGRSJ77sya7o42NDYhEIg5WoNdBfwBwjK5er2c/40EW7XQ6nb50M3peSqUSlEolHzqIe9kbg0x8Vr1e/1zuM/v17DWbTRZRxeNxpNNpqFQqWK1WeL1ezMzM4MiRIxCJRNwt344e0culVavVO/6+rROhRCKBZDLJino6cJFojpw3JiYmnrlbv5egTjOtM7VajYWRKpUKo6OjmJqaeqxjDHk65/N5ZLNZ1h5sB+q8m0wmTExMwGw2w2QyHSh9jopUsg97FhoYrU8KhQI2mw0jIyNMZwLAloZSqZQ781qtli3maIJIv7NXp0MOE4MiFqWJQj6fh8/nw8rKClN5iH6k0WjgdrsxNzcHtVoNm80GuVzOIWW1Wg2RSAStVguVSoXTbKmbKJPJYDAYYLFYuNM8yBO8raB9alCe72ED3fuUdExTu95aQKFQYHR0lD2ZD5JJMJBFc6PR4E5AKBRCuVxGJBJBJBJBLBbD/fv3kUgkOKGqXq/D7/cDALLZLOLxOI9iabw8qB67nU4Hd+/exdWrVxGNRrG8vIx4PP4IF46I8JSk5PV6odVqce7cOZw7dw4ymYzFaU6nE9PT0yiXyzhx4gRqtRqOHz+OY8eOAfjWJmt9fZ39aymx6SAgFAoxPz+Pn//850in0/jmm2/4c0wmk31RrKlUCisrK7DZbPwAyWSy5/L07HQ6sNvtePXVV1kEVq1Wce3aNdy4cWMoo0upAKBujt/vx927dxEIBFCr1WCxWOBwOPCDH/wATqcTSqUSyWQSqVQKjUYDAoEAcrmcx/HPepIn55H9sHqsVqsIBAJYW1vjgkShUGBsbAwzMzP8/noPh8/6fnoFUEtLS1haWkI2m8X9+/fZ05j4q1QYz87OYn5+HuPj4zCZTANVMO8Ecsgg2godrLaCIn7T6TTW1tYQi8X6eNxbIZfLYbPZoNFoMDExgbGxsQMPx+l0OvD5fLhz5w42NjbYVu9pIBAI4HK5MDo6CpfLhTfffJO7pPQZy2QySCQSHiMbDAYUi0UkEgmk02lkMhmUy2UEg0FUKhX+U6/XEQgEWHjpdDoPtPlD12lxcRF+vx8+nw/JZBJKpRJzc3OwWq24cOECrFYrP290//Te841Ggw+1d+/exeXLlznoBAAMBgPGx8fhcrk4+GfQnxdCvV5HKBSCXq+HxWLhSPhDPB0KhQLu37+PdDqNGzduYH19nZ8F4GF6NAWZ0B+dTnegz8VAVpJUMKdSKdy5cwepVAqLi4sc5UoRv8TLpcWGFOFGoxEmk4lH5y86xt9LtNttLC4u4l/+5V9QKBQQCASYY0ugzjJ1B81mM06ePMm+nmfPnoVEIulzA6BxWKlUQqvVYouW3mz7tbU1bGxsMB/xIIvmubk5mM1mRKNRSKVSRCIRAOhT5VPRTAuqxWLB5OQkcy6f50E6deoUc3+TySSnxN26dWt33tw+ojdy3efz4fLlywgGg7h37x7i8Th3cqampvCDH/wA4+PjWF5e5shS6nwRV/NZi2Y62FEM+V5vfPTcr62t8VhbLpdjdHQUR44cYU7pi4AEULVaDTdv3sQvfvEL5HI5jnWnAz6NCmUyGY4cOYIf//jHMJvNMBqNQ0ETowMFFT0KhWLbopk48Ol0Guvr6wgEAo8tmmUyGTweD0wmE8bHx+H1erkDe1DodDrw+/344osvkEgkUCqVnvp7RSIRPB4Pzp49C4/Hg7feeuuRNDh6b5R6R91Y8psnPjCtZ0TpqFar8Pv9fPB0OBwHzn/3+Xz48ssv2X89k8lgbm4Os7OzmJiYwF/8xV9gbGzssVacVDRTw+vy5ct9B029Xo/R0VE+5A7qXr0dyOdbpVJBLBbDZDIN1ZT7oFEoFHD16lX4/X7cuHEDGxsb3KwSCoXQaDTMjac/B319B+bupM2p1WohEokgGo2ympLEcfl8nnmnNBIhMVMymezz3Mzlcuzn53K5nikSdz9AiUOkZKf46q1WXcS5FAqFcLlcfRsQFcLUgSaunUQi4QUJAI/AiILQm/Y3CGlGFC6i0WhQr9fZgqpUKiGXy3HxT0UdXa9sNotsNguxWMwdRbFY/Eyfc286Yu/BY+vPoKKIvmbQuodU+EejURbt0OZM741EWLQ5iUQiFItFhEIh3rxJlPO870+hUECv1z9Xl/pZQUE9crmc1w4K7Mjlctw1FwgET+38QSEMFG9brVYRj8f5mmYyGZRKJQ4hoimIWCyG3W6HSqWC3W6H2WxmjcGgQalUwmg0olqtMl2FDtPFYhHBYBAKhQJWq5Xtz4RCISvcg8Ege1Enk8k+ag+Buq0GgwGjo6N8TejZOYi1uHfNzWaz7Af/uIkSuT1QcUeHIo/Hw53kne5zeo8SiYR1NtRBo4lhqVTi69FoNBAOhyEQCNgfnag+B7HWEC2S1ltaf41GIyYnJ9mS8Un3OO3tJPImCgo9l0Qt1Ol0A/O8kJvSk2h4jUYDqVQKGo0GNpuNKQX0edGBmxyMSChaLpfh9/ufyQ/8ZQI5NeVyOaRSKV5Hen29idbkdDoPVP+wFYNxh+LhzRUIBFAsFvH73/8ef/jDH1AqlRCJRNgKiHgudKNRwZfNZnH16tW+4lGpVGJsbAx6vR5/+qd/CofDMTAPJPDwhBqJRFAsFhEOh5FMJreNbiU+j1wux49+9CP8m3/zb6BQKNi5gRTtvYUBFT3dbhcqlQrdbpeLPrp+ZNNHsccHXTir1WrI5XIYjUZYrVZUq1VMTU1hbGyMvZsLhQKPOaVSKW7duoVMJoOZmRkIhULmke4FH45cGMjmhqI7BwHEgUwkEvj1r3+NUCiEb775Bnfv3uWCmcRXb731FoxGIwwGAzqdDlZWVvDrX/+aQzcMBgNUKhX7qT7LZi0QCNgfne7bvYREIoHVasXIyAgvvJVKBSsrK2i1WpiZmemjZz1pwaWAFwrYSafTSKVSuH79OpLJJNPDthNt6fV6XLhwAU6nE2+88QYWFha4aztIEAgEcDqdeOWVV6DT6XDt2jUUCgUOmNjY2MAvfvEL2O12vPXWW3jzzTf5INXtdnHnzh18+OGHPAXM5XKoVCqPHPT1ej2sVismJibwZ3/2ZxgbG2Nno4PSnFBXsFAoYGlpCbdu3WJqxHYQiUSYnp7GiRMnYDab8dprr3FwFoVnPU0WgEwmg9PpRKfTgdvtRqPRwMbGBtbW1tBsNpkekkql8OGHH0KlUqHRaMBsNrO+4KDuo3K5jFgshmw2i1arBZFIhBMnTuBv/uZvoFarn4qO0Gw2kUql2BUK+PZAIRQK4XA4cPz4cajV6oERqRPtIhqNcljTdsjn87h69So2NjagUqkwPT3NzwsAxGIxLo4LhQKnhwYCAcTjcbb+/C6h2+1yI3R9fR23b9/G+vo60uk0u2XQNZyensbbb7/NFK9BwMBUkXSyI2usBw8ebBtbCWDbYoX4USQcJHsbjUbDXejdsinbDbTbbZTLZeTzeRbjbGeq35vi53K5sLCw8MSi8EncTfJXJfHSICi2qbChwrTVarHQSqFQIBKJsOVgvV7n5DkyzqcEs+d9H73pVttZPtHomopJiUQyMGN3et2VSgWhUAhra2vw+/2IRCKQyWTcATWZTBwJLRKJ2P4pHA4DQF+x/DhLwt5r0xtAQBOD/Rq904RBo9Gw9SQVf8lkEna7nYvbpxHqkNA4l8shFoshHo8jHo+zzoDWp62gjjZFQVut1oFV/xNdzWg0IpPJQKlUQi6Xo1wu88ZOFLG5uTmmbInFYnQ6HWSzWfj9fmQymT5dyVbI5XLodDoYDAa43W6MjY0duPdwu91m8SLFfu9kb0l0A7JfdDgcOHbsGKxWa1+3/Gnej1Ao5KKXfGULhQKnmVEzp9FoMD2NJqsCgeBAw6eazWZfEq1YLIbRaMTY2NgT9yFaU8mBgwSSBFo3iPc9SDRK2p97vYK3Q6vV4vqCNDG909tCocAe3ESB3NzcxNra2raJd72g+2sQ15HnBd0T1WqVJ8XpdJqvHfCtvkImk0Gn08Fms/WZHBw0BuMOxbfteBpl0ahjcnKSF3oaxdrt9m2FX91uF/F4HKlUil0D0uk0lpeXcenSJRgMBkxPTz9WIb9fKJVKuHPnDsLhMPx+Py/eW4tmpVKJ2dlZmEymXRGGUIc7m81ic3MTm5ubfcT7g0avMwgljxUKBTidThQKBdy4cQO3bt2CWq3muF+32/3CRX+lUsHy8jISiQQikcgjnTODwQCXy8XetYPiJUqTFuKYLi8v86kdeHjAtFgsPFoulUoolUoIh8N9WgCyHCP/afI637pgU8QpURdoxG80Grk7sF8deKPRiB/+8Ic4fvw4Ll++jK+//hoymQzXrl1j0d6VK1fYPeNJn1WlUoHf70elUuE0t0qlwgXzdmNaokiRFZLX64XNZjvw+2InUBeYaF/f//73EQ6HcfPmTXzzzTd8T6TTaVy+fBndbhdGoxGzs7NQKpWcTtpoNB555qhDJBaLMTY2hldffRVutxsGg+HAC2bg4Zp79+5dhMNhBAKBvphnADylpDAchUKBmZkZLCwswGg0sidzr7B0N9HrohEMBvH111/3rTX7jW63i3w+j2AwCADwer1QqVRPxbUmPjTRxC5fvsyJne12mw/YcrmcOfSDZG1Jk2+ih+7kZtJoNBCLxZDP5/HJJ58glUr1GQ9Eo1EkEgnWaTWbTWQyGaRSKdYWbQeRSITR0VGcP38eHo9nIGqWFwUluFarVVy9ehVXrlxBIpFgSiFdC7VajZMnT8JiseDUqVOYmprihs4gYGCK5t6YRJ1OB6vV2tclo5GYXq/HwsLCtlZInU6Ho6EDgQD8fj+SySSWl5dhNpvhcrngdDoH4gakBXx1dRWbm5vcEdsKlUqFmZkZuN3up44yfhyoaI7H4+y5uR/pbc8COmF7PB643W7U63XMz8+jXC5DIpEglUqh3W4jlUohl8vh+PHjL/w7aazv8/kQj8f7rodQKGSFt9frxcjIyEAVRr02jCsrK3jw4AEAMK/dbDbDYrFAIpGgVCqx6wQJk5rNJiQSCTQaDYxGIwcRbNf1abVayGQyPAXKZrPcPaPx2X4Wze+99x6q1Sonq+Xzedy8eRPVahUGgwEGgwEAnqportfrbHdEVmSP4/3TYcrr9WJiYgLz8/OYmJgYqM1/O5BwVqvVotVqIZ1Oo1wu4969e1wskD4inU7D5XJxQEw+n98xJr13GjM2NoZz587xoWIQqEz0HldXVxEMBh+ZsNHrp+mVRqPB9PQ0FhYWoFQqodPp9vx9UOFMRfP09DTOnz+/p7/zca8ln88jFApBp9Ph2LFj7N39pPubnDe++OILhEIhXLt2DdFolK85TRVJrLuTW8tBgegZ6+vrj6VnkPmAQCBANpvFtWvX+kSRRP+hw9DW9WSnnysQCOB2uzlWfRBqlhcFWYTm83lcu3YNv/zlL3m6R8FQwMP16fTp0xgbG8PJkycxMTFx4KFQvRiYoplGWO12Gw6HA9PT0yxeksvl3AEjVf92HK9OpwOj0Qin04l6vQ69Xs8nGBpVD5K3bq8/6NaTLL3PkZERuFwujIyMPLdDxFYMmhBwJxBPm8IVBAIBRkZGMDc3x9dNLBbDZrOx8OhZR1nkNkHCQioI6Wf32keRiG7QiiKZTAa1Ws3jcJPJ1BfYUCgUIBQKWSxZr9c5TZPcQmiMSlG2Pp+vr2imUIZKpYJIJMKjy0KhAIPBAKPRyD7I+4Xe32e32zE9Pc2fX7FYhEwm4/v7cWNQ6o7TGiQWi1mwRL7MvQfaXvtHq9WKyclJjI6Oss7goDuqTwN6rrRaLTqdDkZGRjA+Pt5HiatUKkin0xAKhUxRCYVCnCBJtAY65CqVSrhcLmg0GrhcLphMpoESd/UK0rab6tFzZDAYMDk5CZPJxOl2uy3Go0Adk8mESCTC/vD0OulZJBHZQaLb7bIYO5fLIRwOY2VlhYve3s+XvJiJtx0MBhGPx/sS3gDws0Px9oOynpJArVgssobmSVNYovPV63Xes3pDgGgqs91B83EgN54XySIYJFCXPZ1Oc8e5976gtZOEyuSANmi5G4OxmuHhxmW329Fut2GxWHDmzBnenGhcT2PWxymWJycnMTIyAofDgXv37kGlUiGfz+N3v/sdUqkUfvzjH+/zO3t29Cb9uVwufP/734fD4RhYnuRegzZ3tVqNd999F6dPn+bFh8bNJD571oKlWCwin88jEAjg/v37WF1d5U4zRcHqdDq8/vrr+OlPfwqNRsPdy0GAQCCAxWKBRqOBQqHAq6++CpPJhNXVVayurqJUKuHevXuQSCS4ffs2C7pI+EfOB9RxrFQquHz5MsrlMm+GnU4HsVgMsViM3STIPaLRaMDr9XJ3USgU8vh/r0FFrkwmw/nz5zE2NoZwOIxf/epXiEQiTEWhqOftCmeBQAC73Q6TyQSRSMTTHOLOV6tV9tMl0PheqVTi9ddfx5/92Z+xNRId7oYBlFpotVrxzjvvwGAwIBKJ4NNPP+WQgWw2C6lUim+++QYikYgPSqSLAL49dDidTvzxH/8x3G43jh07hvn5eU5HHATQeHi78CiaGoyOjmJsbAx/9Vd/xcl0Op2OQxZ2CyqVCrOzs9DpdEin01hcXOz7/5VKBalUCjabbSD84iuVCh48eMApkHfv3oVWq8WRI0f6BFqFQgErKysstnzw4AFz5QFwkJZer8e5c+fgcrkwMTExEM/MVoFaIBBAKBR6ROi6E3qj2On9kN6Efv6zgOw7ByFJdDdA0/VAIID19XXkcjnuwFNwmV6vh8fjwdzcHKampji9dZAwMEUz2UcB34olngdqtRpqtRr5fB4GgwF6vR6FQgHxeBxOp/PAF6BewRl1+LbjBup0Oja4t9vtsNvtu9axoQ2A/tBIcJA7zjS6s9lssNlsu/JzyVKJugpkVUgdWpFIBK1WC71eD7vdDrfbzUK5QQL5IhsMBlitVpRKJcTjcchkMha0AP3TjK3dK7LjEggESKVS8Pv9fXZ8wWAQgUAA1WoV6XSax2ntdhtSqRSFQuGRGPL9APFLLRYL897oOafuXW84znYg/3NyuxCJROzYs91BjIR/ZMs2NjbG/z5oC/zjQF0dosHRGFSj0XD4BLkdPE7lT77ClIA4Pj7Oh/xBKIYI1MHtTW/sPXzL5XLuNI+NjXHC316ALOwajQZUKlXfOgx8m1hIh9uDAnVOu90uCoUCarUapFIpp8yq1eo+qmQul8PGxgZbEyYSiUcSDonPbLVa4XQ6d22CuhvotdjrFeg/DXYzyZGu+9PaZQ4Dms0mH0rISYSuF90T5E6l1+thMBgG5sDdi4EpmncbSqWSLadI3HLQ6Ha7XHz4fD4sLS1hc3MTmUyGXQjIfYBir61W6yMJSy8CpVKJ6elp2O12hEIhHrdSYEzva+39+2UEceA///xzRKNR7qJQQahQKDA7Owun0wm3283RsIO2iNHr0ev1OH/+PI4cOYLx8XHMzMygXq+z1zVtwpVKhQvg7X5OJpN55HfQz6ACFXh4uFUoFOxZe5CLHDlp2O12XLx4Efl8nsV8tVoNsVhsx06zw+HgQylZolFyG9lO9bpmqNVqTkQjT/FhSjEj9HrAU3SxyWRiB6Pbt2/j7t2722otekV/R48exezsLFwuF44ePQqHwwGDwTBwzwnw7Sid/nnr/9svKBQKTExMwGq1IhwOs4PA+vo6H1QOeu0VCARQq9Ww2+0s/qzX60gmkyiVSlAqlchkMn3PPMWrt1otGI1G6PV6FuWXy2UW/5nNZkxPT3M3cVDuFfKMzmazcLlc3CRIJpP78vt77daAb9ORD/peeBHUajXU63UkEgmsrq5yFPtWsb3dbsfc3BzGx8dhNBoHyta1Fy9t0axQKDA9PQ2DwYBAIDAQD2W320UgEMC1a9fg9/uxtLSEYDDYx/MihxByyzCbzbtqxUNFc7PZ5AI+kUgglUr1Fc30el9mdDodLC4u4v/+3//L04jewkqlUuHIkSNM+dmPaOjnBdFUzp8/j1arhampKczPz6NUKsHv93PXsFgssgfxTkUzddy3otvtQiaTwWQy8cZnMpl4EkK2UQfxrFHojFwuh8Vi6UtZq9frSKfT2+oZBAIBTCYTx11LpVIIBAI+UC4tLeEPf/hD3/fQaN3r9fJhahh4zNuBOukk8HI6nRCJREilUqhUKrh///62RTPxLWUyGWZnZ/GTn/wEJpMJ8/PzA9dh3ortLCXp3/erq0tFM1lrkvUjHdAGZe1Vq9Ww2Ww8vWo0GshkMmg0GhAIBFheXubPmqxerVYr89udTifzWMvlMuuTzGYzpqamMDc3B5VKNRD3CwWtAA/9l0dGRviwQOFPew0So9JBhH7/QfPaXwT1eh35fB6pVAoPHjzA4uJin/Ug8PB922w2LCwsYGRkZKDFjy9t0UxjDSKR00JJwq+D8Gymh44ERlupGUQHUKvVMBqN7GSw20KaXv/HQUu22w+Q8K9SqSCXyzHvlT4LEiTQ50AP8CAs7I9Db+eQNialUsm+mLFYjOkU9F7UajVUKhWUSiW8Xi8vVDu9V/JplUgkPEIjOy65XI52u418Ps8HwP0uJntFOMTfFolE7Eu+3dcTrYPsxgj0nPYeaim0xWw2w2q1DsV98SzY6k+7U6EgEomY102HJwr8GMbrQbam+5lMR/sTHVwGTfAkEDxMJiTnIrPZzG4H+Xy+7+vo0KpWq+F2u6FUKrnZs9XHnfY44usO0oGT1gCVStUX2Uz0NbLbfBrQPaVSqfpsCvP5fJ8Ae7vXIBQKUalUkEwmIRAIDpxW+rzodrsoFouIxWLsV03ORMDDNVqlUvVFzlssloHsMBNe2qK5F3RzkiKcTrz77fvXu3hsx1VSKpU8rjp69CiOHj26p0Kax/GmXjY+VS/K5TLu3r3L3sbkFkD+ocTT83g8OHbsGGZnZwfOMWM7UMEoEongdDphMpnQbrd5xHfjxg3cuHEDtVqNF+bR0VG2NPzxj38Mh8PxxN9BFBXyIyW7OpFIhHg8js3NTSiVSoyPj7+QPuFFQSE0nU6HkzG3Q29ioEAgYIEkWRrSJqlSqaDRaOB2u7GwsIAjR46wa8iwgwQ5+XweS0tLCAQCiMViO14zor9ZrVYsLCzg2LFjAyX62wk7rWsikQgjIyM4deoUnE7nvt+3va9pUNZdkUiECxcuYHZ2lg/dlUoF9+7d65tACIVC1pro9XrMz89Do9Hg1q1buH37NoBvDwhGoxETExPwer3MiR6E90ogypHH48Ef//Efo1wuY3l5md1jrly5wh74T4JQKMTMzAxmZmYgkUigVCohEAhw7do1XL9+nSlzW+1NiZ4RDodx6dIljI+PY35+Hkajca/e9p6AOPqbm5u4cuUKAoEATykIKpUKx48fh9lsxltvvYXvfe97rI8YVHwnimYCdY62sxs6KPQuGGKxGBqNhv2oyRFir39/72L9XUCz2UQ2m+WxaK/vLDkykI8tfRbDAvoMieZDaLfbWF1d7UsyI9GX0+mEx+PB7Ows3G73c/9uWiSJ/3uQSWYAuJjd2kF+HHpTzMrlcp/lF218KpWKJ0GDFpP9vKCmAiWXkZPKTqCDEk0a9mOt2i1st95RF1Sn00GtVh/Yexmk9VggEMBsNsNsNqNWq8FoNLLvcDab7SuayRbVYDBgamoKarUaPp+Pp6lUNFP6HwXFDNo9Qx1hpVLJkeekBZFKpVheXn6sfWUvRCIRLBYL3G43pFIpHxA2NjYgFotZiL6dEQA5+CSTSRgMhqfubg8SaC3N5/OIRqNIJpOPHBKkUikMBgMsFgusVitsNtvA3RNb8dIWzVs9OalDplAoBs5I/RD7AxrRp1Ip3L59m9OqaPRFnqMnT57EuXPneBMYZtBYsV6vY319HZcvX0ahUGCXiZMnT+IHP/gBFz4vCrlcDr1e/4h/6zCABIOlUglXr17FpUuXkEwmUSgUuHvfK1QhAeCwgg45nU4H0WgUsVgMm5ubuH//Pnw+HzsfkDipl+4mk8mY7jYoDYgXQbfbRSqVwtLSEkqlEhYWFvbt95Ll4yA7GJHbh1KpxMLCAsxmc99r1Wq10Ol0qNVquHnzJsrlMq5cuYJbt26hXq9z2uiZM2fw7rvvMg1mUEFuXmKxGKOjozwFdrvdLNR8EkjcZrfbWQPQ6XSQTqf7hJ+9ImOiDtbrdWi12oHx6n5WtNttfu0+nw/Xr19HLpfjgzhNAQ0GA+bm5uDxeJ4qaXIQMFy72jOAioVqtYp2u838XbKGOsR3D0TPSaVS+Oabb7C8vMzpguT/rVAocPLkSfz85z+HSqV6KYrmWq2GcrmMjY0NXLlyBUKhECMjI1Cr1Thx4gS+973v7YoXKHH4KLJ70DsGW0FpeKlUClevXsW//uu/8rUjl42TJ0/yYWrY1xEqmpvNJmKxGBYXF7G5uYl79+4hEAhwl5AEktSFowIAQJ+l3zCj3W4jkUhgaWkJrVbrqbuJLwLS2dD0c5B5qxTG0u12YTKZcPTo0b7/T8WOz+fDr3/9a2xsbODu3bu4f/8+U7X0ej1effVV/NEf/dHAhwAJhUIWulLXudvt4sKFC890sNlKB2q1Wkgmk0ilUohGo4hEIn1Fc6fTQalUglAo5PTWx2kLBhWkjSiVStjY2MC1a9f6YutpamcymTAzM4OpqamBStl9HF7aornRaHCCVT6fP9CbjkafjUYDuVwOiUSCebT7CUp2Ir/NRCLBsZb0WsgSiDx/yf922EGChHg8jng8jnw+j1KpxD6o1EkhSgbZqQ3ywv40oMWrWCyiWq2i0WhAoVBAo9HAZDJBrVbvqhiUDh/DaMFGMa/RaJTDUEg4KRQKodPpYLFYYDAYhrrDTKD3SxaEGxsbCIfD3Gggig/FSstkMvY0p64ZJSe+DGi1WqhWq/ynXq+z+HO3QWtxs9lEPp9HPB5/hO85iHgS37rb7aJarfLa2m63IRKJYLVaOQFw0AvmrdhNjjl5oxsMBhSLxR2vw7AVyVvRO+knCkrvOkG8ZZpQEF1nGPDSFs2ZTAa///3vsbi4iFwud6A3YbPZRCKR4HS2L774AoVC4anHPLsBClTJZrO4du0aUqkUvvzyS1y/fh21Wg3VahUCgQA2m41Tms6fP4+JiQlotdqhK4C2otPpYHV1FVeuXEEwGMT6+jri8Tg/yGq1GvPz83A6nRyhO2yL+3ag7mk6neauukwmw8zMDFwuFyfg7RbIiYImO8OEQqGAr7/+mtMUq9UqJxyq1WpMT0/j9OnT0Gg0bE01zMjn87h8+TJisRguX76Mr7/+GtVqFdlslkfLo6OjcDgcuHjxIsxmM3+dQCBgK6le55lhRqlUYg5pKpVi7m1v4t1uodVqoVgsolKpYGlpCb///e/7wmSGFUR/i8VibGGq0+lw7tw5TExMYHJycii6iXsF4olPT09zN/tlBB3IM5nMIxaKdA0mJiYwNTWF8fFxeL3egcxA2A4Htqv1igh280KRU0atVkM8Hkc4HEan0+Gx4kF8KNSRqdVqnDxHBvD7BRoBkrggHA4jHo8jnU73ReLSCdBgMMBsNsNisQxd8bMVdGDI5XIIhUK8oNMIlvjuJpMJFosFWq124KyQnhftdhulUgn5fB7VahXdbpft4kwm0677Kj9PlPmggPxYY7EYisUims0mZDIZ20bpdDr2qB7mZ4J4tLRGkid1IBBgqhIJ/cxmM+x2O6anp2Gz2eD3+6FUKpmWQd3EYcFO7hnUCaMGAkWwy2SyPXF4oCh7sr1MJBLcZe4VAg6aDd1OoHuKHCFoWkGUSEr/02g0Q/F+9hJks7ab+QuDBJqi0ISzd3pCrksKhYLDb9Rq9VA1Ifb1E6PTBtkalUoljI2Nwev1vrBvMj20a2trWF9fx+rqKvsCulwueDweHDly5EA+HCK8KxQKTE1N4eTJk0gmk7hx4wbq9fqe//5ut4tIJIJgMIhQKITf//73iEQi8Pv9aDabfQrnXg9niUQy9D7ONHouFAq4efMmrl+/jnw+j3K5zGb8FCYzPT0Nr9cLq9U69As7FTW9FmLZbBYqlWooeWR7CXLVaTQafdxSqVQKvV6PhYUF2Gw2jI2NQaVS7Qr/+6DQ7Xbh9/sRCAQQiURw/fp1hMNhbi7odDrMzs5Cr9fj2LFjmJ+fh8FggMfjYe/dYb1f6POk1MOtqFQqzOH+6KOPcPv2bbz66qs4deoUFzq7dSAsFAq4ceMGYrEY/H7/I7xwtVoNk8kEg8Ew8IVVt9uFz+eDz+fD+vo6fD4fkskktFot3G43JicnMT09jbGxsYEPvtkP5PN5hEIhDot5mZDJZJDNZhGJRPCv//qvCIfDWFlZQafT4WAspVKJ06dP48KFC7BarQNtL7cd9v1ppI382rVr7APaayL+vKBOwerqKj799FNEIhEkEgnUajXYbDacOnUKHo/nQPi5FAjRarUwOTmJZDKJQCCA5eXlbZPXdhtUNN+4cQN+vx+ff/45wuHwI2pt6mqIRCL2rh30BftJqFQqWF1dRTwex61bt3Djxo2+hCW5XM5c1ampqYGLdX1e0HQjn89jeXkZDx48QCaTgVqthtlsxszMzEClcR0ker2syX4Q+Fb8dOzYMXi9Xg5/GdaCGXh4XwQCAVy+fJmL5ng8zlMIrVaLV199FR6PBydOnMDx48chlUqhVCo5Wn5YQeuw1WpFKpWCUCjs65KTnVq1WsVvf/tb/qzpc99NcWuxWMSNGzewsbEBv9//yDqsVCphtVqh1+sHfg3udDrw+Xz44osvEAqF4Pf7kUgk4Ha7cfr0aXi9Xnae+K6vNd1uF4VCAaFQqG+68DKg2+0im81ic3MT6+vr+PTTT+Hz+VAul9Fut6FSqeBwOGAwGPDKK6/gvffeg1wuH9jkv52wr09jvV5HrVZDLpdDLBZDOByGz+eDw+HgZCkafT7N4kSUg3q9zoIWn8+HSCSCTCbDsZhGoxEOhwNms/lABTy9Rel+jN1arRaL/sLhMPx+P2KxGGq12iPUEBqra7VaWK1WTn0bVvTSdGjkXigU+tT+AoEABoMBY2NjGB0dZQHgsHCrHgeiZKRSKWQyGRQKBUilUjidTthsNuYeD/qGvB+oVqsoFAqcDkm2SEqlElqtlj1EBy2I4VlAzwJRUMLhMBKJBMrlMhqNBlN2jEYjbDYbHA4H9Ho9pzqSvRwdLEjgNUxUHJlMBrvdjlarhUwmg1gshkajwbakBKI0dTodRCIRPHjwABqNBtVqFUqlEmq1mu+FZ70fyP4xl8shm80ik8mgWq2yGFmpVEImk8HhcMDr9cLpdA4s75XG8I1GA+l0mqlvND0ldwS9Xv9SrKm7BZqKvwyuM72gonljYwPBYJCTdon6SdQMciWRyWRDObXbtx2z2+3yQrWysoIvvvgC6+vrCIVCuHv3LhwOB9577z3Y7XZWVD4JlUoFxWIRkUgEv/nNbxAOh7mrBoDtr44dO4a33nqLvSK/KygUCrh+/ToSiQT+8Ic/4PPPP2cOXS8o/EEmk2F8fBxvvvkmrFbrUF8r4pAnEgncvHmT7zWiodAY9vTp0/jjP/5j7r4OQ2fnSaBu4t27d+Hz+bC4uIhQKIQzZ87g1VdfhdvthsPhGPqu6W6g2+0iFothdXUV6+vr8Pv9iEQiMJlMGBkZwcTEBE6fPo3p6WlO9BpG1Go1BINBXhM+++wzTj1sNBoYGRmB2+3G+Pg4zp07h7GxMWi1WigUCi64a7UaisUiRyir1eqhOlgbjUZ8//vfR7FYhMFggEAgQDabxYMHD1AoFPjryOWoWCzi97//PXw+H4xGI44dOwaj0YiFhQUsLCzwoeFp74lut4tEIoFwOIy1tTUsLS1hc3MTmUwG3W6XUxYNBgO+973v4Z133uEAmUEEif7K5TJu376Njz/+GJVKBYVCAUKhEA6Hg9Pehomzutcg7vcg+3I/DzqdDr755ht88MEHyOVyCAaDqFQqfDgQCoXQaDQcIER5GcO2B+1rddBLDk+lUojH42x5Va/XkclkuANGkca0IJGnZe8/k2AjnU5jY2MDPp8PgUAAiUQCSqWSU/VMJhNsNhvkcvnAL/IkWmu1WtwBoq70kxZnuj50iq1UKkgkEohGo8xb7BX9EUjFS8EUNpsNRqNxqItHGrlXKhWk02nE43FWc/dyt00mE3uIarXagY8Bfhp0Oh0Ui0W2FCwUCqhUKlAoFBgZGYHNZntpRSjPAur40D1CSu9KpQKz2QyNRgOtVguTyQSTyXTQL/eFQFOnTCbDay91PalgM5lMLP41m80shu0VMlO3mtaiYeo0S6VS2O12GAwGOJ1OWCwWAOAuaO/+Qt3SRCKBVqvFThqVSgVutxv1ep2/72mmhr33WiqVQjabRT6fRz6f5xG9SCTidDS73Q6Px8PduEFDr9grn88jnU4jGo2i1Wqxr7darYbRaIRWqx2q+2QvQfcB6ShetqKZimXymO6tNchRif7QxH3YsG+7pkAggFqthsPhQCaTgV6vh0ajYfPrXC4HsVgMi8WCubk5zM7O8sMnEAhQKBSQz+fZeL7ZbLKwLZ1O45tvvuFoT6vVCrvdjvfee49Tz4Zh7F6tVuHz+ZBOpyEQCOD3+2EymXDq1CkYDAYeaWyHZrOJYrGIer2OtbU1rK6uIpfLYWVlBfl8Hpubm5zeRd0RuolNJhNee+01WK1WnD17FuPj41AoFAM7FnwSaKoRDoexubnJTiE0clUoFOyS4Xa7YbVaoVKphr6IJBurarWK1dVVXLt2DcVikdP+ZmdnsbCwwB3E7zLIH7dareLOnTv47LPP+IAhFAphsVgwMzMDr9c71Acp2qATiQQ++eQTbG5u4u7du0wJoMPTwsICvv/977M3e697TKFQwOXLl5FMJnHv3j0kEgmo1Wp4vV4YjcahcUSg5oBYLMbRo0chlUoRCoXQaDQQDoc5pa0XJA4kzrdKpUK5XEYmk4FOp8PY2BhPMHcSNBF9oVKp4MqVK5w0GY1G+woLvV6PN954AxMTEyxaH0QhNom9otEoPvvsM0SjUdy4cQOtVgs6nQ4nT56E1WplbrxSqRzIwn8/QQfPer3OE/FMJrMvITp7jV77RHLLaLVajxwIWq0WO9LQ10ul0qGjaOxrlaDRaCCTyZBMJrlFXywWEYvFEAqFEI1GoVQq8fbbb7PakkbIZItUr9eRzWZRrVaxsrLCCU5kcUMm6pOTk/jxj3+M6elpaDSaoRA8UeSkSCRCKBTCpUuXMD4+DrVazePSnTaoarWKcDiMYrGITz/9FJ988gl7rlKXiDpEdBChG5YOGBMTE/B6vRgdHR0aq6Pt0MutIo57PB7nMZFUKsXo6CiMRiMXzVKp9KUomrPZLIrFIlZXV3H16lVIpVK43W6o1WrMzc1xsfBd38SazSbS6TTy+Ty++eYbfPbZZ6hUKpz+R16qIyMjQ100U+JfMpnEJ598gjt37nDHWCqVcgrm8ePH8dOf/pTdZHo7g4VCAdeuXcP6+jru3buHVCoF4KH/rs1mGxohD8V/A8D8/Dymp6fZbUkikaDb7T7i6U/iwEwmg0gkApFIhFwuh3g8Drvdjna7DZvN9lg7tUajgWg0imw2i6+//hq//OUvOfihl0ut0+nw+uuv48SJE1AoFAN53/WKvZaXl/HP//zPWF1d5YaMXq/Hm2++iYmJCRw7dgwej2eo95LdQqfT4dCcSCSC5eXlPtvTYUar1UIul0OhUEChUNixaKYJqFgsZu0IcfkPi+YdQF7JKpUKXq+XT/jNZhMikYhHhcQxpEVdKBQikUiwRQt9MLlcjtNm6Ovsdju8Xi/cbjd0Oh2nkw3KQ9tLhJdIJJBIJNwNIrFNb2cjnU5jZWUFpVIJKpVqx+K/VqshmUyiXC5zCiKdbGlhpvhbi8XCrhE6nY5DLsgWb9gXuW63i3w+z2InSv0jkPWNw+GATqfbN2HmXqPZbCKTySCTyaBcLkMkEkEul8NsNsNkMvWlcQ37e31RdLtdfj5qtVrfc0IdSQoxGaYFfStKpRKy2SwLpZvNJrrdLkQiERQKBZxOJ3uyS6XSPo4hFYzJZJKjf2u1Gn8vOVEMQ0NiK+hQQA0JkUjE04ftxIHkzkQxx4lEgt2aKDgoGo1uS6Mrl8vw+/0oFAp9QmziRFutVpjNZszNzUGn0w20Rzy5P/QKSVutFlMhvV4v7HY7zGYzVCrVS7Gu7haImkHmBWT3+jKAarsn3be9HuQ7eaYPOva1aKbixOVy4c///M+RSqXw2Wef4Xe/+x13RfP5PL766it88803zDsVCAS8wdHi1W632URdrVbD4/FArVbj/PnzOHfuHEwmE9xuNzQazUBteiqVChaLBeVyGTqdDoVCAdVqFZVKhd8TpW0JBAKOWCW7o53eC/HwOp0OU1noWpHoTS6Xw2Kx4O2334bdbsfRo0cxOzvLdAXizw3bTbwV3W4Xa2tr+Oijj5DNZvtEPsDDicdrr72GyclJjI+PQy6XvxSLe7FYxK1bt9gDlCx+zp8/D5fLhcnJSR6FDft7fVHQSJE680TdoaAb8iY2mUxDS1PqdDpYX1/H7du3sbGxwb71ZClpt9vxk5/8BF6vF8ePH+fYeOL3BoNBrK6uYnNzE7du3YLP5wMAaLVaOBwOvPLKK5iamoLL5Rq6+4nWUofDgZ///OcolUr47W9/C4lEwuLA7bycu90uwuEwMpkMJBIJbt682ecGsF0RQGPpVquFVCqFSqUCkUgEtVoNuVyO999/H3/yJ38CvV6PiYkJXo8GEZSF8Nvf/hapVAqFQgFisRgnTpzAm2++CZvNhnPnzsFisQy128xug/biVquFSqWCfD7fZ285zKAmQ7PZZK7yds8BTbdJW7ZXEfV7jX0tmulCKhQKeDweGAwGLC0tQavVspK53W4jlUohmUxu+70AeEGhAA6ZTAadTgeDwYCRkRGmMgwiT1UikfBIlLrNvV6NW9O1KKr2SdhOUNB701JXW6PRYGRkBB6PBzMzMzh+/PjALtDPAxIA5nI5RKNRlMtlFvVQsSiTyWA0Gnlhf1lAlIN4PI5arcZpdsTxpwPk4UbW32mmjk+r1eIuH/mHDnOnudvtolQqIRaLIZ1Oo9FosFWcRCKBXC6Hw+GAx+NhtyIKOmq32ygUCojH40gkEshkMsjlclCr1VCpVBy+YbFYhtZVhPYit9uNZrOJ+/fvw2w283+nJg39oWtDHXjaswD0Tau2SxukDj8VTjT1UyqV7IlNYuxBLSToGcnn84jFYrxfC4VCjkUmISnZzB3iW/TeS3QfbIfeZuEwiOW2ZjvstMeQ5VxvaNow7kcHUlFKJBIYjUaoVCqcPn0aYrEYuVwOy8vLPPoJhUIPX+D//+KqVCoelzocDqhUKhiNRo4CttlsUCqVGB8fh9Pp5FHjIIG4knTzuN1uNBoNFqntlZJWJBLB6/ViZmYGIyMjeO211+B0OuFwOIbuhn0cstksrl+/jmQyiVu3biGTyfRRM8gdwOl0olKpIB6PA3hIbaF7aBB5hE9Co9Fg/92VlRWsra1BrVZjZGQEo6OjcLlccLlcfDg9xMPPPBAIcNew2+2yP65Wq+XrRgmAwwoqdIhzKhAIoNfrYbFYYLFY2GGHeM+1Wg3RaBSVSoUFxeQn3O12MTExgePHj8PtdsPtdjOla1hBGz4AHDlyBO12G7lcDnNzc+w2kk6nUS6XEYlEmA/eO/UUCAR8belnbgUV3NSVMxgMOHXqFMxmM0+7Btl+q1Qq8b1w7949+Hw+dDodGAwGSCQSTE1NYX5+HhqNhq0IB/W9HBR66QhUZG4tnCm1UiaTYX5+nnnhg9zcEYlE3FygQ992FECVSoW5uTm4XC643W7O5Bi2PelAimaxWAyDwYBOp8NJfel0Gna7HclkEtevX0c6neaNjLjKdrud3SRMJhOP16lrQh/WoHI2qWg2mUwQCARwuVyoVqtshbaXv9fr9eLChQtwOp149dVXOSp6EK/T8yKbzeJ3v/sd1tfXsbS0hHQ6zZ17kUjE4i6dTodyucy2W/l8HgaDgcMchg2NRoOtF0kce/LkSczMzMDj8cDtdmNkZOSl+qxfFPV6HaFQCOvr631rjdPphNlshsfjgcvlGspFvRek2u+1t9Lr9XC73dDr9cxZTqVS3Dm9ffs2stkswuEwIpEIT2/EYjHGx8fx/e9/H2azGS6XC3q9/mDf4C6AOl7T09O8JtPBYXV1lXnL7XYbmUwGAHh6RUVPb8PjcfcLUeBMJhNOnjwJr9eLsbGxgaZkAA+L5jt37nCuQjAYhEKhwMTEBAwGAyYnJzE/Pz9Q+qFBA+235ArWS58kUEOR3I7Onj3LDcZBBTU1qQ4jfvNWqFQqzM7Ocjok1XbDhgPlLvQKbjqdDkZGRqBUKvuKSDqxkleqTqeD0+mEXq+HXq9ny6ReruagP7QCgYBHoyTgk0gkzNV+UahUKrYr0mq1HFpCqYjDerM+Cc1mE7lcDslkkjmqBFIv53I5tFotKBQKFqoYjcahHBMB347g4/E48vk8U5Woo04Cr2F8b3sNslykZ0EqlcJsNsNutz934tugYbvpVb1eR6FQQLfbRSgU6tuQyUOfvL1JpG0ymSCXy2G1WnkdHjTq24uCdB8CgQA6nY4TBBuNBh+0c7kcd5+Jq0xaFCqkKUCp9+eSwNpgMECn08HtdsPpdA580mStVkO1WkUqlUIkEkE4HGaRsVKpxMjICMd9D2qzahDQWyxbrVZMTEygWCwiFAqhWq3y10kkEpjNZhiNRv57WJ41am4eP36cg5B6fZo9Hg+cTiezA4b1XjnwT4LEECaTiSNO3333XfbHpA2NOLkUNUoLXK/4Ypg+BL1ej7feegvHjh1DvV7HysoKL7ovUjgLBAJOMjOZTHjllVdgNBoxMTGB8fFxtvF7GVGpVLC8vIzbt29va+UTj8fZD/zWrVuQSqV4//33MT8/zwX0sKHb7cLv9+PatWvIZrPsZnD27FlcvHjxsf6x32WQAwR1SICHa9GpU6cwOTmJ0dFR5rEO432xE8idiJ6Du3fv9nWF2u02yuUyW9WR9+7p06dhsVjw2muvYX5+nvnyLxPIdlIul0OpVKLT6cDlcuHUqVOoVCp4/fXXUS6XEQwGEQwGmVKYzWYRi8UQi8W2/blyuZx1NvPz85ibm4PZbMbp06cHuoDodruIRqPw+/3Y3NzEp59+Cp/Px3HiTqcT7733HsbHxzE9Pf1SPSe7DRJ+KhQKvP7661Cr1djc3MQHH3wAv9/PX6fRaHDy5El4PB688sormJ+fZxexQYdIJMK7776LhYUFpoX1HtplMhmsVmtf3TaMOPCimcjjAF7aYm47SKVS5mH32vMIhcIXLprJP9Vms2FqagpWqxUOhwMWi2XH0cnLgHa7jVKp1BcT3vtgkk8m8G2XsVqt8oFsGBf9breLYrHIiYcKhQJSqRQWiwUOh4PFpofoB7lk0EEceHgwJ0GxTCbj0fuwHch70dtNp/fQ2xXdit6EO7pGJCalNYQ6X8P4vDwOxDUloSTw7Z5Ur9ehUChQrVb5mSKrOQDchd7aZQYApVLJ9K+RkRFMTk7CYDDAZrMN9IGWrE8pRTKRSCCRSLBtqlqthtPp7BOSHmJ7UKeZLAYnJyfR6XQ4u4JA9QDZ9ul0uqF5zgQCAdcdLzMOvGj+rkIsFjO95Hvf+x4sFgt3d15EECgQCDjgRaVSYXR0lEWUh+Ozh1CpVHC5XNDpdJiYmBjKRMBe94dgMIjbt29DqVRiZmYGer0eHo+Hu6jDsujuJyQSCSwWC1qtFo/HM5kMfvvb3+LmzZs4duwYjh49Cr1ej9nZWWg0moN+yc8MoVAIj8eDc+fOYWVlBZcuXdqxG0r+3RqNBl6vl60xTSYTjEYjFhYWYDAY2NP4u7aOENWNaBYmkwmVSgVjY2OoVqscib1d0Uze+OSL7XA4hiZxNZPJYHNzE6FQCKVSCc1mEzqdjifDdrudA26+a/fE80AgEMBgMAB4aN347//9v+9LodTr9VhYWIBer4fNZju8pgOI4akSXjKIxWLodDp0u1288847ePvtt3ftZ29nz3f48H0LhUKB6elp2Gw2jI2NDWUiYKfTYZ/yYDCIO3fuwOVy8biUiubDgnl7UDdeIBCwq0gqlcLHH38MkUiEQCCAbDbLQsphLJpJbEw6BqVSuePX9gaWnDhxAjabDUeOHMHMzAxUKhWcTif7OH8X7ymRSMRdYaPRyI0N0k08qdHRux4/zmVjkEAJiZubm4hEIsxxVyqVsNlsXDAfFnfPBpo6eL1enDhx4pH/3zvpObyug4fhqRJeUvSOBA+xt1AqlSxm8nq9LEp4nLfkoKJeryMcDqNQKKDVavHmZTQa2QVkmN7PfoPskZRKJXQ6HYxGI9uGUSfRaDRCq9UO9bMpEonYxurYsWPbdjfJu1wqlbL+gdL+qLtKh8rDe2r7psTLCuL10z2iUqlYyOZyuQ7XmecE3UMv+/3zMuKwaD7EdwKU/jU6Oorx8XH86Z/+KbxeL7RaLS/8w7T4p9NpfPjhhwgGg5BIJHjvvffgcDhw7NgxOByOQ8eMJ0AikcBkMkEqleLIkSNIJBLodDrsn/r666/j7Nmz0Gq1Q621IM721NQU/uN//I+oVCrbfh3pKaijSvZRZCF1aCX23YZMJoPJZIJSqcQbb7yB999/n116DnGI7xIOi+ZDvDQgscV23TTia1osFthsNrjdbng8ngN4lbuDRqOBZDKJaDSK0dFROJ1O2O126PX6oS7y9gtkd9lqtZg/2O12WQRGugCytBxW0GFQo9Fgdnb2oF/OIYYMFH0slUo5tMRut3MgyzDwsg9xiN3E8O4GhzjEFjidTvz93/89otEogEc5g73CJhJjDCuMRiPeffddZLNZ6PV66HQ6jjg+xJMhEomg0+mgVCpx4sQJmM1mtrgUiUQc3EECuUMc4rsGCnwRiUSo1WrIZDJot9tYWFhgkfHh9OEQ3zUIunuV3XyIQ+wztktY6kUvBeNlKITovX6XOJZ7AYo47sUh3/AQh/iW00z/DHxL5TnEIb6LOCyaD3GIQxziEIc4xCEOcYgn4PC4eIhDHOIQhzjEIQ5xiEM8AYdF8yEOcYhDHOIQhzjEIQ7xBBwWzYc4xCEOcYhDHOIQhzjEE3DonnGIQxziEIc4xB6hVqshFouhVqtxiAwFzkgkkoN+eYc4xCGeAYdF8yEOcYhDHOIQe4R4PI5//Md/RDAYhN1uh91uh9VqxYULFw7DQQ5xiCHDYdF8iEMc4hCHOMQuo91uo91uo1AoYHNzE2tra6hUKmi1WgAeBhQd4hCHGC4cFs2HOMQhDnGIQ+wi2u02Pv/8c3zxxReIxWK4ceMGstksgId+x2Kx+LBoPsQhhhCHRfMhDnGIQxziELuIdruNL774Av/5P/9nNBoNtFqtvhAitVp9WDQf4hBDiMOi+RDfGdC4tFeY02q1eEMTiUQQCoUwmUwwmUwQiUSQSqWHUbGHOMQhngq0thQKBcRiMTQaDTSbTf7/ZrMZ09PTGB0dhVwuP8BXeoi9AiXTdjod5PN5FAoFtFotlMtlpuYAgEQigU6n47+1Wu0BvupDPC0Oi+ZDfGdQq9VQLpfh8/nwj//4j/D7/cjn8ygWixCJRFAqlZDJZPjRj36EH/zgB1CpVLBYLJDJZAf90g9xiEMMAUj0t7m5iRs3bvQVSWKxGGfPnsW/+3f/DlqtFjab7QBf6SH2CsRjr9VquHr1Kq5evYpcLofl5WXk83n+OrPZjNdeew0WiwVnzpzBq6++ehhPPgQYiKKZkrz3qqPX7XbR7Xb7xmOH+G6h2+2i0WigXC4jk8ngwYMHWFlZQSaTQS6Xg1gshlqthlwux+zsLC9uRqPxgF/53qLT6aDT6fAzshVCoRACgYD/fpnQ6XT4706nw+8TwK69371e2w4xGOh0Omi32ygWi9jc3MTy8jLS6XTf5y8SiWC1WjEzMzOUVnPbrQ/0DO2E3vteIBD0/Qz6fy/Ls0HdZdpnqtUqYrEY1tfXkUwmcevWLeRyOf56m80Go9GIcrmM6elptNvtl7pGoQ78TnvNTqBrQmvyQV+fAy+ai8UiisUiJBLJnvhWdrtdpFIppFIpSCQSmEwmyGQySCSSoVy4DvFsaLfbqFaraDQauH79Om7cuIFIJAKfz4dsNot6vQ7g4eJfq9XQ6XRw584dyGQyeDwevP/++1AqlQf8LnYXtLC3Wi08ePAAq6urqFQqiMfjqNVq/HVarRbT09PQ6XTweDzweDwHvmDtFiqVCgKBAEqlEjY2NuDz+aBUKjExMQGNRgOPxwO32/1c75doQK1Wi90S5HI5ZDIZhELhIeXnJQOtGXfv3kUgEMC9e/cQiUT44K3RaDA1NQWTyTS0z1C9XkcqlUK9XodUKoVEIkGtVkMkEkG1Wt32e+ieF4vFUCqVEIlEaDQaaDQakEgk0Gq1kEqlUCqVUKlU+/yOdh6dzeMAAQAASURBVAdE92s2m1hcXMTy8jLK5TIikQgqlQo2NjawubmJcrnMa6tMJuPp5fLyMkKhEKxWKxwOBzQaDZxO50tJ3UmlUvjiiy+QTCZRLBZRKpUe+/UCgQAKhQIKhQIGgwGvvPIKDAbDI2vpfnfnD7Ro7na7KBaLiMViUCgUUKlUe1Y0r6ysQKVSQSQSQaPRQKlUHhbN3wG0222USiVUKhVcv34d//zP/4xisYh4PI5KpcJf1+12Ua/X0Wg0eNM7duwYLly4AKfTeYDvYPdBB4RarYY7d+7go48+QiqVwv379/s6IU6nE3/0R3/ExePzFpGDiEqlggcPHiAej+N3v/sdfv/738NqteKdd97ByMgIhEIhXC7XcxfNjUaDC41GowGtVgutVguJRAKxWAyRSLQH7+oQB4FOp4O7d+/igw8+QDqdxsrKSt8YXqVS4cSJE3C73UNbNDcaDUQiERSLRahUKqhUKmSzWdy8eZNdQXohEAj4npfJZDCZTJBKpSiXyyiXy1AoFHC5XFAqlbBYLFAqlUN5XTqdDsrlMiqVCq5evYpf/vKXyOVyXChv11mVyWTQaDRotVpYWlpCt9uFy+WC1+uF1WrlwvBlQyqVwq9+9SssLi4iFoshHo8zA2AnmEwmGI1GjI+PQ6lUYmxsjPnfB9X4PJCimbp/zWYToVAIa2trkMvlKBaL/BBZLJYXOkFQsdRoNBAKhbC6ugq1Wg2RSASdTgeHwwGFQjGUD+puoVQqoVwuo9FoIJfLodlsQiqVQi6XQy6XDzWft16vo16vo1gsYm1tDdlsFsFgEIVCAdVqlbmGNHXodDqo1+vcIaRO7MsEWtzr9TrS6TQqlQrC4TCSySRyuRx35AmVSgWRSATdbhderxfxeBxyuRwajQZi8YEPqZ4LhUIBxWIRiUQCgUAA8XgcqVQK1WoVxWIR2WwWMpkMlUrlmUaIwLc0sHQ6jUQiwdevXq/D5XJhZGSEuySHRfPwg0R/pVIJgUAA6XQahUKBnyGpVAqZTAaDwQCXywWPxwOtVjuUe45QKORusEKhgFwuh1qthtVq3bHAU6lUUKvVkEql0Gg0kEqlEIvFfF2oC53L5ZDP54dqzyGBX6VSQSgUQrFY5OlltVqFTCaDQCCATqeDTqeDQCCARCLpoxmUy2WUSiVUq1UkEgmsrq4in8/DaDSiVCq9NOJAmi5Q86pWq/H+3O12d6zzhEIhKpUKJBIJUqkUT0SpPlQqlRgZGYFCoYBQKNy3jvOB7Hy1Wg2bm5vI5/P45JNP8Omnn0IkEkGv10OpVOJnP/sZ3n///RfqyJTLZSwtLSGTyeDjjz/Gxx9/DK1Wi2PHjsFkMuHdd9+FzWb7zm5enU4HGxsbuH//PuLxOL766iuk02mMjIzA6XTC5XLhZz/7GUZGRg76pT4zaLpANIwPPvgAwWAQiUQCiUQCnU4HzWYTAoEAer0eVqsVtVoN4XCYi6VnLZgGHZ1OB36/H8vLyygUClhbW0M+n8e9e/dw//59NBoN1Gq1vg09n8/jq6++glwuR6PRQLfbhcViwSuvvAK9Xn9wb+Y50el0sLKygps3byIWi+HLL7/ke6JcLgN4OC6Nx+OYn59/pnug2+2yE8v169fxu9/9DtlsFsvLy6hUKnj77bfx1ltvwWw2cyFxiOFGr+jv3r17WFlZ4ecIeKiHcDgcmJmZwbvvvoupqSloNJqhFHspFAqMjo6i0+lwgdJut+F0OtFut7f9HpFIBJFIBIFAALFYzN9DGopWq4V2u81iOafTORR7TqfTweLiIq5du4ZYLIYrV64glUohm80il8tBpVJhbGwMWq2WBX4ymQxarRYikQiBQACBQAB+vx+ZTAblchk3b97ExsYG7HY7/H4/7Hb7SyEOpCZCPB6H3+9HLpfjRl0vV3knUJGdy+WQTCahUCgwPT2NyclJOJ1OvPfee7Db7dyM2A/sa9FMmxB1NtPpNILBIFZXVyEQCHjsc/78+T5x0vOczFutFgqFAjKZDCKRCDY3N6HVaqHRaFAqlZDJZNgK6LtWOFM3NZfLIRwOIxwO4969e0gmkyiVSmg2m5BIJEPrI9rtdlGpVJDJZBCPx7G6uoq1tTW0223+zOlhVSgU0Ov1KJVKkEgkvMjTzxlm0PNDHNtcLodYLIZMJgOfz8f/nsvl+L32LmCtVgupVAoikQjRaBTRaBTAw0Nvu90eOnFgt9tFPp9HKBRCJBJBKBRCIpHgqVe73UalUoFUKn2ue5+udSaTwcbGBtLpNHMcJyYmkMvlIJfLX7oJxm5iO6HYIILWGJ/Ph+Xl5T4OM0GpVMJgMMBsNsPhcMDhcBzQq31x9Haae6FWq3f8nm63ywJbAhVKZMFGBdHGxgZP+wYVvQfjdDoNn8+HaDSKxcVFxONxCIVCdmHS6/WwWCwYHx/HwsIC83JFIhFUKhUEAgEajQYfnnO5HE/7vF4varUaJicnUa/X+cAB7J5AeT9An3+1WkUul0OhUEC9Xker1XpEQLrde6L1tNlsol6vo1Qq9R3CgIdFNdUr+4V9LZqz2Syy2SwikQg++eQThEIhLC4uMre00WigWq2iWq2+cMFCamXy3qWbNBQKIZ/P48qVKxAKhTCbzTh58uRQds6eB5lMBrdv30Y6ncatW7dw+/ZtFItFVCoViMVieL1enDt3Dk6n87EL4iCCip5Go4H79+/jiy++QDQaRTab5Q4H8HBsqtVqIZfLcf78ebzxxhtIJpP49NNPEY/H0el0hr6wKRQKfGi8c+cOMpkM/H4/fD4fq7qr1SoymcwTn7VOp4P19XUIhUI4nU5IpVI4HA6eSjypWzAo6Ha7SCQSuHfvHjKZDI9SgYeiJbPZjNdffx1utxtTU1PP/J7okFKr1VAoFFAqlXbswh3iIeiatVotVKvVvuslFotZhzJIIDqB3++H3+9HIBB4pGAWi8U4fvw4fvKTn8Bqtb70LjwEEsa1Wi0kk0mk02kIBAKmJFmtVlgsFtZVUHMjGo1CpVL1eVoPCohKkEwmcenSJSQSCRb91Wo1KJVKeDweTExMwOv1wmAwYH5+Hnq9HuPj4+zFTAWfxWJhJxGz2cwCSyoM79+/z3aoi4uL0Gg0GB8fh0ajYZrXoBfOjUYD6XQa1WoVN27cwM2bNxGPxxGNRpHP55/7c+52u0gmkwC+bero9Xo+rOwH9q1o7na7yGaz2NjYwPr6Oj755BMmy/eqKOVy+XPxCbeCNnI6pQmFQtTrdUSjUSQSCYjFYmSzWUxMTGBsbOw7UTR3u13kcjl8/vnnWF9fx/3797G0tASBQMB2a6Ojozh37hx0Ot1QFs3E015cXMRnn32GQqGAdDrd95CKxWIYjUZotVqcPXsWf/7nf45AIIBUKoWNjQ12WxlWdLtdFAoFhMNhbGxs4J/+6Z/g8/lQLpdRKBR4w6KDwZOKw263i83NTUQiETidTmi1WrjdbnS7XVit1qHhN1PRvLi4iGKxiFwuh3q9zhx+m82GCxcuYGZmBg6H45k2JlqvqFuWz+cfCTM4xKOgblKj0UA+n+/r8A8i/5umFTRipz9bIRQKsbCwgL/4i78YuPewlyBhHFEwV1ZWWHxP43Oz2cxrULlcRjabRSwWg9FoHNiimawEP/jgAywtLSGfzyOfz0OlUsHr9UKr1eKNN97AxYsXuVhWq9XbNhTMZjPMZjPq9TpMJhM0Gg3/nnK5jHv37kEgEGB5eRmfffYZ7HY7Ll68yA0K+nuQ0Wg0EI/HkcvlcPPmTXz88ccolUrcrHne+o6KZtqfU6kUrFYrlErlc7MSnhX7stvRwpjL5RAKhRCNRlEqlfo2bqlUCrVazRSNF33zIpEIWq0W7XYbarUaEomkj09VqVQ42KLZbPIYadBvxucFkfELhQLzOIvFItthmc1m6HQ6foiVSuVQdA97UavVEAwGeREmkQU9oDR1UKlUcDqdMJvNrOpWq9XweDycCGi1WjE2NjZUKmbaiJrNJiKRCB48eIBQKIRsNsu+oTRepOdAIBAwT/FxIHcRErd1Oh3Y7XYWtxkMhqFwo6GRYa9/rk6ng9lsht1uh16v5w3+WdeCXq5ms9lEs9nk30MCKIlEMnTP1fOCrnWj0eC/e/+53W5zh406eb3jeaPRCLVaPRDCsN5nKxgMYmlpCRsbG30OPMDDQt9ut0Or1cJqtXKH8buCZrOJXC6HUqmEcDiMzc1NpiRIpVKoVCrodDoA4AMSTRsGSUvSS2sLhUJsHUfdUxJC6nQ6HDlyBAaDAR6Ph+9ZqVS64+dO64pYLIZer4fJZOL7RCQSsZ0aTV+obqrVarBarbDZbEz3GDRtBO0vhUIBgUAAyWQS8Xic92JyE3kRqFQqaDQaWCwWqFQqyOXyPlrlXmPPi2YKlWg0GlhcXMSvfvUrZDIZxGIxlMtlLlbVajVOnToFs9kMr9fLHeLnvRBKpRLT09Oo1Wq4cuUK9Ho9qtUq8vk82u02EokEgIcCh2KxiFqt9tJ6N1N3hDqpt2/f5tFSq9WCTqfDG2+8AZfLhVOnTsHlckEikQzcA/kkpNNp/OpXv8La2hqWl5cRjUa5iwV864/pcrnwox/9CF6vF7Ozs7zR/eQnP2F6R6PRgFqtht1uP+B39fSo1WoIBAIoFAr4+OOP8cknn6BQKCAUCqFcLvcVjM9KG6Cvj8fj+PTTT6FQKJDJZFCpVGC1WvHaa68N5QhaIBBgamoKr732GjweD6anp+F0Op95HaBrS97M5NICgIsGk8nEYqCXHVRwkO0eOQTE4/FH6EFUiGz1/D169Cj+03/6TwMxBaRnK5/P49e//jV+8YtfoFwuIx6P932dzWbDX/7lX2J8fByvvPLKd+Kz7kW5XMb9+/cRi8Vw6dIlXLp0Cd1uFyKRCBKJBOfOnUMgEIBer8fk5OTANiUo1a9areLXv/41/umf/ok7pc1mE6dPn8Yrr7wCu92OCxcuwGKxsGaKCt8nQa1W48iRI5DJZNzAUygUcDqdkMlkuHbtGm7duoVCoYBcLgeZTIZwOIxgMAin04l3330XVqt1H67G06NUKrHl3v/7f/8PPp8PkUgEsVisT1P0vBAKhZiamsLCwgI8Hg/GxsZgtVqhUCh26R08GXteNJNTQaPRYD4zEd5brRZTKBQKBQsmNBrNC3d9aSREJ0KZTMadn2aziVqthmKxyErOVqs1VAsc8XN7xZKPO2TU63UUCgXk83nmltP3SKVS2Gw2uFwumEymoesyU8FSLpcRCoWwubnJG3VvR1EikXCnY2RkBKOjozAYDBAKhZDL5awEp4mEWCwe2EV9OxA9JZ/PIxKJYH19HdVqlf1CCU9K8dqK3s5su91GPB6HRCJBJBJBNBqFUCgcyLFqL3o7Wb3vn9YJl8sFu90OjUbz3AswdVnooNYrOpVIJH2m/C8beukpALjTTo2KSqWCZDKJSCSCcrmMYDCIcrmMRCKBZDLZFwgBgIXhvWE7BwnqnmWzWbYw7aXekDiJ+KdHjhyB2Wx+aSeXO4EE5uReFAqFeJ+XSCQYGRmBx+NBq9XC6OjowK6vZItbLBYRDAZx7949fp4lEgk0Gg1GR0fhdDoxPT39XMUrdZrNZjNbvapUKng8HsjlcjZIoCYfOW/Q7yqVSsznHYTahaaRxWIRmUwGwWCQXdK2UjK27kE7dZ+326tUKhUsFgsMBgMUCsW+B5zsedFcKBRw48YNJJNJ3L59m7sJZPlls9lgs9ng8Xjw7rvvwuVyYWJiYs/b7bVaDdlsFolEAmtraxAKhX3CpkFGpVKB3+9njmqhUIBWq8Xc3Bx0Oh3EYjEkEkmf+vT+/fv48ssvEQqFkMvl+Nrb7XaMjo5ibm4OXq936Bb6breLQCCAYDCI9fV1+Hw+xGIxFItF7nCQF/Px48dx/PhxOJ1OzMzM8BiVDg8ymazPtWU/vR93A7VaDX6/H9FolCc5vRSB3US320U0GsXt27dRKpXw+uuv7/rv2C00m00UCgWUy2XmMbfbbSiVSojFYoyOjuLo0aO8CD8PyuUyx7L7/X5UKhUW/SiVSg62oDH1ywRKda1Wq4hGo6hUKqwLqFQqiEajqFarvFbRxkpxw6VSiSktAKDX66HX62G32wfmWpVKJdy+fRvBYBCBQKDvECoQCHD8+HEsLCzA7XZjfn4eIyMj7M/7XQJ15NfX15HNZh9p7hCtYNAnLjS1DAaDuHPnDtMYHQ4HtFotTpw4gddeew16vf650wxVKhXm5+fhcDjYP16lUmF8fBwKhQJWqxXnz59HJpPB0tISB09dv34d6+vryOVyMJvNOHPmDF577bUD36s6nQ6uXbuGTz75BIlEAj6fj3UKWwvmrf++3Wvf7usEAgF8Ph86nQ6nthaLRdjtdtjt9peD00xOFUQLiEQifQIkm82GY8eOYWJiAm+//Ta8Xu++2KqQS0c8Hsf6+joA8EMx6AsdpZklEgmEw2FEIhGMjIwwN4rSDqmrXq/XsbS0hF/96lc86hEIBLDb7Zifn4fX68Xc3Bw8Hs/QBb50Oh0Eg0FcuXIFgUCAi2ba1KgYViqVOH78ON5//30YDAZMTk6yUAN4uPENygb9vKANi67BVjeC3USn00EsFkO9Xucu/6CCLKJo0kJdD5VKBYVCAY/Hg/n5eY5sfR7QMxkOh5kOo1QqYTabYTAYuGgWi8VD9Xw9Cb2prr3OPGtra1hbW+ujYmzHWe0tqgCwd/ro6CgcDsfAPJPFYpFpbYFAoO99iEQiFv2ZTCbMzMwMbYjJi6JeryMQCGBtba3PmYc+e5lMxrqBQRYQp1Ip/OY3v8E333zDlpxyuZxT+6ho7rWDe1aoVCrMzc3xITKfz0OtVrOI8LXXXkO320UwGMT/+T//B4FAANeuXcONGzcgEolw9+5dqFQqCIVCnDp16sCL5na7jZs3b+K//bf/xoXy46aaj+s87/R17XYbwWAQoVAIsVgMs7OzqNfrkEgksNlsw10003iOPJGJt0abOAWX6HQ62O12mEwmJnTvJ3pHtoMiQtgJzWYTrVYL+XwewWAQkUgEqVQKyWQSSqWSRTb0Pur1OkKhEAqFAgvjiMMMAA6HA2NjYxgZGeEI84N+8J4WvfZy8XgcgUAAsViMPYTpPqPQHI1GA4PBAIPBwAv2y7KpFYtFlEolRCIR5o+VSiV0Op0dF6OtfrhPQ9noLWyAb/2+KTK6VqtBLBYPzGZIz0KpVILP52MBbLvdhkQigdFohEaj4bQySux61t9BIrFMJsPdVeqekNCHYoKH6Z6jz7V3fSR3mlarxZ6rZC1WKBTg8/nY6pA6+o8TVZJgig77UqmUO0gHLcSlYIZ0Oo319XXE43Fks1mmjJAWgkTExFl/nvto2EH3Cq1FRHsk0H5PDQy5XM57DWlHjEbjgWuKiFZFExCyYjUYDLBarZiYmIDdbofZbGZh+fOCGjpCoZC7qAqFgvdh+tkqlQoulwtCoRDxeByxWIypYCS4XFpagkajgcPhOLBnhl6/wWBAvV7nKWe9Xn+s7/3WZ0UikUChUEAsFvO6Q37PvR7PlUoFwWAQwMPpFB2ylUrlntaRe7K7kfAsnU5jc3MTS0tLWFlZ4RMbcUWlUimmpqbw5ptv9lmvHGJ70Ga0srKC3/72t1hbW+OHhxYsCmkAgGQyiV/+8pfw+Xy4desWotEoiw8MBgMuXryIt956ixet3oVs0FGtVjke+8svv8SHH37I9kW9XEO1Wo3Z2VlYrVbMz89jfHycY1xfBnQ6HayuruLOnTsIBAL49NNPmRu6k91Zb8H8tAfFrd9Dojdy1Egmk4jFYjxaHwTQlMXv9+ODDz5gN5FyuQyLxYKFhQU4nU5OanueBFI6LCSTSdy/fx+rq6scPa5SqTA1NQW32w2bzTY0zxbwbcFIGzQ5R9y7dw/37t1DqVTia0nUCjrItlotLoZlMhm8Xi8XQ7Th0TTRaDTCYDBAp9Nxh5ZocgqFAjab7cCuQafTweXLl/Hhhx8imUzixo0bSKfTXAD0iv7m5+cxMzPD3PXvEuheiUajWFtbY+/qWq3GNDeydTQajbzXUJd2fHwc77zzDlMfDvJ9ZLNZJJNJjkXP5/PweDxwuVwYGxvDX/3VX8Hr9TKX+EVADl+dTgc6nY4Do7buTUajEe+88w6q1SpcLhdcLhei0Sg+//xzpNNpfPrpp4jFYpiYmMDf/M3fwOv1vtDrel4IBAKMjo7ijTfeQLlcRiaT6RMAb9dZ3s6ST6lUYmZmBhqNhveaUqmEBw8e9NkTZzIZ/PrXv4ZSqUQymYRAIIDBYODv3SvsetHca/Cfz+c56Safz/MJnYQxlMZms9nYAHwvQB2enTo9veKvQUUvyZ6S/ILBIC881EXuFTyRBdv6+jqSySSq1SqnVNlsNjidTng8HkilUs5vHxa0Wi2+FslkEuFwmA8QBBLnGAwGWCwW6PV6qNXqgebSPSt6U+7C4TB3U/f6dwLgwrnZbKJSqaBUKu2rX+aTQMUedUBXV1e5yBOJRNw90mg0zz1lIYeIarWKbDbLGwXwsLum0+lgNBr3Vd39Iui12iqVSshms/z5NhoNTsDL5/NYX19nWg6trbQe6XQ66HQ6yGQyGAwGyOXyR6YbxPm2Wq282VFRtV/8xJ1A1yGZTGJ5eRnZbBbpdLpv01YoFBgbG8ORI0cwMjLynaVkAGDBJ/mT906VaZIgk8mYAkXe1QKBAFqtFg6HA2az+cA7zZRQSPVKo9GAXC6H1WqF0+mE1+vF2NjYrvyu3mS7x0EikcBqtaLT6XDOBPBwfaFJKx1CiQZ1EPchuaDZ7XYUCgW0Wi3Ow+h9PXSQ6i2ce//QmqHX69HpdPg+2jrBaTQaiEajEIlEiMViyGazEIvFex4otatFc7PZZM7gV199hStXriAWi7H4jwoanU6Hs2fPwmq14vjx43A4HNyO322QD6vb7eaTY68im4SKwWAQer0eCwsLu/4aXgTES261WvD7/bh79y4rUlutFjQazSMes51OB9lstk/BXC6XIZVKYTKZcPbsWUxMTGB6eppP/MO22JOVYe8YqPdhoU2bwlo8Hg9GR0eH6mDwNOh2u/D7/fjiiy+QzWZRKpWe6rPcSrV43PfQItz7PZSwKRAIOC66Vqvh2LFjBy4mpYX2wYMHuH//PjY3N1kYSXQBGqmPj4/DYDA81+ulA0skEkEgEEA0GkU8Hmd7P7I3nJiYgNFoHOhnjFw/EokE/vCHP/DhK5FI9PkqB4NBRKNR7jwDDzth9OeVV16BwWCAUqlkZXtvQ2TrfUe+/AqFAna7HQqFgt2TDgqUZlYqleD3+xEMBlEqlbjDrNfrodPp4PV6MTo6Co/H850U/RFIV3L58mUEg0EUCoU+ipxOp8Orr74Km82GhYUFOByOvj2n2+1CrVa/kHPNbr2PpaUlfPrppwiHw8hmsxCJRJidncWf/MmfwGq1HugUTSAQwOVyQSAQwGw2Y2lpCUqlEvV6HZFIBDqdDqFQCBqNBlqtdt+79gKBAG63G2fOnEE8Huek4cdBKpXCYrFwVoTNZoPBYMCJEyeg0+mwsrKCtbU1AE+eiu4X/W3Xi+ZUKoVCoYDLly/jgw8+4KjMXksqrVaLc+fOYXJyEnNzc3A4HHva/dNqtXC5XBCLxfD5fH3/r1Qq4caNG1CpVDhx4gQ6nc5AdSJpwyKBxfXr1xGLxVAoFNBsNqFWq+FwOGC325mvS5Zy6XSai2baxC0WC86cOYOFhYUXEj4dNMjKkIrmXtN0Oig5nU5MTEzg7NmzmJqaeq7AikFHp9OB3+/Hl19++dS2b1uvwZOuCRXMWwts6uxT0VwoFGCxWDA3N/cc72R30EsdWV1dZSU3Fc0ymQxSqRQajQZut5uL5uf9Xb1d/lgs1jeGlMlkcLvdQ1E0U/xxKBTC//pf/4tTEwuFQh+nees/E8VibGwMExMT+Lu/+zuMjY0xt10kEj3WEqr3nnqaA9x+gDpY2WwWgUAAfr+/79nS6XTweDz8x+12H/hrPkiQWO3rr79GMpnkhg5Bo9HgzJkzmJiYwLFjx1hsT9Nd2sPIevag0Ol0sLy8jF/+8pc8xRQKhZidncX777//2MCS/YBAIGDqktFoxM2bNyGXy7G0tASfzweNRoNwOMwHuP0+fAqFQrhcLqjVamxubuL27dtPLHRlMhlsNhu7f83NzcFoNOLEiRNQq9VotVps1PCk3z2URTON9HK5HMrlMic90YmTxDYajQZGo3FfPIGJ5zI2NgapVIrl5WUutEjhSV2WQaRnNJtNJBIJlEol7mSRlY9EIoHBYIDL5YLVamWleTKZxOrqKjY2NlAsFtFut1nwRCk6B70APC/oc6pWq0ilUtzZ2woqjOi9DpPI8WlAnXXyGKfu6nYcMVpQepXstKnRIkPfQ/64JAwls356lqkL11tENJtNZDIZHsUVi0X2Hd3va06hBLVaDel0GolEAplMhtcgg8EAu93OvES6P551saXikeLKU6kUryfkx6zValm7MYjPWqPRYAs+otKtra1xl5VEtcC39xAFBInFYrbs83q9GB8fh9vthk6ng0KhYO9Y8ucdpqKy0WgwD5PCsHohl8uh1WohlUo5e+BZIRKJWPhOB7lhBtGUiCLYC3Im6k1uEwqFjxzE98M160kgKlK9XucMid4D4EGDCkOlUgmPxwOBQIBkMomVlRVuWkaj0QPhhne7XWQyGWxubiIYDCKTybDOaut7oPVBq9XC7XbDYrGwY45Op4NKpYJMJmPfb0ov3gkkQNwPV5Zd/elbfWLJj5mUoVqtFiaTiZPYjhw5siuR2Y+DSCTCsWPHMDIywkIgiUTCSnfg0WjdQUIul8OXX36JcDiMK1eu4MqVK1wkaTQaHD16FH/0R3/EMdjtdhtXrlzBP/3TPyGTybAgY35+HqdPn2bLnGHjMBNochEOh3H58mVsbm5ic3Ozb2MjTuXIyAhsNttzF0aDjHa7zeOvxwVAkAiHOGTUhd0uFZCKnMnJSczOzsJkMvGYLBaLIRaLIRwO46OPPkIsFuPvK5fLuHfvHpRKJZxOJ8bHx3kx3O/OUaVSYburW7du4ebNm3zPiMVivPbaa/jBD34Am82G+fl5tml8FtCho9lsYm1tDZ999hm7RxBPl6YcJHAeJOEpdYmz2Sw+//xzxONxPHjwAA8ePEA+n8fa2hpKpRIXNXR4kslksNvtcDgc0Ov1mJ6ehk6ng8vlgtPpZJV/r23lsDmGAN+uuWtra1hdXX2Ei200GjE1NQWFQoFr167h7t27z/w7lEolRkdHmQN60BzuFwFR5YjLvLX5RAcsKoTofYpEIua30jN4kHtSt9tlbQL5uKtUKiiVygN7TTvBbDbjZz/7Gfujf/311ygUCrh27RpCoRBkMhmmpqb2tdBvt9u4evUq/uVf/gXZbBZra2soFovswNMLouNMTEzgZz/7GcbGxmA2m3k9VigU6HQ6yGQy+Oabb1Cr1frSQntBmRP7NT3f1aK5NzWJ+IO9D5BcLodGo4FOp2Ne2H7YU5EArFwuQ6vVQqlU8gYHfLuJ0D8PAnrFfLFYDMFgkL1QhUIhL0B6vR4ulwtarZZJ8HTy7C2oqIi0Wq0HYu23WyBxV7lcRiqV4iCTXtBGr9VqoVKp+L0+Kfd+a9ej978NEqjg3Y76tBWU+Ej3RrPZhFAofKRgpvdM183pdMJms3HxTF3Tbrf7SFeMugEkoikWi/siyNgOZMmYyWRYmEcdCuL0T05Owmg0clf0WdEbGpTL5RCLxZDL5TiwSaFQ8M+Xy+UDN+WgJkGtVkM0GkUwGMTq6iru37/PyaHNZhMSiYT/ULoqHQiocDQYDHA4HH3j9WFdW3qvSzweRzgcZnoKoVfELhKJkEwmn+t3qdVqtgklB4VB6LQ+L+gwvlOnWSQSbetpPGiHKpreUXecBIuDBplMhpGRETQaDZhMJohEIi4yyRhgv2sZOohvbm4y42C7QpccQrRaLXvYj42NcQw5gaao1PnfqbFJe5xSqdyXxNVdrVip47S2toZoNMoWKjQen5qawqlTp+DxeKDX61/IGPxZ0DtmoW7a1oKZ7JLy+TyfVg7qYaG0tVgsBp/Phxs3bsDv9yORSEAmk0Gj0WB2dhZ6vR5zc3NwOp0AwD7FkUgEhUIBALgDdPz4cZw9e/aFEowOGvRQUoAHeRJXKhV0u11WaUulUoyMjGB2dhYajQaBQIB5rYlEYscHjwoEt9sNl8sFuVwOg8Fw4IruXpAHajKZxOXLlxGPx3H37t1tuzsikQhGoxGnTp2CwWBg8RZ1YSlhCngoyJqcnIRWq8WFCxdw/vx5aDQajIyMQC6XI5fLQa1Wb/tcdDod1Ot1AN/6nG63ee41qFO0sbGBYDCIZDLJcejkDWsymTgu+3k/13K5jAcPHrD9YyQSYSqDVCrloCaHwwGj0Thw9AwKUtjc3MSNGzewsbHBwh2aYgkEAqZdGAwGzM3NsZ2gXq+HUqnsE+7RNGOQDgfPAhLU+v1+rK+vY3V1FYFAAPl8vu/rSEPwog4FMpkMt2/fhkKhwJtvvgngYffZZDINDVWDnntyjyG3iYM4LO82JBIJRzUPsisKWfa9++673BwoFosHEj8vFArhdrtx/vx5RKNR7oJvhUAgwKlTp/Dee+/BarXC6/WyV34vRCIRTp48ib/9279FLBbDl19+yeyAXrRaLdy8eRP/8A//AIfDgQsXLsBsNu/Z+9z1onlpaQnffPMNxxiTJ7NcLu/zZKaieT9AizkVEltNyYkPSrY5tPkdZNEci8Vw584dbGxs4Pr16wgGg8wnNJlMOHbsGJxOJ44cOQKHw8EBDuStSpGcLpcLJpMJCwsLOHPmDCQSyUBt4M+C3pOs3+9HJBLpK4LpBKtQKPjatFotBAIBVCoV3L17d9sCE3i4SKrVashkMpw5cwYAuFM9KEVzt9tFuVxGIpHAxsYGPvzwQy54tqNayGQymM1mvP766/B4PKhUKhzBTjGsBJVKhdnZWTidTpw/fx5vv/02K9yJq0bdsa33Ty9HutFocIdgP4tmOvxWKhVsbm5idXWV7w2RSASVSsVOMzabjTvAz4NyuYz79+8jHA5z0UyBKVKpFOPj43jrrbfYbm6QiqBu92GCXzQaxebmJm7evInl5eVHgnAkEgm8Xi8uXLgAp9OJixcvstc0ff6Ps/EcNlAxfOnSJU60C4fD234t+RC/CGiyQ3uS2+3msJ1Bul8eB+rKVyoVVKtV1gq9DKCimSwpBxVCoRBjY2O4ePEi0uk0bt++vS2PeD9A7hlnz57F+vo6bt26te1eKxaL8corr+Dv//7vuc7abg0RCoU4ceIErFYrFhcXcf/+/R3tVG/duoVYLIa5uTnMzs4OT9FMXsLEZQYevnGFQgG1Wg2dTscnt70qmKkApu5x78ZNtne9tJFer9l4PI7l5WWYzWZOp9pPtNttTlKKxWKcckdiSrFYDI1GwwIcoVCIYrGISCTCvqmUzkVjdJvNxhxE2uxqtVrfOE0kEg2Ff3Fv0Uhj962jUzqg0Yi1Xq+zZVQkEkE2m92x01yr1SCRSBAMBlmoarVaeeRzUF20Xu/cZDKJ9fV1BAIBZDIZFAqFRzhjJH4lcYXNZoPFYkGtVuOO6MTEBFMTBAIBrFYrf+1OU6CdiiORSASFQsECKepI7+f1IiqG3+9HPB5HJpPhhEKlUsn8YpvNBolE8kI2i73FAnXWaKIml8u5QN/rZKrnRa8Qp7cI7t3g6FlLpVKQyWQoFArM8RyWou5ZQUmrtOY+Dt1uFxKJBHq9/onXg6hUJJbbGjFcLpeRz+chlUqHqkvbK9IqFAqoVqucSgt8e5/1TnqHZRJBUyt6xgcZRE0gATTxiPcLNKWv1+s8HY9Go48U7kRrUigU3Ix6Uh3YaDQ4mXGnJgxRaUj4v9dr7q67Z5TLZRQKBX5wyKvUYDBgenoac3Nz3A3cC/QW7RT4QSDbKRInAt+OmFqtFr766itEo1EcOXIE/+E//Id9V6BWKhVOTvz888/x2WefsfUN8JCbTap/mUzGFjmbm5tIJBL4/PPPkUgkkEwm0W63odfr8frrr2NmZgYTExMQiUSsDK9Wqxw8o9VqMT8/f6BpTE8Dsja6cuUK0un0I1xmiUQCk8kEtVqNaDSKjz76CKVSCSsrK7yok/n7VvSqt6PRKK5du4apqSkusuRy+YHZIZHor1arcUIZUQO2UxULhUIcPXoUb7/9Nux2O86dOwez2czdxHQ6DYPB0NdpJqqPXq+HwWB4ps1NoVAwv3V6ehoej2dfD53tdht37tzB559/jmg0yrQVcrIYHR3FX//1X2NycpJHgS8SgdtsNjk5jJxbxGIxU5/sdjtcLtfAuiJIpVIu7MnPnEJfCJ1OBxsbGyiXy/B4PDAajWzRNzY29lJ0l3vR6XTw4MEDThbdSsvYDnq9Hm+88cYTu1qVSgWBQADFYpEFtb2/N5PJYG1tDZVKhcWVwwCauJCQNJlMsisVAJ68KBQKKJVKKJXKgZnaPQn1eh3RaJS5uYOiddoOcrkcer2ep8zRaHRfXzPVLdlsFh999BE++ugjVCoVpNPpvjWWkv7IwehJa0jvxN3v96NarW67ZguFQjgcDiwsLMDr9e65cHNXi2byzu1dfEm9Tw+NSqV66i5PrzivV6z3uK/v7QCRoIVAYwvi7fUmm3U6HSQSCbRaLe5U7jdIxEQCt1AoxDwx6hxTYACFnlBnOh6PY3NzE/F4nDuwIpEIer0eJpMJcrmcY48LhQIqlQp353rH64MOehhzudwjXZleXnKpVGKhVi83sbc4FggE/Nn33lvtdhu5XA5yuZzDevaLSrQd6LOmuOaNjQ0UCgXmjG0nvNHr9RgdHYXFYmE6FEEqlWJycrJPDEu+xWq1+qk2tt6uJAlTic5CiV/70VWiiUkqlcLGxgYfGnO5HHc0dDodxsbGOKb5eTduWoNarRZ3oWh9ITu23gLhIO+ZnUDdP3pO6PU2m82+e4k6zfF4HDKZDMlkkgNIBiXxcbdA9xAF1ew02qY1g9YP4nU7HI7H/nzqlEkkkm2LcUp63c55YpBB62sqleLu5ta9XywW9wlKB3Hy0oteO7xKpcIhToMM2vdEIlFf/bPXoPWw0WhwEyESiWBzcxOtVqtvn+1N+iPb26cpmmm/J9rsdt9DNqlms3lfaL97vqo3m00kk0k0Gg3cvXuXVeVer/eJgjRKGKTuaDKZfGzh3O12uXtKBUbvmCKbzWJ1dRXZbHbbpJpWq4Vyucz0hf1GtVrF5uYmQqEQIpFI3/iXeKUUUhKNRiGRSJiOQh1pop8AQDqdxm9+8xvcuHGDFe7VahXhcBjVapUtXpRK5VAs1jQyy+fzHNPZC6K1UMEmFotRr9f5AGQwGGA0GqFUKuFwOCCXyxEMBhGJRHgM1NspCYVC+PTTT7G6uorTp0/j1KlTBzJepLFXNptlMWOtVuuLTe8FJWxR4M3WIpGmP73Phkwm407Qk97j1t9Zr9eZTz83N8c+oZQ2uVcolUpYX19HPp/HrVu3cPfuXZRKJe5IjI+PY3p6GpOTk7Db7dBqtc9t/dbtdhEOhxEOh+Hz+XDnzh34fL6+jrbX6+VDyiAXleTuMTExgffffx/RaBT379/H4uIiqtXqIx3DRCKB27dvIxaLQa/XY3Z29oDfwe6hWCyyqDMQCOy4v2g0GkxNTXFnXq/Xw2w249y5czCZTI/9HY1GAydPnkSlUsEvf/lL+P3+oVhvn4RqtYrV1VWsrq4iHo8/8p5I2EgUQYfDceBpj48D2eI6nU4WNvaKnA/xLbrdLieGxmIxfPbZZ4hGo9taNFqtVlgsFtjtdrzzzjuw2+2YmJh4qqKZkiYp7XYnuN1unDt3DgaDYc+NDvalaM5kMqhUKrh37x4AsOraYrE89nsrlQqCwSDK5TIWFxextLT02MWm2+0imUwimUyiUqlwfHcvHidQajQazG09iEWtVqthc3MT6+vrrD7tfR2pVArpdLovkKL3/299zalUCr/5zW8gFosxMjKCkZERdtdoNBo4c+YMzpw5w9Hbw4B6vY5cLodKpfLIa67X69sKBXqTy7xeL0wmE06ePAmdToerV6+i1WpxsUUpg1SofvbZZyzQOXny5IEUzXQYSCQSiEajj4SL9ILubbVaDZvNtq1LBNkVbcXTbmZbnx8aP0ulUhZoNhoN9gPfK/QK8m7duoXFxUWmXlHoxltvvcWJmS9CP6Ki+dq1awgEArh9+zbC4TAfaOVyOafD7aUIZTdAvEKa/JXLZXz88cd98dGtVguNRoPXwrt37yIQCGB+fn6gR9XPilKphFu3biEUCiEQCOy4DlJirMvl4s9Zp9NhZmbmqYRi1JHb3NzEb37zm6FZbx+HcrnMVoW9SZjAw7VErVbDZDLBbDYPjRc1OQblcjlsbm6ywPEQ/aCi+f79+wgEAvjd737HgvveCTD51s/Pz8PtduPixYtwu91QqVRP3Espnv3rr79+bOechLRnz559bProbmFXi2axWMyncBId0WIhEAiQTqcRDodRq9VgNBqfGF9LHsUUmrLdaXYrKJGMaA1PoyIlkZfVaoXD4YDX64VcLn+m974bIOEe+RD3JnIB34ocm80mCoUCCxrJIoqSt3o9MUmdKhQK0Ww2eYMXi8VQq9Us3Br0sdlW7LRx03+nMRslb5EN3eTkJAwGA0ZGRqDRaDA6OopcLodMJsPiMQI5qhAFZr9B3Y5kMolgMPhUXDXalEjE1Wq1YDAYHumw7vbmtZVCtR+FFQmR0uk0+8KLRCIO4rBYLHA4HDCbzY/lFrfbbZ7QVKtV/ncSCNPo+f79+9jc3EQ0GuVOP41FtVotbDYbnE7nQHfTeiESiaBUKiEQCOB0OjE9PY1cLgeBQIBCocANCKIH9WpBXhbQ4TgQCGz7bFFssdVqxeTkJKxWK2w2G0wm01MnqxKNoVQqPbZbNiwgh5xyuczOGbS3AOB1V6PR9D1/Oz0TtI/R3nVQzw55rJtMJnb+oolLqVTipM9hETPuJajeIDreTkL5Xhop1TNPQ7Wl36HX6+HxeFAul5FOp7fdhzudDrLZLPx+P9RqNcxm856GSe1q0axUKjE9Pc32PX6/nykPlUoFi4uL2NzchEQiwW9/+9sncgs7nQ6rcR8n4uoFFZXk5PEkUGEplUrx+uuv48c//jEvjPsNg8GAd955hz1UNzc3+4qQYrGIcrmMTCaDO3fuMM2kXC6zrZZEIuGDSy//jq41xU2KxWLMz8+z3/NBHBL2EsShU6lUGB0dhVarxTvvvIOLFy9CqVTCbDazJ/PJkyexurrKLiQEEnxRtOp+W6hFo1F+jn7xi18gEAhwR2frxkL/jf57IBDApUuXONBmN0dWO9mM9f73/dj4SIDy4MEDxGIxjoufnp6GwWDAmTNn8MYbb7B7z04g8XKpVMLGxgZKpRLy+TyHpNy+fRuZTIaLnnq9jmw2C+BhR1+v12N8fBwXLlzg3z0MGys1OTQaDd5++22cPHkShUIBy8vLyGQy+Oijj/Dxxx/zOryVs/oyIJ/P49KlS7h9+/YjgRASiQQ/+clP8G//7b+FUqmETqfjvYKK5adZNylhkMbXw+SQsRXdbhfpdLpPQ5NOp3mi27ufTk5OsmXh456/3sTO/YhB3gl0eDxx4gQCgQDW19dRqVQ4Glqr1WJkZOTABOGDBjpcdLtdGI1GZDKZbYva3ul4Npt9ai9yspz727/9WwQCAfz6179GNBp95Ou63S5u376Nf/iHf8Do6Ch++tOfcnbFXmDXO81E9E6n0xCLxdytAR6eUJ9GlfyioM17uxCG7U45YrGYu7wzMzOc5LXfoNdAoq3ewoP42mRN9ODBAxSLRS6KaQGnpB2j0bhtcSOVSrlINhqNnJY4bJ3mJ0EgELBHOE01XC4XxsbGIJfLoVarmd4ikUhQLpcfeZBJ9NXLE98PkB0VhZjE43EEg0EEAgFelKgoow7N1u8vlUqIxWIsaiURxfMUc/R6ms0mX4etP4e6S/T3fhTNrVYLxWIR2WyWN23qcJFloMVigVgs7rP4ovdE/61arbJKPh6Pc7GcyWSYz5tKpR7pkpDVEU1sLBYLbDbbQDpmbIfew7TFYoHFYkGxWES73UYmk8G1a9f6QqAILxM9g/QyvY4WBCqiTp069ULiUepmB4PBRxIG6fe8iJvLfqPRaKBYLKJUKm0baEL2clqtFna7/bFR9bTG1mo1SKXSA51kkLjTZDKhUChAIpGwuQBNYAb1wPO0Zgm7hd61r9c+brt7mD5fmvxvTYp+3O8wGAzwer1otVqQyWSPUIAI2WwWPp8PEolkz+k0u1o0G41GvPvuu1hYWMAXX3wBsViMUqnELhD7AYrnlslkMBqNfcVvuVxmjjR1ThQKBVwuF48B7Hb7gSnfqVssk8ng8Xig1Wr7Os20kVMMdqvVYlWqzWZjkr3ZbIbZbN62cKHiWiKRwOVywWq1cszyywKBQACdTseRvz/84Q8xMjKCqakpqNXqPvcW6iJvpcIAD7vyY2NjMJvNsFgs+1IIEq+0Uqng+vXr+OKLL5BKpZBKpTg0pBckeKQNh5xWwuEwhEIh4vE401FGR0fh8XjYo3en90OHBIqUbTQafZZuvU4kpFwmK8S5uTm43e4DC2mgSQtRUmjBJpoXHZyJh00HExJX0teRO0a5XEapVNp2rEjjQ6/Xi5GREajV6oFL/3tW9G6+9F5pfSFu/zBQTwYB1OTY2NjA119/jY2NjUfEhkKhkENkDAbDQAdpEHqpGeQ73RtVbzaboVarMT4+jrm5OWg0mke6s3RYbbVaiEajiEaj7G1+UIdOgUAAs9mMI0eOAHho5dZut7G0tIRf/OIXLPR9XNf8IEBZDclk8kAmQb0NCPpnCteSSCSYmZnB/Pw86wHIfOBZfjb9cy8oX4JcgPYLu1opGQwGXLx4Ec1mE0KhELlcjsM29qNopmLJ5XJBq9ViamqqbxFKpVJ9YrF6vc4FqtVq5aL5oLwkyboLeJhG53K5+P+RyDGRSHB3lK6zTCaD3W7Hj370Ixw5cuSxRTPw7QntZUr02goapU1PT+MHP/gBpqamHum0Et9qJ7GHXC7H+Pg4nE7nvhbN5JRx48YNfPTRR1zE7bQgkvNFLxc3Go0imUwiFApxQuIbb7zB93dvlPxWUBgDdXKr1Sru3r2LDz/8EJVKhf2d6XpqtVocO3YMDocDR44cgcfjYY/W/YZQKOQkPplMhna7zbQLsilst9tIpVK4cuUKkskkR9aT+G1rOt7juiIGgwFjY2Ns1zcsXeZngUQigdVqZTHly7he7Da63S7y+TwCgQBWV1fx9ddfY2Vl5ZGNXygUYnR0FK+//vq+iJheFNQ531o0E6hopudidnaWtTa9oECMWq2GaDSK9fV1mEwm9lE/CJBoTSqVolarQS6Xo9vtYnl5GbFYDMePH8f3vve9vn35oEG0TVrv9zsJcOsEausUjpKgL168CIvFArfb/UQt23a/g4ry3rWYpopKpXJfw7R2vb1IXRaz2YypqSmYTCa0223k83mO8SVfzJ1GCVKplDd26oASzYMu1HaFrUAggN1uh81mg1qtxujoaN+JRiKRQKlU9vkwkyBOr9fve4rZ47C1mKXFKp/PszCp0+lAq9Wy4EKv1/OpflhM5HcDxKEjCIVCGAwGmM1mnjb0dv96aRfke7zdNEQsFrP/8OOELLuJbvfb9D9y8iBf8V5QCp9EIuHEv0ajgWg0inq9zsIMnU4HgUDAzw8dDh53f5TLZebLh0IhFItFhEIh3iTpuaVr43A44PF44HQ6YTKZOBr4IIorohaIxWKsrq5CqVSiXC5zEAyNBnO5HBKJBAu06LPvpfWQt3mhUOgrDOi+oMMqHbYHpWAmLn6j0WCfXFrnnka0lkqlEI/HmeNLB3OZTPZSTaR2EzS5pANns9nE+vo6VldXsbm5yZoIqVTKft52ux0ajQYul2vo0vIo72A7qglNvohyst060LvObdVjHCTo2VcqlRz0JBKJuFng9/uhVCqfyshgP9DrZVwsFjm4aK/Xot5iPZFIsPkCFe0ikQg6nY6FeRaLBXq9/pnqkm63i2w2i42NDYTD4Uf40lKplItwm80Gm82GkZGRPRUBAntkOScSiXDixAmMjo4yj7ler2N5eRnLy8tc/G3X3ROJRCzEo2hEsVjMI2qDwYDjx4/3hTUQemOUqUDuXeRXV1exuLjIzh709ePj4xgdHX1sd/ag0el0EI1GOR2H/KvHx8dx6tQpjI6OYmJiAna7/Tu1sRHvqbcTLBQKMTc3hxMnTsDhcDwyCiLXhUqlgsuXL+MXv/gFB73Qz6Si1Ol0YnR0dNv7bS9ABT35S9fr9W1dCyiFT6/X4/Tp0zh9+jTy+Txu3rzJIjXawFQqFXd2stksj0C3K6A6nQ7C4TDu37+PSCSCjz/+mG3ucrkcn/ZprHzs2DG43W789Kc/ZUcSuVx+YJtgoVDAtWvXIJfLce3aNWg0GnYvIOoKALYZpMNJo9GARCLhA5LX64XH40Eul8O1a9c4mh54eFg4cuQIC3d/+MMfQqVS7ds98iRks1n8/ve/RyKRYN2CXq/H0aNHn2i7VygUcPXqVayvr2NjY4NdBLRaLUwm06EIahuQOC4ajaJcLsPv96NYLOLrr7/G119/jUqlgng8DuAhhZEcmv76r/8aXq8XDodjqCg9vfSMreuSUChk4e3jihdy1aIagNIzD3r/pfAwm82G+fl5iMViBINBBINBbGxs4H//7/+NkZERXLx4EW+//faBf27dbheRSAQ3b95Eq9Vi/3CDwbCn17LT6WBtbQ1ffvklwuEwAoEAUqkUF81qtRozMzOwWq04ceIEjh8//sxJ0J1OB7dv38b//J//k90zeg+WVqsVP/3pT7nusdlskMvle275uWfVlcFggE6neyQlkFwwlErltkpLoVAIl8vFJwZyeojFYtBoNDCZTFhYWNjxwtDplrrUvUIWSgnrTSbqTTPb6xPK84Ks5ujGoRAT4CENwe12w263Q61Wv3QuGE8DOiBRkSgWi1kItt3pttPpsGKbVODURQW+tSAkjjlZmO1Xp5m4YfS5925MVIxKpVIYDAaYTCZ4PB5MT09zKtN2CxOlXO3UIer9/aVSiakdKysrfTzMXtGSXq+Hw+GA0+lkH/D9xFaaEfBtl1UgECCZTEIgEDB/cut1pL/ps6b7SKFQwGw2w+Vy8dSrdx2hDj4FN7hcroFKOyOKD4UYEeWEDg2Pu48bjQZSqRQikQj7xFOnmawqD7qw2U1sJxjvBU1Fd7LTokNksVhEJpNBoVBAOBxGLpfDxsZGHyVDKBRCrVazxuDYsWOYmpras/e2V6BDfa/NHIE0NjSV2Ole6R25964pB31v0dqvVCq5GUPhbMVikeOcjx071tdVPSh0uw8DvzKZDHOy96PTDID3CbL8pCkk7cMajQY6nQ5arRZarfaZ1w7qNPt8Ps7Q6P1+yhsYHx/nTvN+3D97VjT32p3RRfR6vZDJZMwj3U6JKhAI+GJTt08oFMJoNDLdQq/X73hTbI1uBB6Om8m3NpfLoVAo9I2ZBxkURlIqlXDjxg18/vnnqFQq3AU9cuQIXn31Vej1+j1PwhlUkA+kxWLB+fPnYbVa4fV6OXWSDhK0SBcKBSwtLSGRSMDn8yGfz/c5Q1Dog8PhwNTUFKanpwdiCiEQCGAymWAwGOBwOPDOO+/wa7RarSzS2i7tkqhLFouFx/W9oINEvV6H3+/HrVu3kEgkHvlZJPrT6XQ4c+YMXn/9dZhMpgPhIUqlUtjtdhbrRaNRHvkCYMeQXq6dQqFg326aYhG9RaPRYHJyEhqNhtMyHzx4gK+//po7hfR7jUYjX/NBcz4olUq4c+cOHjx4wF0nos90Oh2oVKpH1grq+uVyOUQiES6au90uJ0iOjY0NxEh6N0H30OjoKPL5PPP1AbB16pdffrnt9I7SBAuFAlsU1ut11vDQYZPuF6VSiQsXLuDChQuwWCwwGo37+E53BzSJun79OmKxGPtO08FTp9NhYWEBo6OjcLlcj9XVULHcSyE66DWWoNVqcfbsWXi9Xn7PIpEIwWAQqVQKRqMRnU4HFosFp06d2vfngmhA1WoVhUIBhUKBdVBWq3XP9yuBQMDdeI1Gg5WVFQ4FI41QLBZDs9lEKBRibY3RaBwYGtvzYk+LZvrQ6CRG6n3g8bZFvR/2dpZHz7JBdbtdlMtlJBIJLpp3ooYMImjxTSaTuHXrFi5dugSZTMaFCxXNTxN//DKCuN6lUglutxtvvvkm2waSaInuod7I8aWlJQQCAQQCAU5AA761HaLYz4mJCRw5cmRgFnODwYCpqSmMjY3h4sWLGB0d7SuC3G73js/W44SfNMmoVCrw+/3sW7u1aFYqlZiZmYHD4WAfZBJ87Deo4KnVagiHw33d5p0gl8thMBg4Sl2pVGJubo4FtKdPn+bRJrlj/I//8T8gFAq5GJdIJDCZTDzdOchAhu1QKpVw79493Lx5k7mXiUQCJ0+ehFQqhdVq5ckMgZ6hXC6HaDTKqY7Atx0dKpoH6b2+KOgeIr7qdkXzpUuXtu0mRiIRfPjhh4hEIgC+3aO2WptKpVI4HA4YDAZcuHABf/mXfzlQk4lnAdEBbty4gUKhwOsDOfLodDocO3YMR44cgdPpfOy90jvRI1/9Qbm3tFotXn31VZRKJQSDQVy/fp0TiukwnslkMDk5iYmJiX0vmsmStFQqoVAooFgsQqVSwePx7AvVVCB4GI89NzcHmUzGNn35fJ7DbuLxOMrlMgKBAILBIGuuDovmZ8CL8Bxf5PvEYjELAEk0tl8WeC8C4n1lMhkkk0mUy2UADzcxh8MBi8XC9JXvSsEsk8k4uIW6HO12mxXdiUQCWq0WnU6HH07awPL5PAqFAiKRCEKhEEeV00iJDh42mw3j4+PweDyPFBf7jV5/Ydpc5HI5d0yJv99LN3ga9AriaKFLJBJ9tozk2CEUCuF0OtlzdWpqChaLhU3qD6pDRAUPAOYsE/2EnDDo9VNXWa/XQ6vVQqFQwGKxQKFQYHR0lP3R6XoC2JHK0OtHP4jTHaIVabVaCIVCFgo9ePAAlUoFVqsVFosFwLf3V7FYRKFQ4HCXZrPJnrVWq5VDUAaBd7qbUCgUGB8fh0Ag4Hu/1+Iql8shEAhsW+DSmrzTIY2mFVqtlkNvbDbb0BbMhF4KGfCta5XJZGL71idR2igEBXgYXd1qtdgOdBBAlKROp4ORkRHMzs4im83iwYMHvDYmEgloNBoEg0EOCnqSZuBFQWtcsVjE2toap9lSjWO1WjmVdK9BmRD0Wffe12T1Sban6+vr7AVP04WtnzV5f7daLU6aTCQSA8cIGIw7dI+h1WqhVCqRy+VgNpuZozTIiz/Zh+VyOdy7dw8+nw/JZBJyuRwOhwPf+973MD4+jtnZ2e9MwUwUg6NHjyKRSCCfz/OIqtFowOfz4ZNPPsHdu3fxyiuv4MSJExAIBHwt79y5g2+++QbJZJLFXRS/TKEvCoUCb7zxBn74wx+ydd9BYTvDekp0pI1JrVY/831MosBGo4GvvvoKly5dQi6Xw/LyMgd7ZLNZvm4ikQg//vGP8Xd/93dQKpXsjanVag9U9GcwGPD222+j0WjgwoULSCaTTDGg8WAymYRWq8XRo0e5KO6NkReLxXwAIdEkXSMqvreKndRqNY4dO4a5ubl949E9C0ioCAChUIhDNf7rf/2vkMvlMJlMTA2gYIpiscj2gtFoFK1Wi4WeY2NjfVaCLxNsNhv+6q/+CoVCAf/lv/wX3L17l4vgbreLtbW1bVPIgIeFwU5hXUKhEOfOncMPf/hDGAwGTE9Pc+jUMBfM20EkEmF+fh7nz5+Hy+XC3NzcE61b6eDZ6XRgMBjQbDb5WRwEiEQiaLVaqFQqvPvuu5iamsL6+jr++3//79jc3GT9SCKR4OCsM2fO4NVXX92z/Zg4vslkEoFAAP/yL/8Cv9+PZDIJnU4Hp9OJc+fOYX5+HiqVak/rAoFAwL7tjUaD6aEUuEYuRvl8Hl999RU2NzcxNjYGjUbDnv46nY5/HgkL79y5g3w+j5WVFRQKBdy/f/9AA2+2w3eiaKZTjUKhYJUudcdoRDQIIoRe0KZdq9WQzWaRSqVQq9VYrGS32+F2u/f8ZDtIILcTo9GIer3OizIVN6VSicfKIyMjyOfzEAgE3H2MRCJYW1tDJpNBOBzu2/DoZ6tUKthsNkxOTj5RAb7f6O2I93Z3n/W+7XQ6zD2Lx+NYXV1FOp3G3bt3+4JLeiPYR0ZGXigZbS9A/sHAw1Ajp9OJWq2GVCqFarXKHp4GgwHz8/PcGe+NQN5pYyEBGIkme5MXJRIJ9Ho9d6oHad0AwB11i8XCSYbUSabNjjiZZGlYqVRQLBYBfBuYQxsx+TM/bSDBMEEul8Pj8aDRaHDQEznYAODDxE6g54RAe4lEIoHdbmeXFQpWGmZsDb7pPczrdDq2Xnyae4XWFQADtcYSekXlNpsNSqUS3W4XBoOBU0MLhQLkcjlCoRBarRYmJydRq9V4bd7uz7Og9zqT4JTsQBOJBNbX17G5ucmOJRToRWviXoM6y70CYToQ0vRXIBBwcJRYLEYmk+GESGq40NdnMhmEQiFkMhmsrKzwAWE7b3P6Xc97bV8E34mimSAUCrkwok4LJaXR6WcQNsBut4tQKASfzwefz4fFxUUEAgHI5XJMTExgYmKChT3fpbABgUAAl8uFU6dO8XWpVCrsP1ytVrGxscGL2uLiIoBvuczUdatWq330HOKuvvbaa7Db7Zibm4PJZBoIX9qtC0I+n0cwGESj0cAXX3wBq9XK98TT3gf5fB6XLl1CPB7HlStXsLq6yupnuhY6nQ5KpRI2mw1arRaTk5MDfZ/RqJfoFWS/5Ha7oVAomMfb667zOGV/IpFAJBLB+vo606JIBU7+uoPqh67VanHmzBnWPVC0bPH/x953NseVXmc+nXPOjQ7IgTkOhxxNkC3NjOyRLNlrr+wt7ZcN3/Yf7C/Yqv0FW1tbtaVyySurZFuaGeWRhhMZwQQQGWh0zjmH/cA6h7dBMAd0A/epYg0HBMHu2/e+73nPeUKpxA4a2WyWNzy1Wg2HwwGtVsuHcqVSiTNnzuDUqVOwWq1DX/A9DlKpFMeOHcPf//3fIx6P44svvmALyofBYDBgamqqr3FBVAwSxI2NjTEtcJhBrjTk4EQUBTpMGgwGuFyuR0ZmDyuoqB8fH8c//MM/IJlMYnFxEYuLi+h0OtjY2MDm5iaSySS+/PJLFpGTNsZut0Or1cLr9T5W+yEMliKOcLFYxMLCAgqFAlKpFFKpFPL5PFuwkaWb3++HzWZ7FZcEvV6PNUGUc5DNZnlyC4Cdd8hieGNjAz/96U/ZulLYcOj1emztV6lUkEgkeM0S/jyZTIbJyUlMTk5ibGyMnTOeZeL6rDhwRbNGo4FOp2NVMxXNwWCQgyD2Gt1uF+FwGJcvX8bW1hYWFxcRj8dx6NAhjI+PY3x8HD6f77FCi/0GiUQCj8fDY3SbzdZnd1Ov17G5uQmpVIq7d+8+cG3IUJ9+Tz8TuC/8mJycxOzsLGw2257TXnYWzBKJBKVSCaFQiDvCZrMZUqkUY2NjTzz2paJ5dXUVy8vLWF1dZY6iTCbjSHmLxYITJ07AarVifHx8z6/HoyAMuKEiZmfk9ZM+K1Q0LywsYH19HbVaDb1ej1MmPR4PF82DOGo3GAw4c+YMqtUqZDIZWq0Wc/mr1SqSySSy2Sz7pqrVagSDQYyPj/MkR6PR4OjRozhy5AgHJuxnyGQyHDt2DAaDAYuLi1haWnps0azT6XDixAl4vV7+mtfrxV/8xV/A6/Xy4Qx4dk3OoKDZbCKZTKJYLCKbzaJcLnPAFlnpkS5gPxbNKpUKBoMBgUAA7XYbv/vd72A0GhGLxfDJJ58gkUjg8uXLPMk5efIkbDYbZmdn2X3JYrE8tmimbnKj0UAkEkEkEsH29jZ+/vOfIxQKseiP1mm1Wo3jx4/jP/yH/wC9Xv/KiuZut4tQKISvvvoK4XAYkUgEmUymzwufvo9shkulEra3t/nPdoba7DbFoPAbgkQiwcTEBL71rW/B6/VibGzslTtbHaiiWaVSwev1ot1uo1aroVKpIBgMciDDXncVhahWq+z2QRw7g8EAt9sNu92+7wQ5TwKJRMIbuMViwcTEBKRSKcLhMAeAtNvtXa0MHwaDwcDXVdgV2KtrK6RFkCJdLpdzUdtsNlmxHo/HUalUsLKyArvd/sQFXCgUQiwWYxoDjSKJtuD1ejk4RSjsGZb77VlpKwRy3EmlUsjlcjyqp86sSqUaGF/Z3UATNeAeZ3diYgLVahVmsxm1Wg0ulwupVAoqlQpOpxNqtRp+vx9+vx8qlQomk4kFt3sp9HzVIEuskZERHD9+/LGOCA6HA5OTk326BxKH7rfCsdVqIZvNIp1Oo1AoMG1JoVCwew511PfrvULrpFQqhd1ux9jYGDtZUfIoTaUoS4E42slkkhN8H4Vms4lyucyHlFQqhXg8zgmt5NxDzywd5Cmj4VU1NiQSCfR6PZxOJ1qtFjweDwBw6rOwY04QxmALC+Mnfc1UYBP9SUjPeJUYnCrxFcBms+H9999nxXOn04Fer8f4+PgTRcy+KvR6PcRiMczPz7OoSalUYmJiAt/85jdht9sPFJdZCOrwabVa/OhHP0I2m8WHH36IX/3qV6jX649Us++EXC7H+Pg4jh49itHRUZw+fRqBQOCVBZnsBuL6UXFGPuXU1SkWi6jVapBKpYhGo5DL5VheXsZvf/vbJ37NQn9Z6hKpVCrY7XZoNBp861vfwrvvvsvuCSqVCjqdbt9uhjshtNVKJpMol8vMeSf3jYclKg4CKMHPYDDg/PnzOHr0KDcKOp0O8vk88vk8FAoFLBYLH0RpxEmFgXCEOshThhcBiUTCfuM+nw9TU1OPtSVVKBQwmUx91Av62n5DqVTClStXsLm5iZWVFZ5iUJgGdVJ1Ot1ANZ9eBihx1u/3I51OY3R0FOl0Grdv3+bE4fX1dTSbTdy+fZspY08izhPyl4l2SNSYTqeD2dlZzM3Nwel04vXXX4fD4UAgEIDNZuMmy6u6BlNTU/B4PIhGo5BIJIhGo5zcXCwWsby8zA5XO0HF8+PWlp3ft1eicyH29929A9Rppq4k2ZKRG8CgQJjyQydXEua43W7mKR5ECK1qaDRz/fp1DplotVqQSCR9lkiEnVQHGnHRyN1ms+35hkevizq/ZHtEBwESiALge4MCFZ6081mv19lpguzXtFot24p5vV4e1Q/SYfJVolqtcsIbLdz0mQy6xaNQZGWz2WCz2ZiaRAevYrHIawp55B7UNYVAFB+9Xs+WfCLuodVqIZ1OIx6Po1QqsasORWZrtVq2HdvrouZVgPQNWq0W6XQaZrMZuVwO8Xgc+XweiUQC1WoV5XK5r7v6NNhZKFISKaWwTk9Ps+ZkL8SUer2etQ4jIyN9KcwymQwqlYqpbcL3TqmquyW0CrHz+4QF814IAAkHqmim7olKpeIPkszVBw00pgGA6elpaLVaPtlpNJp9f5p/HMghQKPR4Jvf/CacTicKhQJ3UElEAYDHOELnFKLjnD17FqdPn2YKwl6DvIdNJhPzUiuVCiKRCPtQ7/SuFEZEP0kxRxQWmUyGQCCA2dlZWK1WtmWbm5tjO7aDsAHuBlJ/0wF72CHcgIWCSBrpDuIaKGJw0Gw2kUgkEA6H2U3EYDBgbm4OLpcLwWCQm0+DfKB80dBoNBgbG2M+9+HDh1EulxGPx1GtVpFKpZBOp9FoNJDL5Z54CiqRSNjylESEOp0OIyMj7MPs8XheWWT2o6DX63H8+HGMj48jl8shl8shkUhAKpUiFouxePF5/JaVSiWLlQOBAPx+P6xW654c9A9U5UVF8zCg0WhwNObk5CScTicmJyfhdrsPfMEM3C+ae70e3nnnHbz11ltIpVLsCkFRwMD9tCqDwcCjdeJtnjhxAseOHRuYKGSlUgmXy4Vut4vTp09Dp9Mhm83izp07yGaz6PV6fQsQCS2q1epTjdE7nQ7kcjl8Ph/Onz8Pj8eDt99+Gw6Ho0/AdBBBXVmKhR00c/1nBX2mWq12X9rHiXh5aDabSKfTHAgF3LuPZmdnMTo6ikAgAJ1Od+AOX2q1GmNjY+j1epibm+sLJKvX67h79y57Dm9ubj6UrrATMpmsT0R48uRJWK3W57axexkg3/per8ec5u3tbeRyOVitVty5cwfpdPq51lGVSsUHE7/fD5/Pt2fpgmL1NWAQcpro/3eOJETch1AwRxY/crmcrbMAcEFMcdMUbKFQKDgpbpCuKxW/xBVUKBTI5XLQarUIhUIPfL8wwYzU7LtBr9dzSpxSqYRCoUAgEIDdbofZbB4Ii71BAFloeTweKJVKxONx1Gq1Pq/3g3yoEHEwQdNZtVrNfGaXy8UWjAf1mdhtX9ZqtZDL5bDb7SiXyzCbzZDL5ajVak/0M6VSKQKBABeKZAc5qKDPnvQ4RPMDgEwmg3g8zrawQnGgEHq9nmmWwgNYr9eDVqvF2NgYjEYjXC4XdDrdnq3D4g45QCBTfUrpIn9hCll4GleIgwi9Xo8TJ07wNRSOwqi4pi4qUTb2Oib7YSB7PYvFgmq1ipGRERSLRSQSCVy6dOmpKQNSqRSzs7M4ceIEh+NoNBqMjo7C7/dDp9MNzRTmZYNELt/5znewsbGBUCiEcrnMHs10kBEh4qCB1iWr1YqJiQm88cYbGB8fH9h1dC9AaYLdbhdarRbj4+M8uXqadVuYVDoskyFqxni9Xnz729/mAwMA5HI5LC0t7dptpzX32LFjMBqNmJmZgcFg4IaQUqmExWJhXZrH44FMJhPpGSLu27IIO8z0tf3ArXyZIMrGfgHZOGk0GnS7Xeh0Ou4ICzeonT6Wu4GcEvx+PwwGAxfKpHoXu8z3IZFI2MqpWq1Cp9Px50CHi4PaVRNxMEGuKiqVCkajkZPnyKZTxH3QtQLuFXsHyemK1kWNRgO32416vQ6PxwOHwwGJRAKdTsc6EapxqIlltVrh8/lgtVoxMzPTt5fLZDKeDpN4fa8g7pIDBGF0L/FuqWBqNpti0XxAQRZiKpUK7777LhwOxwNTh51hLTtB475gMMj3FlFYaJQoFoL3QPZjFFQgk8mQz+c5BMloNO77hDwRIoRwuVz4u7/7O6RSKR6jW63Wx3pZiziYIJGxXC7HsWPHoNPpUK1W8ed//ue7UlSkUil7xWs0Grhcrr4gGKIU0n/3EpLeflG57AO0222OJ/3Hf/xH/OQnP4FcLucEsr/6q7/C9773vQMnthBxH0TbeRYIhYI77fdEPAjicNIBRXj9xAOGiIMEeg52priJe5GIx4G6yjut53bicQLHQdmnxE7zAIF4twqFAh6PB0eOHIFMJoPNZoNWqxVP9SJeqYH9QYfQH1WEiIMMIeVAhIinwX5bP8VO84CBTvOZTAa5XI6DCqRSKcxm877i7IoQIUKECBEiRAwLxKJZhAgRIkSIECFChIjHYH/1zUWIECFChAgRIkSIeAkQi2YRIkSIECFChAgRIh4DsWgWIUKECBEiRIgQIeIxEItmESJEiBAhQoQIESIeA7FoFiFChAgRIkSIECHiMRCLZhEiRIgQIUKECBEiHgPRrVyEiAOKXq+HUqmEUqmEZrOJfD6PdrsNk8kEo9EIhUIBk8kkhhqIECFChAgREItmESIOJDqdDjqdDhYWFjA/P49EIoEvv/wSuVwO586dw9mzZ+F0OnH27FlYrda9frkiRIgQIULEnmOoimbKLqcsc6lUyhGNg5JLLkLEoIOeoXa7jXw+j1AohEgkghs3biCZTMJqtSIQCEAul6Pdbu/1yxUhQoQIESIGAkNTNOfzeRQKBRSLRSwtLaFSqSAQCMDn80Gj0cDhcEClUu31yxQhYuBRr9cRiURQKpWwtLSEpaUlZLNZ1Ot1PoSKECFChAgRIvoxFEVzr9dDoVDgjthHH32EZDKJ8+fP4/XXX4fFYoHJZBKLZhEingD1eh1bW1tIp9NYWlrC6uoqSqUSGo0GJBIJ/xIhQoQIESJE3MdAF83dbhe1Wg2tVguRSARLS0uIx+NIJpPIZrMIhUKwWCxwOp1wOp0AAJVKBaVSucevXMReoNfrodPpoNvtIplMIplMQqlUwul0Qq1WQ6VSiQcrADKZDAaDAe12G2azGUajEb1ej+kYrVYLlUoF9Xod3W53r1+uCBF7jl6vh3a7jW63i1arhXa7jV6v98D3SSQSyGQySCQSKJVKcS8S8QCazSaazSZqtRri8Tjq9Trkcjnkcjm0Wi28Xi80Gs1ev0wRD8FAF821Wg0bGxsoFov4+OOP8dFHH6FarSKTyaDZbCIWi+GLL77A5OQkFAoFxsfH4fF44HK5xE7ZAUSn00G5XEatVsO//Mu/4Oc//zk8Hg++//3vw+fzwefzYWRk5MDfGzqdDnNzc2g0GigUCsjn84jH40gkEqjVasjn89je3oZCoUCz2dzrlytCxJ6D+P+NRgPZbBa5XG7XopkKH4VCwc2cg77eiLiPXq+HTCaDRCKBjY0N/PjHP8b29jbMZjNMJhMmJyfxX/7Lf8H4+Phev1QRD8FAF83tdhvFYhHZbBbhcBhra2toNBpoNpvo9XqoVCqQSCSQy+XI5XIol8viJn+AQd2gZrOJaDSKmzdvIpvN4ty5c9BqtbDZbHv9EgcC1GnWaDRsL1cqlZjP3G63+Tkb5k4zCYeFvxd+jd6v8GtU4Igi434IryP9l+6N3YpH4fUbFp78o95Ts9lEtVpFvV5HPp9HKpXa9X0rFAoYDAYolUoYDAZ0u11IpVLxHsL969vpdHb9c9rL9/u1ajQaKJVKSCaTuHPnDpaXl2G322Gz2SCRSFCpVNDtdkWa3IBiIIvmRqOBRqOBSCSCTz/9FKFQCHfv3kWj0XjggaNxmFqthk6ng0Kh2KNXLWJQQAuNRCJBuVzGlStXEA6HeRohk8n2+BXuLXq9Ho8IM5kMQqEQ0uk0ms0mJBIJ/H4/zp49C6/XC51Ot9cv95nQ6/WQSqWQTCbRaDSQTCZRr9eRSCSQSCSg0WhYRJxKpZBOpyGXy2E2m6FSqTA6OopgMAi1Wg2r1Xqgx+x0nzSbTV6bC4UC1tbWUCqVUKlUUK1WeR2Wy+UYHx/H2NgYtFotXC4XNBoNpFLpwD57vV4P6+vr2NjY4IO3cK+he6hWqyEWiyEejz+0aDYajVCr1XjttdfQbreh1Wpht9sP7D3UbrfZC/7mzZu4ffs2Wq3WA/v5yMgIPvjgA3g8nj18tS8XvV4PtVoNmUwGhUKB3z99LRaL4c6dO2i1WlxIy2QyKJXKoTl87ncMbNFcLBYRjUbx6aef4u7du8jn89xhJtBJTCqVQqPR8FhMPJ2JAO7dH6VSCVevXoVer8fk5OSuG91BQ7fbRaPR4IU6Eokgn8+j1WpBKpViZGQEZ8+ehclkGuqiOZlMYmlpCfl8Hnfu3EE+n8ft27dx+/ZtWK1WvPbaazCbzbh79y6Wlpag1Wrh9/thNBrx1ltvQSKRwGQyQa/XH9iCB7hXNCcSCZRKJRQKBZTLZcRiMfz6179GLBZDKpVCJpOBQqHgQ8ef/dmf4e2334bNZoNWq+WNf1CL5m63i42NDfzxj39ErVZDpVJBq9XiP280GojFYqhWq4jFYohGow+lZ5jNZmg0GnS7XdjtdlgsFu4+H0S0220UCgWUSiV88skn+OlPf4parYZCodB3jc+cOYPTp0/v66IZAFNMKUwKAB88o9EoFhYWUKvVMDU1BY1GA6VSKTYDBwgDUzR3Oh0W/YXDYYTDYWxsbCCXy6FWqz1SeCGXy6FSqaDRaMT0sgMMiUQChUIBhULBglCibDQaDbRaLXQ6nb7R8UFEvV5HKBRCsVhELBZDsVhkMYpMJoNGo4FGo4FarR6660TrCGkeVlZW+H0WCgUUCgU0Gg1UKhWk02ketzcaDfR6Pd7Itre3eWxqsVjQ6/UOnMiYusrZbJbX4mKxiFKphHQ6jWw2i2KxyNe72+2iUqmg0+kgHo9jdXUV+XweJpMJpVIJNpuNR9B70djo9XpotVrodrtME2i32yiXy+woEw6H0Ww2+X0Ir0Uul0O9Xke1WuVib+da0uv1UK/X0ev1EIvFcPfuXTidTqaGKZXKAydGbrVayGazyGazyOfzLDJuNpt9RXOr1TowTQ3h++z1epBIJOj1emg0GgiHw+h2u7Barexo1O12B/bAedAwMBVmrVbD+vo6CoUCfv/73+OTTz5BsVjE1tYWqtXqrtxKGvepVCo4HA64XC6xaD7AkMlkTNExm82wWCx9HPharYZarYZer3egx13pdBq/+MUvsL6+jtu3b2NjYwNSqRQmkwkajQZOpxNWq5U7hMOEWq2GtbU15PN5/OpXv8KHH36IRqOBer3OBTVwr9tz+/ZtyOXyvg18e3sbMpkM6XQaV69exejoKLrdLkZHR+HxeOB2uw/EJIvoLdFoFFtbW/jZz36GUCiESqWCcrmMVquFYrHYN2LvdDqoVCqo1Wr4+uuvcefOHTgcDqytrcHpdLJFKB3OXvV1bLVaTDOhtSCXy+HmzZvIZDK4fv065ufnuZgW7jkUBkR/Btzbf3Q6Xd8zQo5P1WoVn376KRYWFjA2NgaJRIKxsTF4vV54PJ4DcQ8RyuUy5ufnEQ6Hsbq6imKxyNdXeB0O0jXZCSqcM5kMPv74Y+j1enS7XQSDQRiNRuj1erHbPCDY8wqTTlytVgv5fB6ZTAZbW1tYWFjgEfLDhAPAfU6zUqmEWq1+VS9bxACCpg69Xo87zkJRG216nU7nwHQ0doIOD9vb21hbW+Oxu1arhVqthtFohFarhUqlgkKhGLqDBY2CM5kMotEoNjY2uJsl3JTp+4SgTiRwj5KQz+cBAKlUCiaTCWaz+ZW8h0EBjZETiQS2trawsbGBarWKcrn8wPfStaWCMp1OI51Oo1KpwOv1ol6vY3Z2Fq1Wi9fsVwmaOFWrVdRqNZTLZZ42bG5uIplMYnt7G4lEoi8F82FdcalUynuO8L20222emKbTaeTzeUgkEqRSKT7IHxSQwLbRaCCTySAej6NYLHK3H+gXiR5E4dvOfaheryMej0OpVCKXy/FhfpgF2S8CQhE3JUID99cdmUz2yvaqPS+ac7kcstksYrEYfvOb3/Rxenae9kWIeFp0u11Uq1UOyCkWi+h0OgPNr3xZKJVKKJVKiMfjzENtNptQKpUwmUw4duwYXC4XRkdHWR8wLEUzCRsTiQQuX76McDiMzc3NZ14/Op0O6vU6UqkUvv76ax6Zejwe9lTdzxt8p9PBwsICPvzwQ+44V6vVp3YnqlaruHv3LmKxGJxOJxwOB0wmE8bHx18ZX75SqaBSqSCZTOLTTz9FMpnkhNlKpYLt7W3+806nA5VKBbvdDpVKBZvNBovFsutnrVQqYbPZmLLT6/WQTqfx2WefIZVKcXc6l8vh8uXLiEajkEqlGB0d3fdrj1CIu7m5idu3b2NrawuJRIK7qjRxkMvlUCqVMBqN+/667IRQtE7/PagNnd1Qr9eZTre9vY1yuYxQKIRQKASFQgGbzQa1Wo3Dhw/j8OHDkMlkL13XtqdFc6/XY77c6uoqfve733E3o1qt7uVLE7FPQN7N3W4XpVIJxWIRAGA0Gg/UuKvX66FUKiEWiyEWiyGZTCKVSqHRaEAul8NoNOLIkSMYGxtDMBiEVqsdmoIZuFc0l8tlJBIJXL16FUtLS0gkEs9cNFOARTabxZUrV7C6ugqv14szZ85ApVLtCb3gVaLb7WJhYQE/+9nPUK/XWQ/wtKhUKlheXoZSqYTb7YbD4YDX64Xb7X4lRTNZkyaTSayvr+M3v/kN1tfX+dBIgUj0vcC9Ytjr9XJxPz4+vutnrdFo4HK5eMLZ6/WwurqKO3fuIJ1OM3c6l8vh6tWrWFtbw/j4+IEoikiIu7i4yEVzKBRivjfRKuVyOWsoDmLRDDxISxFTWe+DnHpSqRQuX76MVCqFzz77DF9++SV0Oh0mJiZgsVjwN3/zNxgfH+d7al8XzaTETqVSqFQqaDQaPB4jCyOpVMqdJPp7wL1Fy2w2w2w2H2guM10PGlvQ6FG4OAuFL6VSqW8EKZVKuatoNBphMBggl8sf4OsNE0gcSu+LRrPZbBa9Xg8Oh2OvX+IrAY2l2+02EokElpeXsbm5yfeAUqlkD2sKY9Dr9UO3YLfbbdTrdbTbbd6QVSoVdDodp7M97BCgVCohl8uZ89poNADcT5gsl8uQSqWoVqtoNBo8mh+mQ8XTgNYJKpSp+HsW0LVXqVTQarUwm83Q6/WvbL0WuqiEQiFks1mUSiW+V4T3BlFwjEYjpqamYDQaEQgEMDIysutnrVKpYLVaoVKpmPql0+nYl1m4/tIzuN8np51OhycSkUgEq6uriEQi7EZC+w65jKjVarhcLjgcDkxNTUGr1e7xO3j1oM678P/3+8FKKMYlVkGpVEK5XO7zgqfpaC6Xw9bWFjKZDHK5HFqtFur1OgqFAnq9HuLxOLa2tmAwGDAyMvJSExX3tNIkm58//elP3PmqVqt88ler1X1eqsKRl0wmg9/vx+zsLCYnJ4fWGut5QTcf2Yi1223cvn0bd+7c4QW62+2iXq+z8OXGjRvM1wTA40iNRoPTp0/j5MmTsFgsmJmZgcFg2KN39uyQSCTsjQoA0WiULaOuX78Or9cLr9cLvV6/x6/05YOSzGq1Gj799FP867/+K/L5PDY3N1Gr1TA6OoqxsTFMTEzgzJkzGBsbg0ajGaqiudfrMf+2Wq3CYrHA5/NBqVRCo9FAoVDA4XDs6logkUhgt9tht9uRSCTwm9/8BolEgv+82WzyOD8ejyOdTrMP7348qFPRU6vV2FHkeTZwirHX6XSYnp7GiRMnoNfrX1lMcLfbxddff40f//jHyOfz2NraYjEoHarJIu6NN97A+fPneePVarUwGo0wGo27/mxqNpAffKVSQTabhUqlglQqPRDFz05Uq1WsrKwgl8vh17/+NT788EPed4SWsTqdDkeOHIHD4cD58+dx7tw56PV6eL3ePX4He4OdhTN9bb+i2WyiXq+jXC5jbW0NxWIR8/PzuHnzZt9Ei6ZctVqNE2tpckxOI3K5HBcvXkS9Xoff78d3v/vd/Vs0A2AxRi6X46KPhCI0NtbpdCiXyw+MLahDdhA7zdRVpg4GcTCbzSZSqRRCoVDfzUe8vnQ6jfn5eWSzWf4zOu3T9QwEAtydHVYoFAoWt9H9Uq1WkU6nodPphvq9PQ1ocalWq0gkElhbW2PngG63C41Gw0WjzWaD1Wrd65f8TOh0OiyY0Wq10Ov1LABVq9VwOp27Fs1SqRRutxsulwsSieSB76FOiPD52s/CnG63yxvas9AxdkIYPGU0GmGxWF6pNShRANfW1tgLt9VqsfetWq2GXq+HXq+Hz+fD3Nwc9Ho90y7IevFxoOt20HMCOp0OC3EjkQg2NzdZ/Cns1stkMphMJtjtdgSDQeajHgTsTCrd+Wf7FTS5I3ForVbrs68kNyfam4XT8Var9YCvN9U+MpkMqVQKkUgEarW673teBva80tTpdLDZbOh0OsxF8fl88Hq9MBqNmJiYgFqtZu9U4U1FUaXDaI31LKCOcrFYZP/ZXC6HfD7PoiUySI9Go30bO9FbqGASgpwE6vU6j9QajQYOHz78qt/iC4EwoGNra4uvFW2eUqmUR/D7HdVqFUtLS3yQKpVKAMBFwZkzZ/CNb3wDTqfzoR21QQeFkEgkEi7KyBqtVCpxN/FRHHby1z1IPsy7oVQq4cqVK8wBpgPCs27mQu90jUYDnU7HndhXAYlEAo/HgxMnTnCiYa/Xg1ar5Rj52dlZmM1mTE5OIhAIQKlUMoXkSYp7mpjOz89jfX0d+Xz+wDr0VCoVpsLE4/F9e7h8VtBUjDyr6WC6H4WAtG6QmI9CpgqFAuvWSqUS78+hUIh1BsIpORXbD7uXJBIJnE4nZmZmMDIy8tJd1Pa0aJZIJNBoNLDZbByuIJVK4fV6cfr0aRiNRoyPj0OtViMcDvPfo1GGSqWCXq8fau7t06Db7aLVavWpsbe3t7G9vY1isYiNjQ3mMj/sBtttZEgjfLlcjnA4zEb8w1pYSiQSjIyM4PTp09BqtfjNb37DHafV1VVoNBrU6/W9fpmvBFQ0k+K4XC5Dp9PB5XLBYrHg1KlT+PM//3MW4gwriIsPgJMfW60Wms0mpFIpi/d2otvtIh6PIx6Po1AoHLiJ1U5QgubGxgbW19d5ivWsIAqDSqXijvOrFOBKJBK43W4cP368732YTCaYTCY4HA5cuHABDoejrxv6NN3ibreL9fV1/PGPf0QymWSe5UFErVbD8vIylpeXn0uIu59BSazkV70fhYBUg5B7FRXFH3/8McLhMPu5V6tVzuIQinLpZzzJNZBIJLBarZienobdbt//RbPJZILf74dKpUIikUAul8PMzAxGR0eh0+ngcDj6Qit2XshhvrEeBTpZdTodNJtNdDodtkmKx+MIhUJIJBJIJpPI5XKoVqvM/yEIOXdCUOG8m4H/fuHh0XUTjtLp/R2EhZwmC4VCAel0GslkkkUWxPF1Op2wWCxQq9VQKpW7PkvUMaPiiQoLoWXUoEDo2Sn82sOeA/rzXC6HtbU1bG9vs7qfvlculzPNh6Zar7JT+qpAE6hMJoN0Os1Tq0d1d+iaCgM/Hoa9KgQkEgnMZjMCgUBfV0+n08FgMDwXXYSoO9RFy2azKBQKDxwyFAoF3G43nE4nTCbTC3lfgwbyv6/X69xZpL2InqdutwuFQgG5XA6DwQCPxwO/389Tov0Mou80m01ks1nWRxDPW9hpVigUUCqV/GuYrD8JlAJJWiL6RXanRJ0jupRw/diZlgg8vs4j0bdGo3np12pPi2apVIqZmRm4XC5UKhW8+eabqNfrrOKXSqWQy+Vot9v44osv2AbrIBQ9FNdaq9UQj8dRqVRw69Yt3Lp1C5lMBgsLCxwJTDedsDNMCv+dY2lhsUw85/0GUt1Go1Gk0+mXznEaNPR6PeRyOeYwX7lyhW22Op0ODAYDXn/9dUxMTGB2dhYGgwEymeyBAliobC4WiygWi5DJZNBqtaw3GGShKBneP6pY63a7uHz5Mn784x8jl8shlUoBuL/RazQaTE1NwWKxYHJyEiMjI7yZ7Rf0ej0OgtnY2MD169exubmJfD7/0AO0QqGAyWSCTCZDpVJh2s+ggfaYnQIzut/lcvkzC4Lr9To2NjaQz+exsLCAxcVFbl4IYbFY8Gd/9meYmprC3Nzc0BVATwLip+ZyOXZBoGh1oP95Iiu/9957D7OzszAajfvymgjRbDYRj8dRKpUwPz+PTz75hOkJwP3rQwcKrVYLi8UytMmsxWIRly9fRiKRwKVLl3D58mXU63Vks1m+L6iB9bTe7zshkUhYh/AqrGT3fBZJCWTNZhNmsxmtVos3YyrwGo0GdwNoA9wP3dDdICTKkyI7k8mgVCpha2sLS0tLKBQKiEQiuyZzAWAuHtFXSNxENypF3z7sZt0Pp36ypGk0GgfikLUTZMeTz+c5na1er7Mdm91uh9vthtFoZFrUTutCYbpZsVhEPp+HTCZDp9PhkTtZug3iPfOw1yV8n5Tctra2hnK53FfwkJ+swWCA1WqF0Wh8pSK2VwWhl3EqlWK+5cMoTNS912g0bLdGXelBXJcNBsNLOdyRTRbpSihWfGfXXaVS7fuuKq23JJbdeR2oKCRHG6PRCLfbDZ/Pt4ev+tWBXGnofkkmk7vuv0I6k0qlGvhOs1DQKKRkVCoVJBIJ1kgtLCzs2ryitWTndJCeEZq27wb6u3TNaD3a151mANxNlkgkMBqN6Ha7bFDd6/X4AtD3DOrN8zzYKfArFArY2tpCKBRiKy2KPib7tIc9cHK5HIcOHcLc3BxMJhPTXOjfKJfLCIfDKJfLuHXrForFYl9RSX6qr2LM8TLxKh+iQQFxwtrtNtbX1/HVV19he3sb6XQatVoNWq2WE/8oYEKtVvMGVywWuSMSj8dRr9e52M5kMshkMtxhJhHh6dOnoVKpYDKZBrqYJLoT0RCq1SrC4TAKhQJWV1d3dYsg3YTP58PIyAiMRiNTVIat8/ModLtdrK2t4fe//z1bez7MPcNkMsFgMMBms+H8+fOwWq1YWFjA3bt3eSo2rFqIJwUVCtVqFevr64hGo4jH43zApPWUPJ8DgQB7EdMhcz+h1+shk8kwDz4SiSCZTPYFlNEz4/V6MTc3d+BsYuv1OiciptNpAP2iP7onKATIYrHAbrczHWwQ7xmii1JTpdlsYmtrC9vb2zx9IZvHhzWuNBoNnE4ntFotx9LrdDr4fD6o1WrcunWLHTWIpkrQ6/UYHR2FyWTC5OQkrFbrA7H2LwN7vsvRSYE6ow8DdcP2YwG0U+AXiURw48YN3Lx5kzvOxBl7mFUNjXaUSiWOHDmCv/qrv4LNZsPRo0dhMpkeSDhLpVIoFApYWFjgG5pObK+KG/QyQUXzw7i6+xFUNDebTWxsbODixYtMOahWq3C5XBgbG+OimShQZEkXi8VQLpdx8+ZN3LhxA5VKhScaxHOlsbxWq0Wr1WKXG6JsDCKElKRSqYRsNotMJoNLly4hlUpx0SwseOieUalUGBkZwdjYGEwmEwt3iPaxH9Dr9bC+vo4//OEPqNVqyOfzux7KJRIJc1HHx8fxF3/xF/D7/fjkk0/Q7Xa5Q73fi2YALHAiSkssFmMxE8FoNMLv92NkZIQ5zY/a44YVQpH15uYmotEoR5ILubpSqZSdTLxe74EKMqGimQJ2HsbVValUbIFps9kGdl3t9XooFAocQR+NRlEul/HFF1/gyy+/RL1eR7FYfGw4klKpRDAY5AMm2RCeO3cOJpMJ//RP/4T19fUH9FrAPcvhubk5eDwejI2NwWKxvJJrNXifxi4Y1PHv84JGGrlcDplMBrFYDOFwGJFIBJlMBpVKhb0I2+02C6/o1C4c5Qh9if1+PxwOBycuKRQKLoyKxSKi0ShisRgKhQK63S6PWhUKBex2O0ZGRuBwOIaatylMhdtPXcFHgcZitVoNhUIBuVyO/c3Jq3hiYgKBQID9q2m0XC6XsbW1hXK5jI2NDSQSCVSrVeTzebYHItEKjeLz+TySySTa7TZcLtcrC6x4WjSbTe62RyIRRKNR5HI55u3m8/k+aoFwrWm1WojH45DJZHC5XPD7/VCr1UxrGUaQQLbVaqFcLrN/+U46Ez0/wP2iZ2RkBNPT0xgZGYHNZmMxncPhQK/X4+dNKCoWeq1SMT6sMeS9Xo87bOFwmCPpqWCm6QSJ/8jGTqfTDZxw9kWARvLUCaSDp7DBo1QqWXDs8Xjg9XrhcDheqYvKXoMCxmgdJexcc2QyGfR6PQwGw0B2mEnn0mq1EIlEsLy8zBkARMmg90jPPdUoQhoG0U6sVivGxsZ4LTEYDFAoFBxzn8lkHrCbIzGp0WiEx+OBz+eDyWR6ZU2+4Vz19wGo+9VqtXDz5k18+eWXiMfjuHjxIi/CtVqNvw9An2WTXq+HUqmEx+OB2+3mUYXBYMDhw4dx+PBh7rb2ej2k02lsbW1hfX0dP//5z7GxscFFs06ng9/vh9FoxLlz5/Dee+9Br9cPrQUZJQIetOCber2OcDiMXC6HlZUVLC8vo9frQafTQa1W4xvf+AZ+8IMfQKfTwW63o9vtYn5+HhcvXkQ2m8Xdu3dRLBa5SKbAEJpyAPd4nJVKBfV6HSsrK/jiiy8QCAQQCAQG9n4pFov8fF29ehXXr19Ho9HgaN9arcYHgp0TnEwmg9/85jfQarWoVCrQ6XSwWCyYnp4eykRJKvrIdefGjRtIp9O4cuUKSqUSf94SiQQ2mw0ej4cnfEqlEt/+9rfx7W9/GzqdDiMjI1CpVJienkaj0cDm5iaWl5f5upLgh4IMyuUy8vk8NBoNDAbD0D2XVAwuLi7iypUrCIfDuHjxIqLRKFMRqFOo1+vxzjvv4L333oPZbIbX6x26pM0nAV0Tep4oNEkIk8mE8+fPw+1246233sIbb7zBbjQHBa1WC5lMBolEoi8qmiA8cPl8PgSDQVit1oG7X2q1GnuR//a3v8Xvfvc7TvZrtVoolUpse0t1i8FggNFohFKphMlkYoMCs9kMj8eDd999Fx6PB0qlEiqVCuvr6/jf//t/Y3V1FbFYjCmkO3/e+Pg43n77bUxOTsLpdL6yazVcq9Y+A40t8vk8wuEwEokEW9EIVf9EMdBoNMxxMpvNUKlUcDqd8Pl8MBqNmJychMlkwsjICMxmM3OmaJRIo/pQKIStra0+Oy5hx8jj8bAIYVghk8mgUCj2XWfnUSBesrB7LJPJYDabodfr4XQ6MTY2Brlc3ieCW19fRyaTwfLyMgqFAoD7nQ8hDYEsH4VUB4qVHlSHEhK+JpNJhMNhrK+vY2FhoY8bR04KQoEgodlsIhaLQaFQIB6PI5fLsaPPsKJeryOfzyOTyWBrawvJZJJdZmjyJJVK+YBALhMKhQJ+vx9TU1NQqVQ8WaCRarFY5E6zMNWLJmWNRoPFqMMmzqWOOVlpbW5ucpdZmK4qk8mg0WhYzT8+Pg6tVsvOT/sJtLfQdWk0GhweIwRFqXu9XrhcLjidzn3Zdd8NQntXakY8KjCIGj4Gg2Eg999Op4NyuYxCoYBoNIq1tTUOTet2u33UNbKkJOGnWq3miYPNZuOpNtEFaY1Jp9OIxWJYXV3lhgZBWK+YTCa4XC54PB5otVqxaN4JoTpz5++HHcTnNhgMCAQCsFgsfYuLWq1mKxo6sZnNZh57UQFtt9uhUqlgsVggkUjQbDaRyWRQrVZx+fJlfPbZZ0gkEigWi5BIJCxOsdvteP311+FwODA9Pc1CzGEFcexIlLLfOZbk/xmLxfDJJ59gc3MTS0tL6Ha7MJlMOHz4MBwOBwKBALRaLUqlUl+HcXl5GbVajd0SKPiB7iVSvKvVahSLRdy5cwelUmngaVOFQgGFQgEbGxu4ceMGNjY2EI1G+9YMmUyGo0eP4tixYygUCrhz5w7y+TxqtVqfHWO320U4HMbXX3+NQCCA0dFR6PX6odNZdLtdLC8v449//COy2SwWFxeRz+c5iEKtVvMh/PTp0zh79ixTweRyOWZnZ/ucjAD0BYM4nU52bSGXHvp9KBTCysoK22gNYlHwMJDor1Ao4MqVK7h8+TLy+fwDlp0qlQqjo6NcJFJnbT8WiFRAUaDJF198gWw2+4Crk1QqhVqthlarZSeIYXpmnhU04c1kMjz5W11dRSaTAfBwIaDZbGY+86Cur0KuOkWiS6VSBAIB+P1+1lfJ5XJYrVY4HA6oVCpYrVY2G6DDgdVq5UZOtVrtCz4RNieouREMBnHs2DGMjo7ydXqVVJ+hrIz2W0AF8W/1ej38fj+azSZTLNRqNRfIZMUn9F8W8pyFNzJw3xuSBIYff/wx+2lKJBI4HA4cOnQIXq8Xf/Znf8Zcs2EXzxFPnEQpz+sDOehoNpssxvjjH/+IhYUFVCoVdDodaLVazM7OIhgMctFMxfL6+jpu3LiBtbU15iBS4JDP54PBYMDY2Bj0ej0fzra3txGLxbhjOKggoUooFMLGxgZu3ryJtbW1B8bHUqkUx44dw7//9/8e0WgUtVoNW1tbrCkQ/rzt7W1IJBIUCgW88847cLlcLFAeFlDR/NFHH6FcLvNnSQ0I8qV2uVz41re+hffff7/vPe5W8NjtdtjtdnQ6HdjtdnbfKBaLLHAul8uIRCJYWVmB1+tlKtmwgJI1Y7EYrly5gkuXLqHVaj3QtFGpVExXIpHsID8nzwMqmsvlMlZXV/Hll1/2iWkJlMhJbkbDymd/WpCryPLycl/RLMTO60CTQSoGBw3COoPWATIPUKlUOH78OC5cuMDdYIVCAZvNBpvNBrVaDavV2ldfCB3RqBNfr9dRqVT63FeEB3e/349z587B6XTCZrO9ci3NUBbNdKHJ6kqv1w/lwkTEeEqsqtVqMBqNaDabGB0dhcvlglKp5JtPp9OxoIS6wQ87tVPmO6UGZrNZLhiITzgyMoLx8XG4XC4e4Q97wUwQ5tXTIk5j5v22aLdaLT6dU8eYTv9EuSGnjFwuh2w2y97NtVqNrwsdyMbGxjA+Pg69Xg+fz8ebHQk6hsUnnbjYQps46oCo1Wq4XC7odDrmDzabTXg8nr4xvLAAaDQaLLCMx+N9h4lBR6vVQqFQYAtL2pQo6dFgMHC8+tjYGDweD+x2Ox/MH/W80J9pNBr4/X4WFCaTSf4e4WRwmBoe9HrJdjGZTDL3GwBPAfV6PbRaLbxeLwKBAFsU7qd1ZieazSbvLZSEKHRiorwAvV4Ps9nM6YsHCcViEZFIBIlEgkW2wnuC1lHay6l5RkLAQQMJFTudDrxeL6ampiCTyfiznZiY4LqFTAhMJhN0Oh2HQu2cYtN9QxS6zc1NnnrS99NUnezoqGDeCzHp0BTNdMIRcn1dLhdmZ2f5FDNMEMYQHz16FGNjY7xZU8eHbN+EjhnC3z9sPE6q1Uwmg88++4x5nOVyGXq9HnNzc7BYLPjWt76Fb37zmywMexUeh3sJorrsJ+/mXq/HjiiUOFWr1eD1ejEyMoKJiQmcOXMGwWAQ+Xwe8/Pz2NjYwPz8PDY3N9FoNKDVamE2m3Hs2DFYLBacO3cOr732GncLZDIZotEootEojxZ3KpoHEe12G/V6He12Gzqdjnl17XYbPp8Pf/u3f4tgMIjx8XGMjY0xLzeRSOB3v/sdQqFQXwR7LpdjR5s//elP2NzcxKlTp3Dy5MmBv58KhQK+/PJLJBIJ3Lx5E/F4nGk9MpkM4+PjOHbsGEZGRvAXf/EXrIt4XMEshM1mw1/+5V8inU7jpz/9KdbW1gaW6/6koKCOdDqN+fl5rK6uYnt7G71ej52KdDodDh8+jNnZWTidTrz++uuw2+0wGAwDf188D/L5PC5evIitrS2srKz0rQcUX26xWDA+Po5Dhw5hYmLilQq29hrdbherq6v4zW9+g0wmw3oRYWw2gfYms9mMYDCIiYmJgWxgqdVqjI+Po9VqQS6XY3x8HBqNBqOjo9BqtTAajdDpdNzMozqHDgW7pc5Wq1U0Gg1cvHgRH3/8MdLpNB+4dTodzGYznE4nzp8/D6fTyWsuhWu9agx80byTuyz0UaWbbFg7zVT0Eof0RYFENzR+jUQiKBQKaLfbfCokzl0wGGTV6n5c4IUdUeEDPGiL0bOi1+uh2WxyeiTZPhEfmaJYLRYLd5gp9S2Xy/Hpn7qM1GmcmpqCQqFg3inZkgm79LQIDrJnMQUkEadSqVSi3W7DbrdjamoKU1NTsNlsHKzk8Xggl8v74ufb7TYLCqnbnEwmoVKpdlXCDyKoK0h2lkLfU1qDvF4v/H4/gsEgRkZGnpqzrlKp4PV6eaMbdvR6PU66K5fLyGazSKVSqNVqAO4VOjqdDiaTCR6Ph++lkZER1pXsV9C6Q/dUsVjsmyLIZDLen4W/yOryIIACy8jedecBUrhuKBQKqNVqaDQa6HS6gXXmkclk0Ol06PV68Hq9aLfb0Ov1mJycfKbXTO461WoV8XgcKysrHJRColqj0QiLxQK/3w+v1wuv1wubzbZn9cpAF83NZpOFBbTQ0wZGRvtut5tt2A4yhH6oly5dwpUrVxCLxXD79m0kk0m0Wi3Y7XYEAgG8/fbbGB0dxczMDHeX99tCRoEc+Xyex/MWiwWjo6Nwu91DJUJ6GOjz3tra4vS/UqnEnsJHjhyB2+3mxfv27dv44x//yKlvzWYTRqMRVqsVgUAA58+fZz6mULxEG2StVkO73YZGo4HJZML4+DjOnDkDp9M5cOleEomELZscDgc0Gg3K5TKvH2QbR5w4UnmPjY3B6XRyzG02m8WNGzeQz+f5Z5PFFinhBxmUHppOp7GysoKNjQ2kUqm+4kYmk8Hv9+Ps2bOw2+3Q6/XPLPLcD8EvnU6HD6Dz8/O4efMmIpEIlpaW2DIMQJ8n/szMDObm5pimMegi2ecBcU9pnL69vY1CodBn2SiRSHDixAm8//77cDgcCAaDMBqNA0k5eNFot9sskCQhIK09QL+Ijg71gUAA09PTQ2NlSQdt2iuedT+laUU8Hse1a9cQj8e5ECerwtdeew0WiwWzs7Pcdd7LZ2vgi+ZEIoFcLodcLse59p1Oh7k1brf7QDyIjwPZ2tTrdVy+fBn/5//8H5RKJd787XY7F0dvvfUW5ubmht5W7mHo9Xq8YOXzebRaLUilUpjNZoyOjrK/7DCDPu9ms4lQKIRLly4hm82iWq1CIpHA6XTi0KFDMBqNTOG4desWfvWrX6Fer6NWq6HT6UCtVsNutyMYDOLcuXOYmpp6oOihAxkVzdRJHBsbw+nTp2EwGAZStGKz2WC1WtHr9XD8+HEA/WECOw+LVDR3Oh3U63VoNBqsr69zCAqBOK5k8j/IaDabKJVKfYIkKpqpsCN9w5kzZ6DVarloflpQwTzsE6t2u81+s5cuXcI///M/o1wuIxwOc5cZADuNUMFz6NChfdmAEILCjWiETkUzpdYSpFIpTpw4gR/96Ec8xdzP10WIdruNfD7P6aPpdJqdZHZeA1qH/H4/zp8/j5GRkYFrQDwMJpOJvfmf9bPN5/P47LPPWCQZj8c5BEev1+PcuXP44Q9/2OftvtcH0oEumoWbExnl7xy3P8kCTR25nVzg/fQQk10LhQjQSRcA276MjY3B7/ez4G8YKS1PilarxUpcGhtSAUHOEsMM4oIJ0/9oREoiHIVCgW63y3ZiuVyOfVRNJhPkcjl8Ph8mJyfh8/mg1Wr77gkqzNvtNnK5HI8ZjUYjpFIprFYrB6cM6r0k1EI86fcTnUPIzxOCRIIymQyZTAb5fJ7dAQbpOpB6n3zZybu70+kwh5LEkC6XC2q1GkqlcuiL3ucF3e/keV4ul1Gv11l8rdVqodFo4PP5OCabLLf2057yMJTLZfb2pr2Z1lMSrpOd2EHzygfuF8107wgFsEI+M2UJqFQqDhIatiTeZ73fSYhMVMF8Ps8uPiRGdzgccLvdfa4rg7A2DXTRTItXKpVi+6LdbH4eh0qlwmNrcp8gVfh+QaPRQDQaRT6fRywWQyaTYQ6zWq3GyZMn8f7778PpdLK6db+i1+vxwk6d5l6vh1QqhcXFRe6aDjPq9Tq2t7f70v8odEStVjM/rlgs4vr168hms7h58yY7tBw9ehQ2mw3nzp3DuXPnYDKZYLPZ+v4NWvxrtRpu3bqF3/3ud1Cr1ZiammL/Z5fLte+eJRIxBYNBVCqVB6YSlUoF165dg1arhdPphN/vh8ViwcTExEB1iTqdDq5du4Zf/OIXSKVSuHv3LvL5PBd+Pp8P3/3udxEMBnHy5Ek+SB20ImcnKpUKFhcXEYvFsLS0hGg0yrHYWq0WU1NTGB8fh9vtxjvvvAOn08me3fsd3W4XoVAIX3zxBUKhEIuPaXJhMBhw6tQppmQchGuyE5VKBQsLC4hEItje3kaj0eiz4qPCme4pg8GA48eP45vf/CYfNvYzut0utra2cPfuXWxubmJxcRGhUIgtPj0eD374wx9ibm6ObRt3ExHuFQZ6p6PuIHGZnzbMhLxnSchBIjBKvdovGz11BCmmtlKpcKAHFVAOhwNjY2MHRozRbrdRq9XY5gcAiyN3i3odNpBHarFYRLFY5I6GWq3uE+h1Oh0kEgk+UHW7XRaDulwu+Hw+jI6OQqPR8EFKmGJFk4tsNotYLAar1QqDwQCn0wmTycT/3n4DiSN3BnkA9zrN9Jyl02lks1lIpdKBSwkUhvxQl7ler7MGRK/XY2xsDBMTEy/dn13IdR7U+4Xu+2az2desqdVqkEql0Gq1MJlMcLvdGBsbg8vlgtfrhd1u3+uX/kpA3VJymMlms7w3A/fT2qxWKx8kDhro/iHRKE12dttvyI6PGhbk+76fIbyH4vE4kskkCoVCH+dbpVIhGAxiamrqlQeXPAn23SdEvrzFYhF3795FoVDA1tYWQqEQtFotRkdHYTQaMTMzg+np6aEvHguFAntB/tu//RsikQgWFhYgk8lgs9nw5ptvwuVy4fz58/D7/X3F0UECCcKmp6cRDAaHzqJwJyhhjWzger0eZDIZtFotH4qIukG8w2q1Co1GA7vdjuPHj7PdmtFo5DEqjfSpGLx27RoymQwuX76MVCrFwjEqJvcrZDIZu8pQ177dbvdxmKnr9tlnn2F0dBTj4+Mv1AXnWSGMfKZmg3A0TBaTHo8HwWCQD9PPuxaSEr5er/O4nopzrVYLv9+P6elpWK3WgXz+stksR4tfvnwZW1tbiEQikEql0Gg0CAQCrBU4efLkwHL5XwYoXbZSqWB1dRW3b9/mkboQFO5C3ufDvr8+DUggGYlEcO3aNaysrGB7e5u78DvT/8xmM95++23mxA/qYfJFoV6vIx6Po1wu48qVK/jTn/6ETCaDXC7H9FnKoqDEwEErmIF9WjQTrePSpUsIhUJYWFjAnTt3YDabcfr0aTgcDqjVakxOTg5My/9ZQAKvSCSCxcVFfPTRR1haWmLutsPhwLvvvoupqSkEAgH4fL59x+V+UkilUthsNkxPT2NkZGQgN+2nAdEzNjY2kM1muSAif2/g3iJeKBSwvb2NUCgEjUYDrVYLm82Go0ePYmZmBg6Hoy+EodvtstPC9vY2PvzwQ0QiEaRSKSSTSbZ3pFCH/Qh6fkgVTkXzTuFfr9dDKBTizvO77767h6/6PmhKQEUzBZgQiFbidrsRDAYxOjr6QtYE6rLROBq4n3BmNBrh9/sxNTXFPPhBAh0WV1dXsbq6yomZzWaTnysS/R06dAjHjx/fV9aVj4MwXXZ5eRm3b99mvZEQJI6cmJjY97Z7QpBAMpPJcNF8586dB7yrhbBYLHjzzTdx5MgRjqLfz6A9K51O4+rVq/jjH//Yd8gWFsvCfWzQMNC7HnEqM5nMAw+nsGAkr0y5XI5KpYJyuYxUKsWBDOQqoFQqOdt8mKOVSSDZarUQDoexuLiIjY0N5pa5XC44HA4eu5rNZrbV2u8PJok+if8utCjUaDSwWCwc2DHsEHYQhZBIJOh0OuzZ3O12WblNnz/RLoiuJBT9ra+vY3l5mUewpVIJnU6HxW5Go3Hf03woddNgMMDr9TJHXkj3Ae4X2IN0P1HToFKpIJ/Ps2C00+lAKpWy9aLX630hn2Gr1WJKw9bWFlKpFHK53AOiVDqADGJoQ6/XQz6fx9bWFqLRaN8eQZMVl8sFj8fD0diD9h5eJoR7MV0boj8C4M+Yip39fKjeCZrspNNprK6uYmtri9M2d7oQSSQSnryQP/x+SuJ9FFqtFlKpFOLxOAqFAprNJuuuqMknpAsOKgb6rq5UKrhz5w5WVlYQDof7uiXdbhfLy8v46KOP4Ha7cf78eVitVmxvb2NtbQ0bGxv405/+hFAoxPHCMpkM6XSaR9fDEEqwG+r1Ora2tlAsFvHhhx/il7/8JdvLSaVSvP766/jggw94DG82mw/EQ0n+qvV6HcVikWODqWB0Op04fPgwTCbTQD+UzwsK4hBynQFwTGun08H29ja7KMjlcnaEqNfruHbtGubn51Gr1ZDP59FoNKDX6+FyuTAyMoKZmRnMzMy8kJH+oEKr1UKlUqHdbuP999/HsWPH8Mknn/R5HAP3uM96vX6gnDPK5TJu3bqFZDKJhYUFbG1t8QFKKpXi6NGj+Hf/7t/BZrPBYrE8179FxWY6ncbm5ib+3//7f9jc3OT7i5xIyDKKQmMG5VoRut0u7ty5g3/+539GLpfj2GPitXs8Hly4cAGHDx8+MKI/IUgcSVOrarXKh3bgnv2YxWLByMgI31f7eY0l0HSl2Wzi0qVL+Jd/+RcOkKI/F66REomE6RiTk5MIBoNwuVwD9zy8DBSLRVy5cgUrKytYXV1FvV7n9UGlUuGtt95iX2+n07nXL/ehGOiimcaeu3WaATBfs9vtolKpQKfToVgsIplM8q9EItH388jbdpgtx9rtNorFIrLZLLa3t7G0tMSFoVKphNPpxMzMDC9kB4V3JxSOUqiDMPVMrVbDZDLtm04zif2EGzgdBIWcVuC+9Rp1oQuFQt+m1mg0kEqlUK1WsbGxgY2NDX5GyMvXYDDAaDRyguWgjdhfJKj7QV7w5AywEyR+GqRRfbvdRqFQYDs86noB996XyWSC3++H0Wh8Ln0DCefq9ToKhQLS6TS2trawtrbGSnjqNBPVZVCdVnq9HgqFAqfbkVUlcO+aUcKm3W4/cAUzcL/TnE6n+SAuTOdVKBQ8WqciaJCeiZcFoX4glUphdXUVpVLpAa43cH8qRQ0Iu90OnU439JkBjwNNOmu1GlKpFBKJBEqlEj9fZFbg8XgwPT098CE4g7d6AX1xtSTO2Fk0dzodbG1tAQCsViuy2SxMJhM2NjawubmJXC7XF0gA3BOlmEwmWK1WpisME2ihSqVS+OSTT9iuhUbnPp8PRqMR4+Pj8Hg8A0ukf1moVCq4ffs2d72oy0yLOI3F9oPjg16vZy4cpSmRALbRaPSpt2kU2Ol0OCHxiy++6DtM0cGz1WohFosxx4xSmCYmJjAxMcHd5v0uBCRQ0AWNE4WgQpr8VQ/Ss0aFeaPRwKVLl/D1118jHo8jEolwwazT6eB0OnHu3Dkeuw7yc6dUKqHVatHpdJDL5QDc93tPJpO4du0ayuUyp2YO2/7xPKhUKlhaWuKE2Z1TWkqHGxkZgdPphN1uPxCdZpr6knYknU73CWHpHqFDl0ajwczMDE6cOMEWhvsRFEHfbrdx584dtpW7ffs2YrEYTy+dTifeeOMNeDwevPbaaxxWN8hr6UDueo1GgzeqTCaDTCaDarXa96CSCCcSiUCr1WJxcRFqtZojgul0IwR1Wex2+1DerN1uF61WC+l0Gp988glu3rzJhY7BYOAI4LGxMXg8noG+8V4GqGje3t5mXhklAWq1WhYaUELVMEOn0+Hw4cMIBAK4evUqpFIpms0mW+pls1nkcjlUq1Xo9Xq2H8vn8ygWi4jFYg9s+vR8EcfZYDDg9OnTCAQCOHXqFE6ePMmFxX7o1D8JyNqvUCg8cHAnfqLb7YbNZjtQz1ur1eIAkMuXL+PnP/85KpUKcrkcms0mP2t2ux2vvfYaJicnB7rQpCmdwWBgniUAnkpmMhlcv34dmUwGEokEfr9/YN/Ly0C1WsXS0hJu3rz5wJ9JJBIWevp8Pjidzgc83/crqGhOJpPY3t5GNpvlXADh/aFSqeByuWCxWLhoNhqNQ1mHPAmEU9/r16/j5z//ObLZLJaWllAsFnlaGQgE8MEHH2BqagoOhwMOh2Pg9+aBKZppzNHpdPgG3NraYtHBbh6oJF5qNBr8fdVqlUfyNB6yWCywWCxwOp0IBAIs5hiGRY9snDqdDrLZLLLZLDY2NlAoFFCv11md7nQ6WdxjtVoPTFEjBHUFqVjsdrss6KJUIQpvGIbP/lEgLlin0+HpSb1e5/dNYljyKCdHAyF9QwgasUqlUo5cd7vdGB0dhdvthsViYXHPoC9qBNIyUCx2t9uFyWSC2Wx+7N8lQSkp4om6QtePaDFms5m7a/u9aO71eiiVSiiVSiiXy1hfX0ehUEAikejzhlcqlbDb7fB6vRgdHYXdbmfh6CCDBJIajQbhcBiVSqUvTZSaOKlUCrFYjGknpBVQq9XcgW+322xZKJVKd01apMMppaM9Dnq9fk+9j8mZimheRMlQqVRsX+jxeAZ6tP6iQFPfarXKPvgkxCfaEnC/06xUKuHz+eBwOOByudiucL/u06QvqlarnI5YLBbRbDbR6/VYlG+xWGA0GmEwGIammTUwRXOn00GpVEKtVsPFixfx61//GplMBpubm31iJoKw69xsNpFKpZivCYBtsRQKBd544w28/fbbsFqtOHToEMxmMywWy1B8QM1mE7FYDJVKBV999RUuXbqEZDLJnVSv1wufz4fx8XH87d/+LXvFDsN7e9Go1+vY3NzE0tISMpkMF80kTCF+NxWHwwy5XM6CxqmpKbz++utIp9O4desWc/0zmQy7aOy0HdsJhULBLivvvfce3n33XRiNRoyOjkKv17MgalgcWHq9HqLRKDY2NlAul7G5uYl6vY5vfOMbuHDhwmM//0qlgmKxiO3tbVy9ehWrq6tMWwHuu2vMzs7iO9/5Dgdf7FdQQ2NxcRE3btzo67xSMiUApkJduHABf/7nfw673Y4TJ07AYrEMtBhZJpPh6NGj0Gg0WFpawtraGr8nKo6EXysWi9BoNLDZbOxN7Pf7WeyUy+Xgdrvh8XjYeUNYTJIDUrvdxtLSEpaWlh4pTJfJZDhy5AiOHDmyZ2sXvT76r0ajwaFDh2C1WvHtb38b77//PrRa7XOLS4cB1EWNx+P47LPPsLq6is3NzT5HEeC+ENBqteK9997D9PQ03ysUo70f0Wg0uPO+urqKlZUV1hjJ5XJ4PB4cP34cY2Nj8Pv9QxXsMjCvkjqqtVoN8XgcKysrKJVKTD943N+t1+u8octkMsjlclZtE8HcbDYjEAhAr9cPzQdEJ7ZCoYBoNIrl5WVOI2u321Cr1ZzARKbyBxV0rYjXC9zvyJLgYlDy658X1Omh0ajT6US32+VFuFKpMLf0UaDrQbQLg8GAQCCAI0eOQKfTcVEwqMXOw9Dr9ZimQlZitVoNhw4desB+b+ffI/cRSlyk7iJdT/JwVqvVMJvNA0eFotQ9EjPSe90pEqVNjL6HEvt2gjqMRMnY3t5GMpnE6uoqstks872ps6rRaOB0OjE5OckNikGKF38YaH8olUpsxUfXjBJXASCZTMJkMkGr1aLb7UKj0cBqtfKkM5FIIJVKcVx5q9WC2WzuW3do+kGuNdFo9JEppTKZDIFA4OVegF1Az8NuqXYKhYLFkR6PhwvBgwCacJMVZSwWQ7lc3tX+kywLvV4vgsEgCwD3I6gDT+5NRAcU1nEKhQIGgwEOh4PXhkGfQgkxMJVjtVrF8vIyMpkM1tfXkUwmeVF5UlDqm8PhgNVqxalTpzjIYXJyEmq1GlqtdqhGzGS7F4vFsLCwgFAohEajAalUCoPBgKmpKbz55pvwer37PrP+WaBSqeB2u+F2u4eGkvOkoEInGAzijTfewNraGm7cuIF0Ov3IvyeXy9kijcItjEYjpqamYDabcfToUdhsNiiVyqFWwJdKJcTjcfZPLZVKmJycxPj4OPR6PRwOB1vwUSeeaF7z8/O4ceMGYrEYQqEQCoUCF0g2mw2vv/46nE7nnnb+HgaNRoPJyUnYbDasrKzA7XajVquhWCyi2+3i1q1b+Kd/+if2oVapVJicnOSwp53rY7lcxtraGvL5PK5du4br16+jUqkgHo8zz9tgMMBms+HChQtwOBw4f/48AoEA+zIPOshdh+LlDx06BLlcjng8jng8jmaziWQyiXw+j1qthlAoBJVKBZvNxoEeIyMjyOfzuHr1KvL5PNxuN1wuF9RqNZxOZ19h0Ol0mDK1srKCtbU1APcPsTsPdXK5HH6/H91u95XdbzSticViuHv3LlNI6HXp9XqcPHkS4+PjCAaDQ7tOPC263S67Vq2vr3MqKz0LdNiiesRms2F8fHzfCyR7vR6Wl5exsrKCbDaLmzdvchgOrZ0OhwMGgwEnT57Em2++CavVOnR1y8AUzbVajf2Y19bWkEwmn6pgBu51FSkqeXR0FD/84Q8RCARYlDIso2UhyuUy7ty5g7W1Ndy9exfhcBhSqZRTcyYnJ/GNb3wDJpNpT/lugwgS95Djw34rmgFw4WswGKDX659oAaK4bY1Gg2PHjuGNN96Aw+HAa6+9BpvNti94371eD+VymYue1dVV5PN59ke1Wq3QarUsoKQkO7LU+vLLL/Hhhx8yN7zRaEClUjF/k5I2g8HgQBbNExMTqNVqmJ+fh9vtRrFY5JjfmzdvIhQKsZWgXC7He++9BwDcQRdO4hKJBD755BPE43EsLi7i7t27fZZjxM8cGRnBt771LUxMTMDv97NYbljuI7VaDZlMBqfTibm5OS5uEokEWq0W25eGw2Ge9Oh0OuZw2+12lMtlrK6uolKpwGKxsEe+yWTqOzxQN67b7SIWi7Ewl17DzuumVCpx4cKFV5ot0Ov1EIvFMD8/j/X1dZ7mAvfWVpPJhJMnT+LIkSOw2WwD9xy8LPR6PWxvb+Orr75CJBJhKpwQ9PnZbDbMzMxgcnISHo9nXwsku90uVlZW8PHHH3PRTFPxTqcDpVLJ8eonT57EN77xDV5vhgkDUzRLJBIWU8jl8gcWB/L4FPrNUieMkogUCgWmpqYwPT0Nr9cLo9HIXx+2B5oiSnO5HDKZDAdP0KhndHQUZrOZ36dOpzswo7GnxaNGz/sBJMix2Ww4cuTIYxXZNB6jKHm3281FJD0r++Fa0WhZKBhOJBJYXl5m3qXBYGBP73q9jmQyiWq1ikgkwk4kxGPW6/UsKLbZbAMrbqNimNbHnZ1LEjjSmqhQKBCNRnH37l0oFAqmMREymQyi0SjS6TRKpRKnbFJX1GazsaUcXZdh4r8TiNKiUqlgNpthtVpht9vhcDjYPotEgZQ42mw20e12USqVIJVKUavVuINcr9dZINnr9foOIrTfUQPEYrFApVLBbrdzd174/Uqlkv3CXxWEFKdisdjn+U4QUoD2O0jkWa/XOW04lUqxuI2uAXGVKTOBOLvDMHF5FhA9ttFoIJfLIZ1Osz+8kC1AkxmPx8MhR8M4yRyYopluMLK6EkIikfAiRp0RuVwOp9MJp9MJg8GA0dFRGAwGBINBHgvS+HXYCmY64VNQwO3bt7GxsYF2uw2dTodgMIgf/vCHCAaDmJ6eRjAY5MODiIMHUrBrtVr89//+33cNAhKCiiqpVMqKfOqa7ceDFy3q1WoVX331FRYXF6HX6zE5OQmdTscH1Hq9jkQigXq9jnw+j0KhwAW3RCLB6OgoTpw4gWAwiNnZWfj9fj7IDxKIo06NhZ2bk3Ajo6/96U9/wvXr13c9MJErDR0sqGAmP9Vz587h3XffHRrR38NAhwCj0Yjp6Wl+H3SP0MQhlUohmUyyQFAqlaJeryOTyfDhDLg3JaTUM0qiJej1ekxPT8NgMMBut0MikcBut/PUx2Qy9U3GJBIJ3G73K30+e70ekskk7ty5w4fJgwyyV0wmk/jkk0/whz/8AbVaDaVSCcB90Z9CoYDb7YZer8fZs2fx7W9/G1ar9Ylce4YR9XodoVAIxWIRd+7cwY0bN9g1gw4UwL0GBdlPjo+Pc17CsK0TA1M0UweVAiiE3Q6JRAKtVguz2cyqdZlMxmN3s9nMfEyfzwev18sn4GEE2RCl02lO9SoWi1wYmc1mjI6OYmpqig3Sh+3Ge1kgK7Cd4qZhfDifFHSvK5XKfbswPwuEnU4Sv6XTaaTTaej1enQ6HWi12geKZip66GcQXcVoNMLtdsPpdMJkMg20mIeeAYVCwUUzPQO7edhTgurjILweJPpzuVxDJ/rbDcIJptFoRKfTgcPh4K4ZFcmVSgVKpbJPGNdut/tSFwlEY9lpmUoWmCSCItrPzMwMT36sVuureeOPQK1WQ6FQ2NXB6qCBEoopJpsOSfTZCicVRqORBdo+nw96vX7fdpqFCcW5XA65XI6nd8TBp8MnWe6Rw9cw7skDUzSTbY/dbscPfvADzMzM9HkdUkeMbkzqCNCYmcZaRqNxaB0SKMe+1WphbW0NFy9eZK9dtVqNI0eO4OjRoxgZGeGC2WAwDOWN9zKg1WpZzLSysoJOpwO3243JyUmMjY3BZrOJ1+qAQCKRQKPRwG63o1KpPDCFIWGXUqnk0Xur1XqgmDSZTDh+/DgsFgvOnj2L06dPw2KxDIV+QCqVYnZ2Ft/73vfYGiuZTKJQKLCwkagWjwO5AIyNjbEN4eTkJEwmE44dOwa/3w+NRrMvCgO1Wo1AIMAirunp6b4pRDQaRTwef65/w2w2s/0pceXJuUav1+9bsdgwg2iRRqOR6ZJkZ1mr1RAMBuH3+2GxWHDy5Em+dxwOB5RK5dA28R6HTCaDjz/+GOvr61hYWEC1WoVEImG+/9mzZ3HmzBk4nU6cPHkSdrt9qPVFA1M000IFANPT0/jud7/7wPfsvMjC0ZXw98MKEofU63UumqkDplKpcOzYMfzgBz+A2WzG+Pg4dDrdUL/fFw0SRpLNU6FQgNvt5gjo/SzCEPEgdDodrFYr8vn8AxtWs9nscxmhLtpu8cDnz5/H6Ogojh49isOHDzPvd9AhlUoxMzMDh8OBUCiEXC4Hg8GAUCjEHsG7dZ0f9rOoaH7rrbfgdruZSkDWnsBwr78ElUoFv98PoN+CkCKSk8kkUqnUc4nyDAYDZmZmYDQaoVQqmc4yrN23gwC1Wo1gMAin04larQaJRIJ4PI5SqcQi4/Pnz8Pj8eCb3/wmXC7Xrk4o+w2ZTAa/+tWvcO3aNV5PVCoVrFYrdDodvv3tb+M//+f/zAE/w349BqZoBu4vuMNMrXgWUOoU8eLK5TKy2SwqlQqnmCkUCuZFkc/0MN94LwMKhYL5gTRO9Hg8/PAOI89SxLOD7OFyuRx376ijDNwvlIn3S4FIQh9mv98Pr9fLKV7UMRqW+4i46nTQ1mg0LDSr1+vI5XKo1+ss5FEoFDxK3lnMyeVyBINB+Hw+WK1W6PV6DpAaluvxpNjZhCGxLSWwPq+LhVarhVar7eOcixhsUPIjANhsNnbmKpfLKBQKmJmZwcjICBwOB1vb7mdQOmgymUStVmPPd3pWvF4vLBYLrFbrA8LWYcb+eBdDjlarhUajgUwmw0KD27dvIxqNwmKx4NSpU3C5XDh27BhGR0d5MxPRD6PRiLNnz6LZbOL8+fOoVqusSKcIbREHA1KpFB6PhzmjPp8PlUoF+Xwe+Xy+7/vMZjNsNhv0ej38fj/0ej18Ph98Ph8sFguOHTsGs9ncd/AaliKR9CEkOKMp1traGrLZLK5evYpMJoNwOIzt7W3odDqcOHGCY9SpW0ad5uPHj+Po0aNQKpUsIB2Wa/E8oATOXq8Hs9nMnehnBYUuDdMB7KCDdA3dbhcnTpzA9PQ02u02PvjgA3S7XU5OVSqVQ+c9/LQge7kbN25gfX0dhUKBHWFoUvPee+8hEAjg8OHDQ0mXfRjEKmIAQOEKtVoNyWQS0WiUU7YogtPtdjOXcj/dgC8Scrn8QES4ingyUIAL+eUajUa0Wi3UajXuFJJnNf25x+OByWTC+Pg4xsbGYDQa4XK5oNfrh1IrIRSJ6vV6VvhLpVIkEgn2HC4UClCpVNDr9exK5Pf74fP5+opmv9//yq3PBgHkigDgQDUsyJWJKEnUaSXB5H4Ytz8pSAQL4MCLrnu9HgqFAsLhMJLJJIshKTjLaDRiZGQEwWAQJpNpX90fYtE8AGg0GigUCojFYrh69So2NzfRbrdx6tQpeL1eXLhwAT6fj8MCRIgQ8XhQsej1evHXf/3XSKVSqNVqD1hnUTAM8fDov+SdS8X3fnj2KHCBLMzMZjMqlQq79Gi1Wvj9fuh0OhiNRi4MqDgi+pOI/Q+pVIrDhw9DIpFwQ6fRaPDn73Q6MTU1BYvFMpB+5SJePISezNvb27h16xbS6TQqlQpkMhmmp6dx/PhxjIyMYG5ujika+2nNEIvmPUav10O9XkehUEA8HsfVq1extLSEU6dO4eTJkwgGg3j99dfh8/kOzChUhIgXAeqyejwefP/73wfwoNCPsJPDul/ExbuBDgS9Xg9HjhxhsRtBGCAlxEHpKIq4Byqa5+bmADz47JCjinhPHBx0Oh1UKhVUq1WEQiHcunULlUoFtVoNUqkUk5OTeP/992G323H48GGYzeZ9d3+IRfMegpSm2WwWW1tbiMViaLVakEqlMJlM8Hq9cDqdnJI4bKNhESIGAcKxqoh7EAtgEU8CouaIEAHcNy3odDocdtRqtXgaZzabYTabYTAY9m2TT9xJ9gg05mg2m5ifn8fHH3+MXC6HZrMJi8WC2dlZvPPOOzCZTLBYLKJbhggRIkSIECFiz9Dr9Tg+nly+ZDIZRkZGoNfrMTU1xbavw2DL+SwQi+Y9QrfbRavVYpu5UCiEWq0GmUwGvV4Pi8UCl8slWqWJECFChAgRIgYGQqqOQqGAwWCA1WqFyWSCwWDoS3TebxCL5j1CqVTC1atXkU6nsbi4iGw2C4PBgG9961uw2Ww4ffo0+xvu15tPhAgRIkSIEDEckMvlMBqNUKlUePfdd2G32yGXy2G1WqFWq3Ho0CFoNJp9PRmX9J7XpV3EM2Fraws/+clPsLGxgeXlZdy9exdTU1P4b//tv2F6ehoulwtOp3Pf3ngiRIgQIUKEiOEDcZspIIrqlIPAgRc7zXuITqeDTqfTd+PJZDJR9CdChAgRIkSIGEhQrXIQp+Bip1mECBEiRIgQIUKEiMdAbGeKECFChAgRIkSIEPEYiEWzCBEiRIgQIUKECBGPgVg0ixAhQoQIESJEiBDxGIhCQBEiRKBSqWBjYwO1Wg0GgwEGgwFKpRJmsxkKhWKvX54IESJEiBCx5xCLZhEiRGBrawv/43/8DywtLeHkyZM4ceIEXC4X3nzzTdjt9r1+eSJEiBAhQsSeQyyaRQw9er0eJxTt/D3Q7yEpkUhE7+sd6PV6KJfLuHPnDubn56HVauFwOCCTydBqtfb65YkQIUKECBEDAbFoFjG06HQ66PV6yGazyOfzqNVqiMfjqNfrKJVKKJVKkMvlTDUIBALw+/1QKBTQarXsM3mQPbHz+TwKhQLi8bhYIIsQIUKECBGPgFg0ixhK9Ho9DodJp9PY3NxENpvFrVu3kMvlEIvFEI/HoVar4fF4oNfrcf78eajVamg0GkgkEqhUKgA4sEVzr9dDoVBAKBRCPB5Hs9nc65ckQoQIESJEDCwGsmimiMZWq4V8Po9Wq4VGo4Fms4lOp4Nms4lut9s3fqeOocFggF6vh0KhgMFg2NcZ6AcR5XIZ5XIZnU4HtVoNrVYLq6urWFtbQ6FQQCQSQbFYRDqdRrFYRL1eh1wuR7lcxvr6OnQ6HbRaLex2OzQaDex2O+x2O2QyGZRK5YEooLvdLur1OlqtFra3t7G4uIj19XXUarW9fmkiRIgQMVQgSiDVKM1mE/l8Ho1GA+12G61Wq69W0Wg00Gg0LLRWKpWcBCxi8DGQn1Kr1UKr1UIqlcIXX3yBVCqFWCyGRCKBarWKWCyGer3OxTWN21UqFU6cOIHjx4/DbrfjxIkTsFgszGUVMdzodrtYW1vDnTt3UK1WkU6nUavVcOvWLSwuLqLZbKJaraLb7aLZbKLVakEqlSISiUAul2NxcRG//OUvodFoMDIyAr1ejzfffBMXLlyAXq+H2+2GWq3e67f50lGv1xEKhVAoFPDhhx/iX//1X1GpVJBIJPb6pYkQIULE0KDX66HdbqPb7SIejyMSiSCVSuHixYtIp9P8i2oVmUyGyclJjI+Pw+Vy4Y033oDT6WTHIlFzM/gYyKK53W6jVquhVCohEokgGo0iFAohHA6jVCohHA6jUqnwCY+6yiqVCnq9Hg6HA91ul+2zDsIpjugKQiHcs0AqlXKe/CA+vKVSCdFoFJVKBfF4nK3S1tbW0Ol0Hvr3er0e0uk0AECr1aJYLMJgMGBsbAz5fB4AHvn39xM6nQ7K5TJ35ldWVtButwHcF0sedK73QQatIbTRP816QvfPoxoVwjVKLBJEDDN6vR5arRba7TaKxSIymQxisRhWVlYQiUQQj8cRj8f77vd6vc71yaFDh6BWq6FUKqHX6/l7RAwuBqaSFN58ly9fxuXLl5HNZnHz5k1ks1kUi0UUi0V0u10esdPNJZFIoFAoIJVKsbW1hUqlAo/HA7lcDo/Hg0AggEAgsC9vRhoJZbNZXLt2DdlsFoVCAcVi8amLZ6lUihMnTuDYsWPQaDSwWq1QKpUv6ZU/PbrdLhKJBG7fvo1isYh4PI5arYZEIvFU77XdbiObzaJSqeDSpUsol8sIBoP4/ve/D7Vave8nE41Ggyc3hUIB3W6X/0wqlWJ0dBRvvvkmLBYLDAbDHr5SEa8a9XodiUQCtVoNGxsb2NzcRLPZRKlUeqxQ1GAwYHJyEiaTiddc4SG8VquhXq+j0WggnU6j3W7D5XLB5XKJxbOIoQLpaTKZDC5fvox0Oo2NjQ1sbGygUChgZWUFxWIRlUrlgb+bSqWwsLCAcDiMbDYLs9mMb37zm3j77behUCh4DxIxmBiYopk4zPV6HZcvX8b//b//F6VSCel0Go1Gg4sitVrNY3RaaIUjklAohJs3b8Lj8cBoNCIQCEAul8Pv9+/LRZk2tFAohF/84hdYX1/H9vY2otFoXzH0JJDJZPjRj34Ek8kEi8UCvV4/UEVzr9dDIpHArVu3UCqVmKbztO+z2Wwik8lAKpWiWq1iaWkJx44dw5tvvgmPxwMAvNHvRzSbTcTjcWxvb6NQKPT9mVQqRTAYxBtvvHFgON4i7qPRaGB7exvZbBZ//OMfcfHiRZTLZcRiscdy3j0eD959912MjIzgjTfe4MYFHULr9TpyuRxKpRJWV1dRrVYBgDUF+3F9FrE/QdqqZDKJ3//+91hbW8Pa2ho2NjbQ7XZ5arlbMyeZTPLU8/Lly1AqldBoNDh9+jS0Wq247g44BqZoJg5zqVRCJpNBqVRi3rJUKoXJZILJZIJOp0MgEOBOs0wmQ6fTQbvdRrvdxsbGBur1OpRKJRfi+3HsTiPOTCaD7e1tbG1tIZ1OI5fLoVqt9h00nhQKhYJFC89D8XiZ6Ha7vCjRL8KjNl0h5UB4yGq1WqjVasjn81hfX4dcLmdxIHXJ9stm3mw20Wg0eGpTLBb5PqHDqNFoZI9mceE+eGi328jn88hkMsjn8ygWi7yeNJtNblTI5XLuiKnVaqjVahiNRuRyOfR6PUSjUcRiMWg0GthsNigUCpRKJcTjcZRKJSSTSdRqNZTLZXS7Xf65L+JZ27l2UXe70+mgXq8zPYkofk8CuVwOvV4PuVwOlUoFpVIJhUIBnU4nis0PEGj/SafTSKVS2NzcRDKZRCaTQaVS4WkMifv0ej10Oh0/V2RmQHQ42r8ymQw2Njag0+lgt9uhUqmg0+mg0+n27L0OC3q9HuLxOBKJBH8+wudapVLBZrNBrVZDq9VCo9E81783MEVzoVDAF198gWg0ilu3bjF5nkR+r732Gl577TXYbDYcOXIEJpOJN/Zut8uL+i9+8Qt8+OGHMBqNkEgk7LSx30AF37Vr1/Dxxx8jnU7jxo0byOVyz2wdJty49uMmQHZzrVYL1WqVJxutVgsrKyv48Y9/DKfTiW9+85t45513oFar2YFl2EEHrFgshkgkguXlZUQiEWSzWfR6PbhcLvz93/89xsfHcerUqX3daRfxcFSrVayurmJzcxOrq6uIRqNot9tcMMvlcshkMtYD6PV6+P1+eL1e5HI5fPXVV8jlcmg0GqjVanC5XHj99ddhNpuxurqKr776CuVymX+ux+PB0aNHubv2vOuOsMtH/x+LxRCNRlEul7G1tYVSqYQ7d+7gzp07T9xQMZlMOHr0KMxmMzweD9xuNywWC44cOQKz2bzvKV0i0FdnXL58GX/6058Qj8dx6dIlZLNZbvKpVCp2Zzp69CiOHz+OTCbD4kBqWAh/7o0bNyCTyWAymTA5OQmj0Yi5uTkcOnRIbF48Bp1OB7/97W/xk5/8BPV6HbVare+59nq9+Mu//EuMjIxgamoKk5OTz/WsDkQ1QHYtiUQC4XAYmUwGjUYDUqmUT/UOhwMTExOw2+2YnZ2FxWLpK5qpm3D16lXmPEul0n15w1HB3Gg0kEqlsLa2hnw+j3w+j3K5zN/3sBuDvr5bl2W/XS9ht1ilUkGr1XKxLJVKuVtNgsJsNou5uTnUajVIJJJ9ddKvVqvI5XLMey8UCvycaTQajI2NYXZ2Fna7feAKgIcJXV/0/fqoA/Zuh0kSvdHvhxmkK8nn88hmszztI9U/aUeokWG1WmE2m+Hz+TA2NoZQKIRyuYxEIsECbgCoVCrQaDQcolOpVJDP53ndflqx4aPQarX6mgbdbpctKAuFAra2tlAsFrGwsIArV6488b9rsVigVCphtVq5m9jpdFCtVqHRaKBQKA5sx1koHAXw1J+nsFEzyM8STSibzSbvu5lMhtdTmmbSBEKr1cLlciEYDLJJQaFQeGDN6na7yOVy2NjYgNlshlqthsVigc/n4+Jvv+zLdJ8I9WjP+/Pa7TZisRhu3bqFSqXS1/EHgLGxMZw6dQoajQa1Wq3v338W7HnRXKlUUK1WEQ6HMT8/j+XlZUSjUe4y2+126PV6jI2N4fDhwzzuEI7NaTEHAKPRCKfTyV0Ap9MJt9s9kA/h04I8IDOZDK5evYp0Oo3PP/8cW1tbqNVqj+wwU4dIoVDAZDKxdzGNR2lctF+gVCqhUqlgsVhw6tQp2Gw2aLVaaLVa5HI5XL9+HdlslotI4qeVSiUsLy9jfn4edrsdx44dGyhe97Oi0+ng5s2b+MUvfoF8Po+VlRWUSiVIJBIEAgGMjo4iGAwiEAjAZDINzPNC9pPpdJrtJ2u1GqrVah9V60WgWq2ykHi397/T01smk8Fut8Nms0Gj0cDhcHBgzrCBnDIqlQqWl5exuLiIfD4PvV4Pk8mEQ4cO8YZOVIzp6WkYjUZYLBZYLBY+lPZ6PYTDYXz55Zew2Wwol8swmUy4ceMGbt26BaPRiJMnT8Jms2FqagpqtfqFFJydTgefffYZPv30Uy42ut0uNxTq9Tp3BBOJBJRK5QPFHW3qO9fDWq2GtbU1ntTcvn0bRqMRt2/fhtlsxvHjx7ljTmmj+x3tdpsLlFQqhVQqhXK5jFAoxJSex9EEpVIpbDYbHA4HjEYjpqamYDAYoNPp2E1iUED3QD6fx+LiIlZWVlCtVlGv1yGRSLjWsFgsOH36NCwWC7rdLra3t5FIJJg+Wa/X+34updr2ej1oNBokk0no9XqmEplMJoyPjw91A6fX66FWq7E2gg4VCoUCRqPxmaa5tVoNkUgEhUKB9U3tdpvvN6JQGQwGWCwWWK1WDjZ7Huxp0dzr9dhvNxKJYH5+HgsLC9ztkcvlsFqtsNlsGBsbw9zcHBQKxa7dHvq6wWCAzWaDy+XC3NwcRkZGBqoIeB40m02Uy2VEIhH8+te/xurqKkKhELa3t7kL9zDQRq/VauHxeKBWqxGPx9mAfb9RWOhkHwgE8N3vfhdjY2NMzwiFQmg2m9je3kav12OuWTqdhkwmw/LyMhwOBwKBAKampmA2m/f67Tw3ut0ubt68iZ/85Ce8kVHB7Pf72e1g0ASzRKUJhUL42c9+hqWlJd587HY7Lly4AJvN9kL+rUwmg88//xypVGrXNWZmZgbT09NsD6VQKDAzM8P3iNFo3BdF8+rqKm7fvg29Xg+9Xg+v14tvfetb8Pv93LQwGAy8kVOXsNPpcNEcCoUQi8Wg1+sRDoeh0+kQiUQQiUQwMzODo0ePYnZ2Fk6nk0Xdz4tOp4PPP/8c//N//s++TpNwXaTfy+VybrTsvAbCqQahXq9jbW2NXydxuamp8/d///fw+XzQ6XRQqVQHomjudDooFAospr579y6SySS++OILJJNJlMvlx7o4SaVSzM7OYmZmBl6vF1KpFF6vF06nk++tQUGtVsP6+jqi0ShWVlawvr7OGiCZTAa3243Dhw9jZGQE3/nOd+B0OvH111/j66+/RiKRYJ3AbqCONU1G5XI5Nw69Xi9cLtfQFs10EK3Vatjc3EQ+n4fNZoPVaoVOp4NGo3nmonltbQ3JZJJrGfo8qCakRpnZbOai+Xmx553mer3OghMiyRMUCgVsNhubfz9OlEXjdOo0y+VyNh3f2triUw0Vj8NyEwrFB+FwGKFQCMlkErlcDpVK5bEFM3Bvk9BoNDCbzZiYmIDRaAQALhiHtdNMCwsdCkwmExQKBRwOBxwOB3w+H1wuF3fClEolbDYbAoEAZDIZu3C02210Oh0e54bDYcjlcuRyORgMBiiVyqHsONfrdcTjcRSLRSQSCT6JkzfoyMgI5ubmMD4+3mfjOChot9tMvaLAGhqRVioVpFKpx1qhPSkKhQI6nQ7TduiZoEW4WCwilUqxqI0Kr06nA4fDAZvNhk6nA41GM1QhOeRhnk6n+UBJXXS/34+RkRG43W44HA4W0pDKX7jZCUfIRPWo1+tMA2q1WnxwpYJcqVS+0HuOCl6huFCv18NgMPDrk0qlMBqNDzRT6O81m03kcrkHCm/akCuVCsrlMh/ogHuOCKFQiG0ah3GteBR6vR7rg2jiWSqV2FptY2MDW1tbTFWoVquo1WpoNBqP/LkSiQSFQgHJZBIAsLS0hGw2i5GREZTLZajVajgcjj29nnSQqtfrSKVSSCQSKJVKD+y7RKvQ6XSo1+vs20x7tTCITa/X91EHqQYSNq+y2Sy2trbQbrd5+k6H1mECUSaI0kL3SKlU4g6wSqV6Yi0V1UPVahXxeBzRaBT5fJ6bf3QNlUoldDodjEYjJ0W/iPtozzvNyWQSCwsLWFtbe2BsodfrcfLkSYyPjz+Rz7JEIoHf78e5c+egUqmgUChQLpfxySef4JNPPoHZbMa5c+fgcDgwNzeH2dnZgSsSdkIoPrhy5Qp+//vfI5lMYn5+nmkFjyuYaeNwOp2YmJjAf/yP/xF+vx8//elPkU6nUalU0Gg0hqrbLOTQaTQa6HQ6OBwOnDt3Dna7HUeOHMHhw4c5KpseSopal8lkKBQKkMvliEQiqNVqKBaLaLVaLJKbmZnB3Nwcms0m3G43+8kOExKJBP7xH/8RGxsbuHr1KtrtNtRqNYLBIEwmEz744AN873vfg16vh8vl2uuX24der8cc2Uwmw0UMfQaVSgXz8/PcMdyNq/80XyPeu9vtZs63kP8Wj8eRz+eZuyiRSHD16lW+ns1mE6Ojo0x1GZZ7pdvt4sqVK/jNb36DZDKJYrEInU6H119/He+99x5sNhsOHToEk8nEGz3pTXYDdWzp1+bmJhfhgUAAwWCQxXQvWmSrUCig1+vRarW4Y3fs2DEcOXKEeccKhQKzs7OYnp7uK/TpcJbP53Hr1q2+rmC73ebif3FxEYuLi9xpLZVKuHr1KjqdDsbGxrj7vJ9Ak7h6vY5kMolkMont7W189NFHiEajXCS3Wi2Uy2VuQjwJ6LlSqVS4ceMG1Go1T3V8Ph8++OADeL3el/wOHw7SDyWTSVy5cgUrKyvY2trq2y+JnjE3NweZTIatrS2srq7i8uXL+PLLL/l6GI1GzM7OYnZ2lotsmUyGzz//HF988QXHbne7XSwsLCASicDv9wMAfD4f72vDwnEmG+ClpSWEQiH8y7/8C6LRKHw+H/x+P0ZHR3l/Jr3E49BsNlGr1RCNRvGnP/0JKysrCIfDffecVCqF1WpFIBDA+Pg4xsbGMDY29kIO6XveaSYLrGq1yic32sBIeOFwOJ5oVCORSKDVatkujIQm0WgUd+7cgdVqhdfrRavVgs/ne25C+KsA8euI17m+vo5cLsd+p48DFYpkYUNUl4mJCeZgNhqNgb8OBNoIFQoFcxLVajX0ej2LkrxeL4+Ad1tcJBIJvF4vTCYTjwGpQAPupQ6WSiWYTCbkcjkUi0VYLJZX/VafC8Jx+8bGBu7evYtMJsOdeeKi+nw+TE9PD6xDSLvdZgqRXC7njj91DIThAeTZLsTOAvlRm41arYbZbIZKpeIO987RPnkV09dzuRyvW6lUCmaz+YHD/6CDnFWWl5dRLBbRbrd5yjcxMQGTycRd5t3+LhXH1IkF7nfniJMukUhgtVp5wqfVal94N144km21WjyBcjgcGB0d5TVDoVBgbm4Ox44d67sfarUaarUaMpkMqtUqstks/1mj0UAmk0G9Xkc4HO5zbZJKpchkMohEIvxv7xdQc4KK4UqlgnQ6zdzuu3fvYnt7u0/8J9xLaC8XpswKsxWog0vPDFHkgPvpko/rVr9skCczUUkTiUSfXaFcLodcLodWq4XFYkG73UYqleJrlclkIJFIYDKZ2P7M5/NBq9XC4XBALpdjaWkJKpWqzxKVrrdEIkEkEoFUKoXf7++bogwDKpUKkskkYrEYNjc3ucClvZvcLp50D+p0OjzlSSaTiEQifTQgMoBQq9UwmUzcaX5RHfqB2SmFnUOhByZxmp9E7CORSGA0GjEyMoJUKoXPP/8cyWSSRV/NZhNXr16FxWKBx+PB6dOnX/bbembQZtNoNJiGEQ6Hsbm5yZ3hh4ECBehBViqVOHnyJE6fPg2v1wuVSoVKpcJ0mBepXn+ZkEqlmJmZwV/+5V+iVquhUCig1WrBbrfDarXCZDJhZmYGRqMRXq/3oYuKXC6H0WiEWq3G6dOn0W63mScej8f5++r1OkKhEPttDhrf92Ho9XrY2trC1tYW1tbWsLKyglAoxEEmOp0OJ06cYC7zoHYtaKMhrQIA9hCmAiabzfKz8LAOslQq7Sug7Hb7rv+WXC5nkTEVULsV4c1mk4Vl169fx/z8PBfZZGU4DAdyQq/X40h1EnAB97q2RDXZeY+Qc0Sz2cTi4iKWl5exsbGBVCr1UFcemgY9q/DncZDJZDh//jxkMhm63S5vnj6fDz6fj9dEqVS6qziculw2mw1Hjx5FtVrlQwHRnMrlMsLhMLRaLRdSwH2O9G6am2EFhUlRZ5mEuMViEaVSCblcjhNF6TNXqVQwm81QKpXcuddqtZiYmGBRqdFoZBF7KpXq+zepe5vNZrGxsQG1Wr2nRTMdhre3t7G6uop4PI5MJsOHZ5PJhMOHD8Nms+HcuXM4dOgQCoUCUqkUqtUqF4fCKffx48dx7NgxnorQGjU+Po5UKoVLly4hnU5z0ZzP53HlyhWsr69Do9HA4/FAq9XCZrO9MtqKkPbwpNkFRHFLpVJYXV1FJBJhtxyiQBoMBpTLZdTrdaZYPgpEj6LDCFE96KBPdaNKpcLs7CxOnTqFkZGRFyYWBwaoaBaCij29Xg+LxcLq9Cf5oAwGAzQaDfL5PD7//HMsLi4imUyyhVK1WoVWq8XZs2fZSmkQ0Wq1UKlUUKvV2NUhEolga2urr6OzG6RSaZ97hFarxfHjx/Gd73wHGo0GSqWSC+9hCn+RSqWYnp6GTqfjQ0Wv14PT6YTL5eKih5T4D7tfZDIZjEYjut0uHyQWFhZw+fLlvqK50WggFAqh3W4jGAwOxcECuLfAbW1t4fPPP0coFOIFi2A0GnHixAnMzs4O/EGANlniXne7XWQyGaTTaZRKJaytrfXZLO4Gui+USiWPfZ/noFCpVPgQQq4k1HWkEfUwodfr8SbWbrd5/aCu7cOK5lKpxFH0v/zlL/lA87BDONnU0Uj6RUMqleLChQs4d+7cA1/fTdi582vUMSTtB3A/LpnEqMViEXfu3IFOp4NUKmU9CG34+8l2juiTt2/fxvr6On76059ia2uLG1zUgRV+1gqFAk6nE1qtlqkrDocDZ8+ehdvtZo48ObTsLJrp55LLiclk2vOiOZ1O4+7du1hfX0c8Huc0P+De+vTaa68hGAzi7NmzmJubQzQaxZUrV/ocrQwGA86ePYvx8XEcPXoUhw4d6nsGgsEgvvGNb2B1dZUTM2OxGIrFIgqFAq5evQqlUgmv14vZ2VlYrdZXyp2nSRLRsx4H+hxpQr66usr0HgAcMW61WlEul9FoNJ5YRE0dfxKEF4tFKBQKqFQqqNVquFwu6PV6zMzM4MyZMzCbzS+UB77nRTO10IlnCtxvv9frdR6HUCITdQt2Lkz0IOfzeeRyOUQiESbXk1sAjT0GvbNKVAEyQl9ZWUE+n0cqlXqi105UDLKFMpvN8Pv9LP6jABTqlj0JL3pQoFKpYDKZOAESuLcgqdVqpm48aUFEFCASV5DSlugwnU4HxWIRGo2Gu06D3EEU+pWTMIlUxQDYHm18fBxOp5MtxHaCkgOFCWoEmUzG15qElS8bOz1cNRoNjEYjZDIZXC4Xd6EfBplMxl66tNE8z2colUo5zU5YIA+TJkAI6rJrtVoO+xHSwXbboOv1OsdtRyIRnoYJLZ/oZxOdxm63IxgMwu12vzSXkRflzU8UglKpxPsIrcPJZJLXB2pOkGjS4/HsKxEgCdqoG0hFYK/XY32IVCqF2WxmEZzP54NarWZLU5vNxtxVh8MBs9kMh8OBqakpyGQytqsTQuh1vJeNLaJk5fN5Fv8JIZPJYLFY4HA4oNfreQ+ivYTWHZVKBYPBAJPJtKvFIpkTGI1GuN1u1Ot1lMtlpgHRAYWSAyuVCtxuN1tfvuxrROsdWdY+jHssdMpIJBIcZERNS1ojTSYTLBYL3G43dDodTwIfB+pSR6NRpFIpvh9tNhs/ezRFttlsMJvNfbXli8CeFs1Enj98+DAAsB0I+T8mEgl89dVXCIVCOHPmDNRqNRdNwvGekPd748YNfP311wiHw1hZWUEikUCn03lg4x1kkGXT9evXEY1G8Yc//IHFUI9zuSDu4MjICMbGxvAP//APGB0dhdlshtlsRjqdxpUrVxCPx7GwsIB0Os2b5KDyWgkSiYRPjUI6jzBY4Gk+X3JbkUql7LFJtkD5fJ4tbTKZDM6cOcPczEGdThCdpFAo4Msvv8RHH33ENBapVIrz58/j/fffh9PpxJkzZ3i8J1y8id8ai8VQqVSwtbXFI2jgXrcwGAxCr9fD7XbviQe6Xq+HWq1Gt9uF2+1+bLFK94VEInkh9mbVahUrKyuIRCJIJBJ9/8awwmQywefz9dE0Ll26hGKxiKmpKTgcjr7DSTqdxr/+679ifX2dqRnEPxeCimW9Xo+zZ8/i+9//PusPBhXUJWu32xyCkkgkmE5AmhLS3Gi1Wpw7dw4/+MEPWCuwH9Dr9Th0IxqNPhAaQamQJpMJb731Ft588022+pTJZLyv0KFCpVIxjcVkMuE//af/hHQ6jV/+8pf48MMPeW+jumB8fBzBYHBPnWiInrG0tIR4PP6AXkGn02F6ehqHDx+G0+lkLq3P54NCocDm5iZMJhNsNhtGRkbg9/thMpke+HfUajUUCgV8Ph/efvttnqqtr69z0dzr9XDjxg0UCgVMTEzwv/ey47aJprO+vg6j0YhDhw49tGimOiwajeKXv/wltre3MT8/j9u3b6PdbqNWq0Eul+PQoUN4/fXXWRhstVofu37SM7mysoLf/va3PIGXSqU4ffo03nvvPW449no9HDt2DNPT01AoFC/0HtrzKklI1iY+GPFsiZoA3PMxLJfL6HQ6fRdAIpHwaJS6I5ubm3zK2bmIU/E8qN1C4P7pNpvNIpFIYGNjA+Fw+JF/h4o5SncTnuYnJyf5+6RSKXOuisXiA53EQceTKmyfFHK5nG2wyH+2Wq1CKpWi3W6z2JLECmRJNoj3T7vdRrFYRC6XQyqVYis94H7xQmmaNpvtAYU/Lc6VSoX5ipFIpI/+oNfrmc+p1+vRaDS4u/KqrgmN0QG8UK7ak6LdbjMVgSYQwww6TJhMJm4wtFotZDIZrK+vQ61WP9BFJm4v+aSWSqW+60DdLxLpUuiUz+dj6segQtiEyWaz7Dm9vLzMhyTgvve9RqPhrhl5zg7yROpJ0ev1WKhPe+/OKQIFR4yNjeH48eM8VRCmrQqnUzQhJA996jgKrxUJ100mExfgewEhn506zcJDA+25dFCiAznRwYRWZ9Q1J5rYznuDJiSUIqhQKGCxWPg5oclGLpfj55Ws/V72ZIPEmuVyGTKZ7JH1AnXES6USQqEQNjY2mGZCdFipVAqLxcIuOtRpftxrIAYChZmQLST9vNHRUXQ6HW4ukv3ji25m7HmnmdwuqJVOHCbiBy4tLSEajaJcLmN1dRUajYYN8cl/k8bR5XIZN27cwI0bN5i/LASdygY9hEAikbAtnkqlgsPhYA7yzvdENyFZ2ZAP8/j4ONxuN1MyROwOWpBJ0KHVajE/P49MJsOWUo1GA/F4HJFIBHq9nrsmg4ZyuYz5+Xlsb28jFArx+JjG66OjowgEArxwC0FJiPl8Hjdv3sTNmzdRr9c50p6gUqkwPz/Pmxp1KPfaFupVgtaZxcVFhMPhJ/JJH2RIpVIcOXIEf/d3f4f19XWkUimUSiWUy2XEYjEolUr84Q9/wPLyMjvLRKNRLC4usjhO6CQgk8lw9OhRHDlyBHq9Hj6fD3q9HqdOneJx8iAXlOVyGYuLi8jlcvjyyy+54y50agHuF5XkfvD73/8eFosFs7OzMJlML70D+LJAzg21Wg1bW1ucDkniNwIdxCkFT6vV8udPBSXRCcnSdGFhAYuLi6zRKZfLfYFmBJ1OB5fLBZvNticHLGoe1Go1hMNhdpahtZDcGMh9ibrowL1G4OjoKBwOB9RqNQ4dOgSr1Yrp6WnWZz0MKpUKPp8PVqsVFy5cYCHd5cuXkcvluJm2vb2NL7/8EuFwGCdPnsTx48df2qRLIpHA5XJxF323108HpMXFRdy5cwfRaBQ3btzg4pYOWMFgkDU1R44cgclkeqLAkWq1irW1NRQKBSwuLmJjY4P98WkP39zcZGoqHWZfxjqz551m4v5YrVYumqlQoXQqqVSKtbU15qrQ6YS8PsvlMt/U29vbiEajfWpPAvGiqWge1IVbIpHAbrdzR9zlcqFYLCKbze56ECBe1dmzZxEIBDAxMYGJiQnmSIl4OOiEL1RBp1Ip3L59m0+1xM+KRCKwWCxsHTRoKJVKmJ+fx927dxEKhdDr9aBUKuHxeGCxWHgUtltXuFwu4/r16wiHw/j000/xxRdf7OqsIqQh0M84ffo0zpw5c6CK5ps3b+Ly5ct9Xx9WTjMVzVNTU7h27Ro+/vhjhEIh5qS2Wi384Q9/gNVqRTQaRSwW42ABUsMD9ztvSqUSJ06cwN/+7d/CZDLxQe1VceCfF/T5bm9v4+uvv8bly5d3TU2loA+JRILl5WU0m014PB5oNBq43W4WxA3qPvMw0CSFuoV3797ts4UjKJVKOJ1OeL1eTlvbrStMRXi9Xse1a9fwb//2b3wgo+ALYfeSCiyXywWr1bonRTNN7WiiQp8vTRCERb1Wq921aO71ekyzEHq7PwoqlQojIyN8b1ksFqysrGBlZQW5XA7VapVrgC+//BKrq6swm804duzYS7sWVI+Q69BuejLqAt+9excfffQRMpkMbt++zQUzZUXMzc3B7Xbj2LFjOHToEIv3HodKpYKlpSXEYjEumrVaLWZmZmAymdDr9bC5uQmz2YxDhw7BbDa/kPS/3bDnRTNBq9VifHycT1bpdJo/CLIPolMenXppjEjemsS5IospupFrtRrq9TpzqYiHNsigkRAVbQ8LH6F0LZvNBq/XC6/Xy6N3YZwrHSLIJoks50TcA43DyICeHANooRT+GlSQo0Eul+MNTqFQwOVyweVycTiFcNGjzmEkEsH29ja2t7dZKCp8rzRmpA1VOKakQ0U0GoXBYHisMG9YQaNlEssJfWlpbbFYLC+tw/EyQcUuFQNer5djkMmjuNlsIpvN8tcoTIAKAo1Gg5GRERiNRu6W6fV6aDSaoYqWJl9iSsATWtURfbDdbrP9IHAvTTKRSKDX62F1dZWzB1qtVl9S6TDcF/V6HVtbW0in00gmkywKpi4yUTBsNhuL+4B7NnFkU0hj/E6ng3K5jM3NTRSLRU4NrFarTJ8kCgdxnzUaDQKBABfNe6m1edjaT88KcZF3FsRCCujT3vfUmCBbuUwmA6PRCL1ez2mMRIMg9xa6T1/W/fWwn0sWcJubmyiVStjY2EA6ne7bI2i673a7MTo6CrfbzXqax9H66DksFAqIRqMIh8Nsc9jpdJgj3ev1mGJpNBpfKptgYIpmt9uNH/3oR8jn81haWsLy8jJqtRrS6TQajQYikQjTNCipaW1tjaOyqagkjpFOp8Po6Ci0Wi3W19exubkJo9GImZkZ+Hy+PREwPSl6vR6i0SiuX7+Ora0tRCIRpFKpB7hE1IUeHx/HxMQE3nrrLYyOjrJgkhZ74H6KTj6fRzgcxvb2Nt98Iu492HNzc6hWq7h9+zZsNhtqtRpyudxAF8pCkBBwdXWVN3Oz2Yw33ngDU1NTmJqa6rvnu90ulpeXucP8y1/+kp+xnd3lqakpnDhxAtlsFp999lmf7VI+n8fFixcRjUZx8uRJnDhxYqhFcQ8DrT3ZbJafRbqe1PU4evToAxzNYQDRvGw2Gy5cuAC32435+XncunWLnwm5XM7e8QD4HqOCcmRkhIXHs7OzmJqaglwu57VoWK4J7Sf1eh1SqZRdm6hrXKlUUCwWAYAbEGRJp9PpsLy8DL1ejyNHjuDQoUNwOp14/fXXYbPZXpi7x8tEMpnEz372MywtLWFzc5M1HiaTiSkZTqcTIyMjOHv2LLxeL6rVKq5cuQK9Xo+xsTHodDqeVIRCIfzTP/0Ttra2EI1GEY/HH2iIqVQqeL1efPDBBxy4NDs7C41GM3CHcLonnE4nB6+9CIGxECSG1Gq17OFMDUXyQm82m+xoQlqbV3kwpSlkOBzG//pf/4vF0dFolJsLcrkck5OTOHLkCNP4RkZGYDAY+Hl62PNAbmhkWff73/8eq6urTJ0kS1hKZPX7/bDb7ZicnITFYnkh6X+7YWCKZrVaDb/fD4fDwTdDtVqFQqFAtVpFsVjsS2EioaAwQRAAfxhGo5Fv6HQ6zWlQ1AkbZHoGCQFzuRx31XfzqhSeRmkhczqdu/5MWqSIK77TLuugQyaTsR0QWdhRN2nQi2YSrFBqFwn3iIPmdru5A0j3fLfbRbvdRi6XQzgcRigU4g2NQKIWuVwOm82GQCDAXDF6FoH7EbsajQaTk5MDf72eBbRJEddTOHIlX2Oj0fhSx4IvE7SGqtVqOBwO1Ot1rK+vAwDTlB7296hLaDQaMTY2hunpaXi9XhgMhoFdYx8Huh5kBUb2ajKZjO8F6vZR8iZ13ZrNJtRqNXe96M8NBgMUCsVAF80k+gqFQlhZWeEoeZokUPQz7TU2mw1WqxXVahW5XI4dVCjchJIV19bWsLy8jGq1+kCSLUUokziQXDOcTmef6HeQQB7mJPx8GZ8pHTapc6rX6/mwJhSrCgWXr/JwShMXsmO8ffs2ayGEVC2z2QyPx8PR2U9D46vX6ygUCshms4jH44jFYjxFJUtUWotJ46bX619qjP3A3I3FYhFXr15FJpOB2WzGa6+9xuPmVquFjY0NbG5u8sZFJvwymQwKhYLjb+kXJefQw1iv16FUKrGxsYFkMomxsbGh3dxpHKxQKDA6OorXX38dXq/3kaIT8ttMp9PY2trCxsYGstls34iZHrhhcBh50aACsdvt8kJNp/ZBvk+E6X+Li4tcMI+OjiIYDGJ8fByTk5OsVJdIJCz6y+VyuHjxIi5evIhcLsd/l7QFDocD58+fh9PpRCAQQCAQQCwWY1cN+ncPAsgGcn5+Huvr67wx+Hw+BINBzMzMwG63Q6vVDrQzxOOgVqsxPj4OnU6HpaWlh64B5BBAkdQ0wZuZmYHX6+07oA0bTCYTzp07h5mZGU4VI0GtQqHglDyiBdbrdcRiMdbSkJB9aWkJhUIBDocD5XIZDocDhw8fxtzcHFuvDdI1ohTMXC6HUqmEWq0Gk8kEj8cDm82G1157jZNXjUYjTCYT++xSCI5CoeCmF1F46DBPCZJCSCQSjI6OYnp6GoFAAEePHoXP5+P9fBAnFMTxnZ6eht/vf2mWeLT/aLVauN1uVCoV9m5uNBqIRqMoFAqIx+OcJ6DX61/qIUNox7i4uIilpSVsbGwgEonwYYgsJefm5mA2m3Hq1CmcOHGCPZOfFDQJ/fTTTxEOh5FKpfo0FCqVin36JyYmMDk5ydTKl4mBKZpLpRKuXr2KSCSC73znO3jttdeYq9LtdplvSRY4rVarLzYxGAyyEbrQYJxO/6FQiDk33W4XFy5cGOhEwEeBONtKpZKLZjqJ7gZSLxcKBeRyOWxvb2N9ff0Biyhh4XzQQEUzdVWEHLVBLpp3pv+Rb2UwGMSFCxcQCAQwNTXVFysuFP1dvHgRn332WZ+dGIm3Zmdn8V//63/FzMwMH6Ki0Sjy+Ty2t7e5kDwIoDXoiy++YKceqVSKQCCAc+fOIRgMPlYZPwzQaDQYGxuD1WrF559//tC1QCaTsYMAeaRarVbMzMwMdYcZuJeYee7cOXS7XU4eo6QxlUrFe1GpVMLm5iYKhQJu3LiBer3eV0gXCgWsrq7CYDAgHo/DarWi0+kgGAwyx3uQ9h9yZsjn86hUKqjX63C73RgbG0MwGMQPfvAD+P1+ft1EqwDAXWii8FAyJk04d+swA/fuo7GxMbz55pvwer04fPgwXC4XgIfzaPcaEokENpsN09PTcDqdLz2oh4rmRqPB1rNEWVUqlUgkEmzp9rK1WkK+/507d/Dhhx8inU4zrY+MFjweD9555x34/X4cOnSIExCfpiPf7XaxsrKCX/3qV9zwEx66FAoFa7jGx8cxNTXFfPuXiT0rmolYT+PkQqHAhvdms7lv5EE3jtlsZrP0drvN3UCK3CYvSLrZFApFH2G80WiwwGlQubzC9B96zcSfFL5fv98Pg8HQxw96khuSToo7RQ0kYCLxzpP+vL2E0M6IUh+fBDShEMYFPwoSiYSN2bVa7UDcOw9L/yPKjVqthtls5s6DcAMi/2mi/pCXM0Ws+3w+zM3NYXx8nP3TCURxojTBQd3YXhRok6DDOhUVdM3IMpPWrGGFMC46lUqxsJqeFfqcae0g4azRaITVaoXVaoXRaNw3MdK0hxBdi5L/qEljsVigUqnQbDZhNBpRLpd5CkrhMKVSCcVikcWzFEsdjUah0+nYkmwQimdh8l2xWGT6CfnzUpe43W6zyF6omaH9mWgLRKukPWzn2iyclppMJqZ6vCwe6tOCPjM6QOx8/SR4JE/qlwmapFcqFeh0ur5mzk6R4stq8AiT/qhAjkQiLPojKqPVakUwGITX64XH44HT6YTBYHiqdYHs/mg6TvcR1UEUZmY2m5nGY7fb++wOXyb2ZJUnPg61+G/dugWdTodz587BaDSyYIJAH4Zer+8r+qj7RdwZYZeUuqbktRsKhVCv17nYHsRADyqESKVOAkDaoIkjFwgE8Dd/8zcIBAKYnJzk0/+znrCMRiPOnDkDh8OBkydPYmJigjeJQQWNQdvtNosPnrSYFcYpk5hjtwdNSFEhb1riDu81Hpf+Z7VaMTU1Bbvd/sC4iiKQV1dXmaKj0WgQDAZhMpnwwQcf4Hvf+x70ej13fQgkutDpdLh+/frAH6yeFxSYRPaXN27c4EVcKpWyfRJZTw0rarUaKpUKYrEYPv30U0QiEWxsbPAmRFQCOqDqdDocPnwYHo8Hx48ffynJW4MAcv8QXgPai7rdLiYnJ9HpdHD69Glks1lks1lcv34dmUwG165dw/Xr19FqtbC5uQm5XM6bu8PhwKlTp2Cz2ZiHuZeggv7OnTtYX19HoVBAvV5HIpHgg3U4HGbBHu3RtD56vV62SaWJXSaT4STbnbQMKpa1Wi2mpqZw7tw5DgEZBFQqFfYbjsViDwij6dCzs6nwMqDT6XDo0CG43e5HUqZeJoiSEY/HOenvxo0buHXrFjcVlEolTp8+je985zuw2Ww4evQoazye5jVXq1UsLS0hl8thfX0d6XS6L4RNp9PBbDZjamoKf/3Xf43JyUnO7ngVtNI9LZpbrRbTBRwOB86cOQO3271rsfY8bXcaF5GYblDFXVSQkViPPBmpaKZTvNlsZq6qw+F4bosrmUwGq9UKl8sFi8WypylMD4OwIKaDE6VAFgoFJJPJJ/5MFQoF2u02VCoVtFotc30BsKJ7p8UQCVxI+LPXICunQqGAdDr9QPofJbzt/Czp2aO/K7SmIztGUq/v1jmlqY9er+97Hnfy4fcL6CBbqVS4O08LOImjKHlqmDvNrVaLXSESiQR7MSuVSu4sk90aBXpQEtpeJ7e9TOwmRNttLzIYDHA6ndx50+v12Nra4m40de1TqRQikQi63S7K5TLb8Q1CgiAluVWrVS6SaH0ga8pSqdRnf0rPO9EFad0kWgY5i+zWaaagDIqZJnrHIOBxqZ80pXwVhgJyuZyjt/eK/kWfZ7lcxvb2Nif95XI5AGBKLIVdkS6GOuPUaKImy879Vfh7ogkJU4vJ4pOuO+3bfr8fY2NjPPl4FdiTO5R8IIvFIq5du4bPPvuMPRlJWBMIBF7IzUidgfHxcVQqFSSTyYEoenZDsVjElStXkEwm8fXXX3NyUr1eh0Qi4ajIYDAIt9sNh8MxlOb5T4tqtcojT+IN1ut1xONxVKtVFqQ96edKFBcaMQstwjqdDr7++mu2OiQfWp1OB7vdDovFMhALe6PRQCwWQyKRYOvAx6X/ke83XS/qVAOA1WrFd77zHUxMTODYsWNPtQCpVCq43W7uVO8n1Ot1hMNh5rbSwZsCDSgVkWzJhhGdTge3bt3C559/zvdHtVrF3Nwc3njjjT5v6lu3buHOnTtoNpvstEKuCY+yj9rvINqGRCLBiRMnmL+rVCqRy+Vw69YtFtB+9dVXcDqdaLfbcDgcmJ2dxdzcHBcDe3H4kEgkLFSkAxEV89Rx/sMf/oCbN2/C7XbD7XZDrVZzsatWq6HValGv15FMJlGtVnH37l0sLS0hnU4/4L6i1+vZji8QCECj0QyUswhRlchL+iCDbOXW19extbWFhYUFhEKh/9/edz/ZdZ7nPbf33uv2BuwCIBpBkKAosSu2ZXtkx2US/+DEkz8h/0xmkjjxOJbDaEaWJVIyJTYUFvQFtu/e3nvv+QHzvjy7XBSi7b2L88zssABY7Dn3nO97v/d9CnK5HO+5UqkU3W4Xq6ur+OUvf8lUT6Lb0B5K2rNsNstx19SEoMKZbAopmZMOaULNTSAQgMfj+U4exfPAgRbNqVQK165dw8WLFzndL5PJQKlUIhAIPLVi0Gq1YmpqCrlcjsNChhHlchlffvkltra2OKaXBFqU+kfFkMvl4nHYYcZgMOAITeriUFrV2toaSqUSIpEIotHoIxXNdFolzjx5Wgt/neJTyZaNOvwOhwMWi2Uo3BGoaCG/bQAPTP8bDAZMUxJ+Eex2O9577z2cOnXqe3vJUtEcCAR2de0PA4Qe8bTI06GLrC2NRuN909BGAf1+Hzdv3sQ//dM/YTAYcHLf+fPn8dZbb6Hb7SKdTnN62507d9But5FKpdBut5nTKJw2vGig7jNZgPZ6PXZu2tnZYeFgLBZDOByGzWZDs9lkapjb7eaD2EEVzeQL3O12uWgmv2oqmslCjDqJc3NzPHGwWCwolUq4c+cOj9Z3dnZYDyIE+eKPj4+zA8UwvT9kaVupVF74EDASQV+5cgXRaBR37979Dh2Spgurq6tIpVK71gGi7Njtdly4cAE2mw0rKyvY2NhAq9VCoVDYFRZFEw+augvvP1nDUtEsbAo9LxwYPYMS6iiqV/j1NKkT9IFptVrUajUuIGjcQJzog1zoy+UyyuUyotEoe+WSrR4AThwikr3H43kqIizqDNFobZjGYwCYnpJOp9kqkKJNa7Uastks//t+MbdC7OWkUfEMgO8zgb6X8M+0222Uy2WoVKqh4MNT0UIJSTRCf1D6Hyn6hc8WjRgp5vhhn3+n00Emk0EqlUKlUuFwAr1eP7Tx4o8D0lxUq1WOUKf7rFQq4Xa7uVB4lGSrYQKN3judDo/ji8Uiuwk5HA7o9Xo4HA6YzWZO/lOpVDCbzWw1R+tpuVxGpVLhRK5hWkOeN4TFAtm19Xo9zMzMQKfTIZ1OI5vNotPpsDgwkUggEomwJddBRY3v9dumdz2Xy/GeSVQl4N5zFI/HUS6X2Uu3Wq2yBRplAQideWjPkclk7Ks7jJkJ1FDZrygjihvRl4Z1cv00QfUSCUT3xp4LC15aFwi0D8lkMkQiEZTLZSSTSeRyOV6D6BmhGpCol8C9PYqocAqFAj6fDxMTE/B6vQey37wQq5vBYIDb7WYTbOI4l0olaLXaA13o+/0+7t69i2+++QbRaBQXL15EPB5nHhWN/bRaLU6ePIk//dM/hV6vh8VieeK/m7qtGo0GNpuNw2CGYQEbDAaIxWLY3NzEzs4OfvaznyEUCvELS2Mdigb/PgsXLXokFBV2VYWcPOH/y2QyWFlZQbVaxczMzIHTEEqlEr744gtcv36dE/welP5HwpyNjQ0WxQL3pjAejwfBYPCRFqBisYjPP/8cGxsbWF9fx2AwgFqtZmu7YVG/Pyko/W9rawuffvopNjY2kMlk0O/3YbVa8dZbb2FsbAwnTpzg0Ith6pQ9COTskMvl8PXXXyObzWJtbQ0ymQxOpxOvv/463G43jhw5gmAwiH6/D5fLhWaziVu3biEQCLBoEADW19exsbEBs9mMiYmJF7poJpDto8PhQLFYRDAYRC6Xw0cffYQPP/wQg8EAq6urkMvl6Ha7yOVyGBsbg91uh16vP5B3iNxBJiYm8Jd/+ZfIZrO4ePEiLl++jFqthlQqhWaziWaziUKhAJlMhnA4zJM7mUzGHdpOp7MrPVLoAEVCbEoVHEZPbzoYk1fw3p+vWCzyOhoIBIZGwPisQNMCKpqFEO6X5HqxHwqFAlKpFBQKBT9H5E5E34eKb9rPKUBGp9NhenoaJpMJb7/9Nt566y1otdqnUgd9XxzY6rZfR/lZjPdIpEDG68Bu9w7hKfggMBgMdnWZqRNBkEgkHNZis9ng9/sfa4RHXf29J0Ra7DQazVAFMxBNIpPJIJlMYmdnZ1eQxn6f2fd5boS2g/frHAttfJrNJorFIoxG44F2munnJu6gMMGPzN7324jImo86i0KbObKm2++ZontAEyHaPMl2iFxbdDrdgTsAPC3QQk7FJT2DNGJWqVTweDwYGxtjus6wbfoPQqfTQbPZZLpAMplEpVKBXC6HRqOBy+WC3+9nRxDqrgvFpf1+H+l0micwlUoFSqVyKKYwwwKi8Gi1WrTbbTgcDty4cQNarZb5sr1eD6lUiuOAhfZsz/uZIlqWXq/H+Pg4rFYrQqEQzGYzJBIJ70skigbACXVC0Dpyvz2eLOuoGTQse44QQivb/TrNZC+o1+uf+TNPNMH9pqkHIb6mg8/9cL8GFhXKeyFsVAmffepOazQaTnimGigYDB5Yk+JAiua9ylTgHgXBbrczuftZQTgq2BticVCgh2a/RUar1WJ+fh52ux1er/exIjtpBHjt2jVsb2/z5k/FjsPhwMLCAmZnZ+F2uw/8fgDfJrBdvHgRyWSSR4IHhXw+zxZcVHR+X+7vk+J+6X8E6o4I0/8eBKlUivHxcbz22msIBoPfSWtqt9vI5XJoNBq4ceMGbt68iVQqhW+++QaFQoF9MhcWFr5X0tOwYzAYcPd1a2sLxWIR9XodEomEVdsUFz1quoLBYMD2ieFwGNeuXUM8HofZbMbU1BT8fj8mJydZAU/XRjZiwWAQ586dQzweZ2EkxSTX63VMTEwc8BUOHxQKBVNejh07xo2Ra9euoVgsIpvNot/vQ6FQoNFoHLiTBv28RqMR586dg9lsRqFQwJ07d1AsFrmBQRM/+jNUcPv9fqjVasRiMcRisV2FEKX/jY+PY2Zm5pHXqucNpVLJ43/he0AoFovcxHlWnGeiRaXTaU7FW1tb42eF8hRIU/GsHCSIc3/s2DEEg0EYjcZ9D0uPg0ajwcLRRCKBZDIJiUTCGoEzZ87g7NmzMBqNGBsbg8FgwPT09IEKRg+saC6Xy7vsXIRF87NMlBKeYJ6XGfbDcL+CGbgnmKCIWo/H81g/LxXNN27cYMcJ4FsLO5vNhvn5eSwuLg6NkKff7yMcDuPy5csolUoHWjT3+33eLDQaDRfNj3OAedKfY2/6nxAkBHxUES0l2r366qvsPStEu91mW6Ff/OIX+Md//EfueMhksl2pg4elywzsLpp3dna4aKauobBoHoZ35fuAiuZEIoFQKIRbt24hHA7j/PnzmJiYQDAYxOTk5K4ESaHuIxgM4uzZs9jY2MCXX36JXC6HfD6Pra0t5iKK2A3a2/r9PhYXF9m3eXNzE6VSCblcDplMBgaDgffDgyyc6ecF7lEbFxYWkMvl4Pf7kclk8MknnyAejwP4NuyGOMBmsxmLi4swm82871AnViaT8SHd4/FgenoaLpdrKN8hEjfvtSQFwKLqUCgEpVL5zIpm4pBnMhl8+umnuHv3LlKpFBfN5NxjMplY0P4si2apVIpms4nJycmn9p6XSiXcunULhUKBaZBkR6hWq3Hy5En81V/9FfR6PWw221BEqx9I0Uy0ABK4Ad/6odbr9acaHkGpg+l0GsVikVWaJIRRKBQHRs8gygTxv4QKUjJ6d7vd8Pl88Pv935v7RddJo6RcLsf3gCBMXRwGux9KA2o0Giwm2WtJA9zrfBFNRRjhSi8ViRuFINssWozo/tOzQMIVIejvbLVaqFarKBQK2N7ehlQqhdPphNPpfK4vsFA8u5/36f0OPRKJBEajET6fD41GAyqVCv1+H7lcDuvr67Db7dDpdDCZTKxYrlQqWF1dRbFYRDKZRKvVgkwmg91uh0aj4TGZ2+0+MPHS0wa9j6VSCclkkpXdwLdevE6nc+S42zRS7na7yGazCIVCSCQSTAcwGAzwer1wOBwPvDbirwqFj0IRt4j9Qe+l0WiE2+1GvV6H0WiETqfjsXW73UahUEAmk2GR3EH+vMC3yXekC1IqlZicnOTQLXp+qMghOoNwbRKKuCwWy9Cl/90PQpcl+vyEnFuiOz6r5572bkplJPu7wWAAuVzOlDiinj6rBiB1fvV6PacsP0mNRlRBstJttVrsDU7R7DSZsdlsHDAkrBcPEgdSNJMJdq1W42AO8p1VqVSw2+1P7aRN3bnPP/+cwwkoVluY1/68xSskYGu326jX69xNJQX75OQkFhYWMDY2hrfffpuL5u9T2Ha7XZRKJdTrdWxtbeHWrVtckA4rarUaVlZWkM/nsbGxgVQqxapdIZRKJXw+H3Q6HaampjAxMQGtVguPx8PRxsLR+WAwQDKZRCqVQq1WY99nci4pFAq4cePGLj9RIaeZ7mOj0cA//MM/wOl04r333sP7778/FC/ywyCVSjE7Owuv14vr16/jl7/8JUKhEC5evIjV1VV4PB689dZbcDqdu/yfV1dXWTTW7/dhs9nw2muvweVy4fXXX8eFCxeY6zrqIG/WZrOJzc1NXLp0iWN0ZTIZZmZmcO7cOR4pjxLa7TYnG3755Zf4+c9/jkqlglKpBIVCgampKbz55pvQ6/UwGo33/T5yuZzdQkbhuR8m0GTHbrfDZrPh0qVLzA1PpVIol8ss7D1y5Ajm5+cPvJGhVquZxmcymdDpdDA2NobTp09zUUd7qEajQaVSwcrKCorFIq/ZJBQ2Go04duwYTp06BYPBMNQJmuTyQU4fdBCgYpH2JKGbxNPugJKOJpfLIZFIIBaL7YqS9nq9nGhL3PBn9bwYDAZoNBrmVz9Jo7Hf7yMajSIajaLdbiMajSIWi7E7ld1ux/nz5+HxeLC0tMQpmsMiMD6wTjOJAehGkMiIwjzI6eJxHkIhsZyEKplMhtWfEomEP/y9HcznCepy0ssnVKZqtVq2DyMz+e/7QtDhoFarsRuAMMNdJpPxojAs6PV6XMRSl3mvJRzwrVDDZDLB6XQiEAhwxLher4fX64XH4+HuANE9DAYDKpUKj6np9Eq+qkIInz2aBBBNo1Qq4eWXX37uz46wm7z33aBn/n7CFKIXWK1Wfu8o+rdSqWBqagqNRgORSIT9nzc2NlCtVvmd1Wq17Mns9/vh9XoPfGN/WqCDbLPZRLlcZq4d8deNRiNvVMMoXnoQ+v3+LmFjNBrl0AAa9bpcrl2C6b2gZ044laL/HhZa17CD3kG73Q6TyQSDwYBisQjg3tpXKBT4cDMMoM9aLpdDrVbzxILWTCqaiR6QTqexvr6OdrvNjS+5XA6DwQCr1QqbzTZ06X/3g/Da6d+lUilP+YTivKdNqaG1qF6vc6OLRHTCzq/BYOB7+SzX4adZtNJBUZgaSfalKpUKer2eJ+wWi+W5pv09Cg6UniH8oCkdMBQKQafTwev18gb/fUa/jUYDjUYDmUwGX3zxBVKpFC5duoR8Po9er8cEc6PRyGPmg3h5O50OcrkcqtUqdnZ2sLy8jEqlwl1goq9QUfd9TrF770EymcTNmzdRq9V4MSN7qdnZWUxNTQ3tqf9+16xSqXic7PP54PF42DNTWGi3Wi0+MG1vb2N7exvlchnr6+vcQSVu/d4OvFarZVFLoVBAsViETCZDqVRin87nCYlEwuK7TqfzHYu4SqWCa9euPXTDXV1d/Y6IsFar4fr16zAYDCiVShyxTYfM48eP49ixY3A6nXjllVfgcDieWmrnsKBSqeDq1atIpVJYXV1FuVxGt9vlQjIQCODo0aOwWq0HFmf7uCiVSrh8+TJisRgnjarVahw5cgQmkwnBYJCv836fqbARQbx26jxTIMowbW7DDLVajbGxMZ5uUDgTNTmeJkXxaUIikTDHl2hu3W4X0WgUq6urbM2ZzWbRaDTY0pKmpYuLizzmH+ZnhXyk5XI586/L5TJPKMm7WqFQcIOHKCpPAmp0tdttXLt2DVeuXEEkEkE+nwcADpYJBAJ49dVXWYMwCuswaR7a7Tbu3LmD3//+9xwrX6vVMDs7i7m5OTgcDpw5c4b39mG7tgPnNEulUuYdX79+ncfuCwsLsFgs+1q+PAiUW76+vo7/9b/+F1ZWVrjDolQq2UaJ8u4PiovZ6XSQz+c5Oenu3btc0NLoc2/R/KhoNBooFAoIhUL47W9/i83NTSQSCfbzBe4V5Q6Hg71Yn/Rlf94g2y+v1wufzweXywUAHLMtLJpjsRiKxSLW19fZDWFtbY0nEPl8fl9OplarxeTkJKxWKzY3N/nzKZfLbPL/PDvNtGEFAgFUq9XvPLv0DqXT6Qd+n1gs9h0RYaVSwfXr1/m/9/LHjx07hr/4i7+A1WrlFLDD1l2sVqu4evUqtre3OW1SJpPBbDZDq9Vy0azRaEauaC6Xy7hy5Qru3r2LnZ0dVKtVaDQaLCwswOfzsU/3w6ZONBmjopkKZhrjH6bn4VlCo9FgfHwcSqUSsViMO5i0rgj1LcMGk8nE1ptU4K2uruLWrVvIZDJYW1tDoVBgH92JiQm8+eabmJ2dhV6vPzAf6u8DKpppnyEedyaTQb1e5xhorVaLQqGAWq3GYsgnAWl6qInx85//HOVyGcVicVfTZHp6GufPn+eG1zAfQAh0KKzX67h79y5+85vfoNFo8KRldnYWf/Znf8ZOPvScDNuzciBFM43WidekVqtZoEUpROvr69xlJm/Q+91EGpX0+30UCgXmZFarVaYjyOVy9p+0WCyw2+0H/qAJXTP2CruoiCOD+IepVUm81G63kclkkE6nEYlEkM1mUS6X0Wq1eNREalu/3w+fz8fin2HFfi9Np9NBNptlZT/xrGjkTC9jrVbDxsYGKpUKIpEIHx5IZEgFwN6/iwQJxBmj0ZEwWttisTz3F1rolbv3+W21Wkgmk/vSWYTIZDK70paoWKIoW/I1p4QwlUqF6elp2Gw2GI3GQ9tRJPqN0NWHbOaMRiO0Wi2USuVI+TILqWqUzkYiIrPZDI/H871ExrVajZM5aRJIIRXDvo4MG2jcT/editB6vT700c1EcSTf92w2y8JZ6j4TlYtCs0jMNSrvDrCb27xf3UE0ilar9UTTWqJnVqtVbG1toVQqIR6P76KrEkXM4/HA5XI9corrMGAwGKDRaHCCLR0++v0+7HY72xyazWYYjcahnkQcyN1WqVS8UPv9fjgcDo5ybbVauHLlCkKhEBPCySNwaWnpO8pt4FsebKvVwvLyMqfrpVIpNBoN5v+Mj4/jz//8zzE5OYnZ2dmh4vIKQbwxMsDP5XIP5VDmcjlcuXKFlfHhcBilUglbW1uo1Wp8cLDZbHj55Zfhcrlw/vx5vPLKK1wUjBJKpRIuXrzIPFvq/JGamfiCnU4HhUKB1brkxEEL0X4FJtGGzGYzTp06xZGy7Xab0yQB4NixY8/1xZZIJLDZbDAYDCiXy9/papRKJXz++ecPXURJIAp8mwio1+uZD04ceuH/Iz4iFdeHEfV6Haurq7h9+zYKhQJzNSmpje7JsKi4HwXEcaeNvd1u8wFgenoaP/zhDzE1NQWLxfLQZ1koqu52u/D5fBgbG8Prr7+Od999F2q1euTWkWECNTwkEsl3JkHDiFqtxpSMK1eu4LPPPmPtB3kynz9/Hj6fj9+dYS2EHhdkn1soFNhy73EsYfP5PNLpNMLhMH7xi18gEolgZ2cHyWSSm2dyuRyTk5N4++234XA4uHAe9ntKa1A6nca//uu/IhQK4fr168hms7DZbDhz5gzcbjfOnDmDqakp1rsNKw600zwYDLiDTMI/skSqVquoVCoIBALodDrw+/3cRaTTH3VRyLKk0Wggl8ux8T4VSNQ1NBgMGBsbw8zMDKxW61CcePcKu4SWNiRKqtVqDzUTz+fziEQiiMfjzN1ttVoolUpotVpM9dBoNPB4PPD5fMwFfljCz/PGg8RuBOIqA9il5CeKBfHLiHtML66wm/8gWy2VSsWCHRIUSiQStqbr9/sH0mkmTj6NDhUKBXfZqfv+qKAwAovFApPJBJ/Px+8Iqd1nZmYOlQfzfqB1pNPpsMMOiW4oRMBkMrFCfVQKZmB3mhgJnyn5z2w2w+l0wuPxPPD9p45at9tFpVJBOp2GTCaDy+ViGz7ykBfx+CDOJ9HLhpWeAXybmknCxUwmg2w2i8FgwB1lk8kEj8cDh8NxYNqhpwFhtsPe9V4otif6Hv2Zh0E4BarX62w3uLW1hZ2dHeTzeZ4wUxCb2WyG2+2GzWaDRqMZiXeOiv5arYZoNIrt7W0UCgUWWLtcLgQCAY6QH/ZDwIEVzQaDAUqlEvPz83j99deRTCbx6aef7uoE5nI5XLt2DXq9ng30zWYzb+TxeByJRAKNRgOpVArNZhMbGxvY3NzkbqBer2el/9TUFLxeL/OaDxIymQw6nQ69Xg82mw0ej4et5zqdDuLxOB8qwuHwQwuXarXKIrdCoYBSqbTLSUGr1bKA4MyZM5z6RWOQYThAAN8WrBqNhjmSpNS+H2jhoX8HwKruBwXH7P176fBw9OhR5nrPzMxw0Qx8e5gZDAYHUjQTbDYbfvzjH2Nubo7T+h51k1UqlbBardBqtbhw4QIuXLjAMe0qlYoN80ncdZhBAQzJZBJ37txhagZxSnU6HY4fP46JiYlHDo0ZFgg7WFtbWxyZHQwG4ff7ObzhfqNQ8qItlUq4e/cuCoUCbt68iXQ6zYcro9E41F2hUQJRCOmeDuuzRlqcSCSCzz//HJFIBNvb2+j1ejCZTDhx4gTsdjteeeUVnDhxYujt5R4EiUQCl8uFpaUlhMNhfg8IxWIRH3/8Me7evYtXX32VqW0mk+m+hwSiYtRqNYRCIVQqFdy+fRvLy8vI5XJcMFN3mQJj7HY7Tp8+Db/fzxOvYQel2G5ubnKSbSwWg0qlwtLSEtcjwWBwKEV/++FAi2adTof5+XkMBgNsbGzg6tWrzLck4/RisQipVIpQKISbN2/C4/HgzTffhN1ux7Vr19jXkopn4qrKZDIe0QeDQSwuLiIYDMLr9XLa0UFCKpVCp9NhMBjAZrPB5XKxF3C73UY8HudIyS+++OKhDxMVhwC+UyRKJBLo9XrY7XYEg0GcOnUKR44cGUqSvVQqhUaj4c1cLpczn+t+JvK9Xu8710ELkxAPKiqpWFepVDh+/Dj+6I/+CFarFTMzM/cdOR/kvbNarXjvvffYP3l5efmhXGYCJQdaLBZcuHABf/mXf8mUJ2EKnPCfhxXk333jxg1sbW2xqAf49r1ZWlrC4uIiHA7HSN2PwWDAQuOdnR3EYjGkUilMTEzA7/fD5XI90KOeeND5fB6XL19GOBzG7du3uaNIdAyxaH46IPEZHViHEfRMbW9vY2NjA1988QW2trY4/ttkMuH06dOYmJjAqVOncPz48aFI3X1cSCQSOJ1OHD16lCe1QhQKBfzud7+DVquFSqXCxMQE058eVDRT4No333yDVCqFixcv4vLly1z79Pt9nqBarVa8/vrrGBsbw/z8PHw+H2srhh3CFFuKAc9kMlhaWsLS0hI/J8FgcGT47gc6L5FIJNDpdHA4HKjVapibm4NGo0E+n0exWGSBH40vyPJra2uL6QiZTIYTc1qtFgsKVSoVLBYLDAYDuywMk1BFKpVCqVRCo9GwcTwFmwC7u6ePA3r4yHnDYrEgEAhwd2lYRyDCDnwgEMD8/DwqlQpb/dwPD/PIvF/BTCIPnU6HiYkJmEwmjI2NsehtWF9kuVzOxfz09DROnz79yMlUWq2W6Rcul2vkKAdPE4PBgC2kisUiHzzIIcNsNvMBf1ifhf0g7BLH43FkMpld7jw6nW7XOiD0nKUpDXGgU6kUEokE4vE4ut0uzGYzc7w9Hg8MBsPI3JfHBe1B5OcunII9zrULnTLocC+VStnZaRh1A7Qn5fN5bG9vIxqNolKpsG+zwWBgK1e73c7P1yg/GxLJvUhni8XCuo5yucwOF/SeSCQSJBIJ3L17F1arle+HUNBPibO1Wo3XnJ2dHWQyGRQKBX4/yZeY7OXID9/tdvOeNOwHEUq3JPFfNBpFNptlepjZbGbXK6LuDGtNshcHXjRTx2tsbAxmsxm5XA6ffPIJPvvsMzQaDXaEKBaL7Ge5vb0NhULB7hjCkTkVDgaDAadPn4bH48GxY8dw/Phx6HS6A40mFYIeHJ1Oh0AggKmpKSSTSYRCoSf+3vRCkSWUUqnE4uIi3nnnHbhcLpjN5ie/gGcESo8id4fp6WlsbW3hf/yP//FU7s1ekGn/xMQE/vZv/xZTU1NM56FfG0bQfer1enA6nfjDP/zDR6ZnkDWSXC7nBf5FhbDTTGEmUqkUHo8HY2NjmJubQyAQgMvlGhlOJvFN2+021tfX8bvf/Q7ZbJbFnyaTCX6/n+PAAXD4EWkFKDa+VqshHA7jk08+QTweRzAYxNLSEsbGxvCjH/0Ifr8fZrN5ZDa8x0Wj0cD6+jpqtRoXhcR3f5znot1uI5lMIhwOo1gssuh0YmICU1NTsNlsQ1UUCZ+pGzdu4J//+Z/ZqarZbMLhcMBut2NqagpLS0uYnp6G1Wod+edCIpGw+4darcYrr7wCj8eDlZUVrK6usmam2Wzi008/xdraGjweD++1zWYTrVaLqU30jtEXTcjJZlCj0cDlckGv1+P48eM4fvw4HA4Hzp07B7vdziEypOsaNhBPO5/P45NPPkEymdzVRSda49GjR/H222/DbDZz2NYwPe8PwoHvAiTYUigUmJ6ehtPpxMbGBncvSJBDNmIAWFlMRbIwoYoI89TB9ng8bNFC8a/DAEpYE3YXiFYik8keiYf7oO9NwQN0fx0OBwKBACwWy9B02/cD3Y/BYMAcJxr7Pe2fm7oIpHqenp7GwsIC+5AOM+g+AfcOiOPj4wf7A40wyNe8XC7zekIes+TRPKyHp/0gFO6VSiUkk0nWONDaQN0qosGRlz3ZhzUaDVQqFR4j0/RvfHwcTqcTTqeT00qHZU19liBLz2KxyGN68qf+Pps9fTY0HRUGmRCnmTrNw1RECO1P8/k8wuEwJ7b2+30olUougKxWKywWy8h5md8P1GCwWCxwOp1oNBqIxWL8/tB0KpPJcCMvFotxzdJoNJDNZnHnzh1kMpldAUHlcpk/f3o3idfu8Xj4AOVyuWAymQ7yNjwSaMLVaDSQSCQQDodZSyGTyVhPRq5NOp1u5Pzdh2a1UyqVcDqdMJlM+MEPfsA2dES/CIVCCIVC7LwhlUrZkk2lUsHtdkOtVsPtdsPpdMJisWBxcZG9SHU63fcOCXkekEgkTCGRSCSYmZmByWRCPp9nd4jvC1q8nE4nzp8/D6fTiYWFBUxMTLDAbthB98Xr9UKpVOLv/u7vkMvl+Nf3HigeVa2898+QhaHD4cDU1NRQ8wlFPD0I0+3q9TqPXIX0DIo6HrWikGht1BmkGF6iX6ytreFXv/oVjEYjrl27Bq1Wi0qlwrad+Xwe7Xab7Rt7vR5mZmYwMzOD06dP4/Tp01wcjdJY9XFAFJVEIoEvvvgC8Xicx+YGgwHT09OP7C4zGAwQjUYRj8eRTqdx+fJldp4gjrjf78fk5OSBioyFoOZNLpfD119/jUwmg+vXr3MglNlshlwux9mzZ3H+/Hm4XC54PB7WpBwG0D5hNBqxuLgIl8uFfD6PtbW1XZRQKn5TqRQ+//xztjylNSYej3MgFr1XNBk3Go2sOzp37hycTieWlpYwNzfHfOlhx2AwQCQSQTgcRjgcxuXLlxGNRhGLxbhj/84778Dn8+HMmTOcwzFqk86h2Q3I3BoAe/c1m02kUinUajV88cUXuHjxIp/4lEolstksstksjEYjjhw5AovFwqIdpVIJg8HAZPph/mAMBgN3bKampmA2m7G2tsaCm+8DYWrQ7Ows/uZv/gbT09O7uvHDsBg/CoxGIx8ojh49+kwtmJ6Enyhi9CAsLKlorlarXDRTN2SUi+Zut4tms8l2nHRQWFtbQzgchlKphNFohFwuZw9z2uApzEelUsHhcOCNN96A2+3GK6+8gpdffpm9VA9zwQzco1FUKhUkk0lcuXIFa2trfF/I895msz3S9+r1evjqq6/wzTffcPeRCi7islLRPCz7FT1L+Xwen332GTY3N3H37l3k83moVCr4fD7o9XqcOXMGf/InfwKNRgOTyXRoCmYA/IxT0VypVHD37l3odDqOE6eimXz8KXiL8CAXJxIcu1wuBINBnDt3DoFAAOPj4xgfHx8ZXni/30ckEsGVK1e4aI7H4/zz2+12vPvuuzhy5AgcDsfQ2P5+XwzVbkA3kGgFEomEie9+vx9zc3PsikHFs8PhgF6vZ/sjav+T88IwdpeFoMQxCo6YmJiA2Wze5ddMp9JisciRk3tBG6BKpdoVLT3qJ35ydBjmz1DE6EHoiUtfJGgCwP7DZrOZLTBpKjHsoM4YNSJmZ2e5e0wgfmG1WuVrotEwpaWSANJut2N8fBwOh4MbFi/KAVMqlTJ3eWpqCjKZDOVyGaVSCc1mE/F4/KEe+oR+v49UKoVKpYJut8t0QdLaBAIBaDSaoSqSKCOAUmap0NdqtdDpdKxJslqtTFk5rGs1OTsNBgMEg0G89NJLTG16VOei/UAFpd1uh8vlgsvlgsViGUkhJTmD0NSu1+sx5YgoJnq9fuQoGUIM5Q5ABS/59fb7fTidTrzyyiu7OoLUTZHJZGz0TelwVGgN+wcjkUjg9XphsVjQbrdx9OhRNJtN7OzsYGdnB91ulzf0zz//HJ9//vm+rhpGoxEvv/wy7HY75ubmMDMzA5vNNhI8KBEinje63S5yuRzK5TJSqRRSqRQ7I+h0OkxPT+P8+fPQaDQcT05j+WGOQpvKAABahklEQVQHrYMqlQqvv/46AoEAtra28Pd///fY2dnZFcZA4QlOp5O5k6+88gonjjmdTqjVahYhCTmIw762Pg0QnW1ubg5/93d/h0qlgg8//BC/+c1vUKlU8PHHH/NY/lFQrVZRr9ehUqlgt9vZB/z48ePwer1wuVxDcyDp9/sIh8NYXV3F1tYWrl69inA4DKPRiLGxMbhcLvzgBz+A2+3G0tISjEbj0E91nwQKhYKDoP7kT/4Er7/+Ok9vnnQKSuFjSqUSFouFJznD8Bx8H1SrVSSTSfaZlslkmJmZYa/7iYmJkRJV74eh/MmF3UW6uTqdDi6X64B/smcDEqP1+33mQZHzBVnUtFotrKyscMrdXuh0OjidTu4y09hslLvMIkQ8KwgTN+mL7NjoEE6uECRGJoHqKGxkVLw4HA7I5XJWredyOU5RJUgkEg61sdlsmJychNfr5S+a/B3WDuKDQLQ2o9EItVqNdruNmzdvQq1Wo9lsolgssq/3fhBODAHwviaTyZh+5vP5uMkxLAJAohNUq1WkUimk02kUCgUUi0UYjUaYTCZYrVZ+Rsxm80hZMj4OJBIJ64FojxXxLYjKQ44hAJgZQJNvnU43EvzsB2Eoi+YXFeSoQRG1arWauVLdbpe7EvudavV6PSYnJ2EwGGCz2WCz2dhuToQIEQ8HuRr0+31cu3aN/UMpSIAmOaNUGNDUbXp6Gn/1V3+FfD6/a1MDwDQ48tmdmZmBwWCAwWDgcfsoXfOzAFFeJBIJXnrpJSgUCnZd2RuiBICpL8QnT6VSaLVa8Pv98Pl8UKvVHIUcDAYRCASGxqWl3W4jn8+jXq/jxo0buywLZTIZ5ubm8MYbb8But2NpaYnpGS/6MyLiW5CotdPp4MSJE3jttddgNpsfWTQ7zBCL5iECFc0A4HA4WBhJRfLS0tJDU+3o+7woiW4iRDwNCMVzrVYL169f57hXi8XCFpanTp0aqY6rMKRlYmLigesHrRvCLxHfgrr3J06cwOLiInvS7od+v8884EKhgFu3bqFSqeDMmTM4ffo0B1vR9yRKwzDc83a7zT/3jRs38Pvf/575/zKZDLOzs/jxj3/MAvZh6Y6LGB6oVCoEg0FIJBKcOHEC58+fPzQhWmLRPKQQLkL076O0WYsQMcwQepmTbzEVzsC3vrRarRZut5s9m0e1OKBOqYgnx6NwjgeDAXQ6HVN8/H4/B6NQxLJSqeQu/jA9V2TxmkwmkUql2FNYpVLt8qh+kQShIh4OiUQCi8WCyclJno5LpVKmiB2WZ0VcRUWIEPHCgZTwvV4PBoMBer2e7dmocCZv0T/8wz/E5OQkPB6PeHAVwQcuwv26zRaLBXq9Hr1eD8FgEP1+Hzqdjq3Khq1YJmQyGXzwwQe4c+cOJ9YplUp2qrLZbNDr9ez0IUIEcO8wefLkSUxOTjInngrpUUr8exjEolmECBEvHIS2bGq1GlqtFhKJhDvM5MWr0+ng9/sxPj7Ov0eECCHu90yQIwJwz8JwVEAR35FIhCkZlHtgNBp3WbqK74MIIUbFYehJIBbNIkSIeOFAnsQqlQpvvPEGLBYLxwQD97jAWq0Wdrsdfr9/5P3ORYh4VLhcLvz1X/813nzzTR6zKxQKzgFYXFyETqc79GmQIkTsB8ngWcasiRAhQsSQQxhnKwR10Q4LF0+EiEfBg7yHyTJPLJZFvKgQi2YRIkSIECFChAgRIh4C8bgoQoQIESJEiBAhQsRDIBbNIkSIECFChAgRIkQ8BGLRLEKECBEiRIgQIULEQ3Do3DP6/T56vR6azSaSySSazSZ7BiqVSlgsFqhUKk7KEiFChAgRIkSIECHiYTh0RXOz2USj0cDOzg7+9//+3wiFQuj1euh2u3A6nXjjjTfgdrsxNTWFyclJURUvQoQIESJEiBAh4qE4NEUzWeS0Wi3U63UUCgWsr69jbW2NY0D9fj8WFhagUqnQaDQwGAzEolnEC4/BYHBfmymK+aV/ihAhQoQIES8qRrpoJtpFqVTCnTt3UCwWkclkkE6nkUgksL29jXw+j263i8FggGazCY1GwybtYhEg4kVHtVpFtVpFNpvF5cuXkc1m0e120el0YDQaMTc3B5PJhGAwiGAwKL4zIkSIECHihcVIF83EXy4UCrhy5QoikQh2dnYQCoVQq9UQjUbRaDT49zebTajVahgMBqhUqgP8yUWIOHgMBgNUq1WkUimsrq7if/7P/4n19XU0Gg00Gg14vV78wR/8AQKBACQSCf9ThAgRIkSIeBEx0kVzrVZDpVJBOp1GPB5HPB5HNptFqVRCu91m+oVKpYJSqYTBYIBWq4VGoxEjcUW8sOj3+2i1Wuh2u4jH49jY2MDW1hZKpRIajQaazSZTmkQKk4h+v49Go4Fut4tcLodcLrdvWpxKpYLVaoVKpYJOp4NOpzuAn1aECBEinh1Gtmju9/sIh8NYWVnBzs4OPv30U4TDYbTbbTSbTQD3OmlKpRJOpxNOpxNTU1PweDxwOp3QarViMSDihUS73UYymUSlUsFvfvMb/PrXv0axWEQ4HEa9Xkev1wNwLz6aXGaUSuUB/9QiDgqNRgPb29sol8v48MMP8dFHH6Hb7XL0OEUqu91uvPPOO/B6vVhYWMD8/LwYtyxChIhDhZEqmqm70e/30e12US6XkUwmkUgkkE6nkU6n+fdKpVIolUooFArodDpYrVZYLBZotVqo1WrI5SN16SKeMYRCOBK+ATiUm36320W1WkWpVEI8HmdKRr1eR7fbBQBIJBJIJBIoFAqoVCrIZLID/qmfL/r9Pgskad0RdlfpuaD7RF+HCf1+n6cS5XIZuVwOm5ub+Oabb9DpdL7z+4PBIObn55nKI+LFhvB9eZR3gzRKwvdOIpFAJpONxPsl/LnpOvaD8FoO8/rxJBDeRzqcC5+Dg7xXI1M51mo1pmNsbGygVCrh+vXruHnzJvL5PEqlEgBArVZDpVLBaDRienoaJpMJ8/PzmJ+fh81mg8/ng1arFTtnInYhl8vhiy++QC6Xg9vthsvlgl6vRyAQgFarPegf76mAFiDSAMRiMayurqJaraLdbvPipFQqoVQqYbfbceTIEczNzcHtdh/6RZ0OTr1eD6FQCKFQCI1GA+l0Gs1mE/V6HfV6HVqtFn6/HzqdDhaLBVarFVqtFl6vF2q1+qAv44kgvAd3797F6uoqSqUSr7mrq6s8idiLer2OlZUV5PN5BAKB+xYNIg4HBoMBU7i63S4fuOnXSBshl8uh0+mgUCigVCq/oyeidSmfz+Obb75BLpdDsVhEuVyG3W7H+fPn4XA4oNfrh47yMxgM0Ol00O/3kUqlkE6nUSqVsL6+jkqlwjQ3+r0SiQRWqxVWqxUajQYulwtarRYej+eFWGMfBc1mE/F4HLVaDXfv3sXdu3dhNBpx7NgxmM1meDweeDyeA7tXI1E0DwYD1Go1pNNpJJNJfPzxx4jH47h9+zaWl5f5xQXABbPH48HLL78Mr9eL06dP49SpU5DJZKJ1loh9kcvl8K//+q9YX1/HsWPHsLS0BJfLBbvdfqiK5m63i0KhgK+++gqrq6sIhUKoVCq7ChylUgmdTgebzYaFhQUsLS3xKf8wgzb/TqeDjY0NfP755ygUCrhz5w5KpRKy2SxyuRxsNhvOnj0Lu93Ofu82mw0Wi+VQFM3dbhftdhu3b9/Gv/zLv6BUKmF7e5ubFvcrhhuNBlZWVhCLxXD27FmxaD7koIKx1+uh1WoxLZJ+rVAooFAoQKVSwel03leE3+/30el0kE6n8Zvf/Aabm5sIh8OIRqOYmZmB1WoFcK8rO2y0SvrZ2+02IpEIlpeXEY1G8etf/xqJRAK1Wo0D1qhonp6exuTkJKxWK44dOwar1QqpVAqXyzVU13ZQoJyNTCaDn//85/j5z38Ov9+Pv/iLv8DExAQkEglcLteBTT+HumgWdj2SySTW1taQTqcRi8WQTqdRLpfR7XahUChgNpuhUqngcDjgcDjgdDoRDAbhdDphMpkgl8sP5aj9RQSNbeiEr1AoHlvYScE3jUYDlUoFpVIJzWaTux+HYeOnBbtQKCCfzyMajbJgljY6hUIBvV4PpVIJh8MBu92OyclJ6HQ6PmweJlBx2O/30W630el00Gq1kM1m0Wg0sLW1hVgshnK5zF2ver2OVquFWq2GbDaLXq8HuVyOTqcDj8eDQCAAqVTK065RQq/XQ7/fR71eRzweR6VSQTgcRjqd5ilfvV5Hu90GsP+4vdfrodPpoNPpoFQqIZVKQaPRQK/XQy6XH/hYVcTTAa2LzWaTpzDUHSYMBgOUSiVUKhWoVCpks1loNBqYzWbej3U6He/LUqkUnU6HaWIkSKawskajsS8l6KBA+0atVkM4HEa1WsXq6iq2tra4NqnVami1Wmi1Wrv2kUqlwtae0WgUtVoNfr8ftVqNu/GHbb39PqADVDweR6FQQLvdRrVaRTQaxWAwgN/vR6vVgkKh4HXleWKoi+Z+v88ntd///vf453/+Z1QqFaRSKX6hAMBsNuO1116Dy+ViAYpOp2Mqhk6ne6EfwsME4YKdyWTQbrdhs9lgs9ke6/vV63V2YInFYojH4yiXy/zro77J08Gz2+3i1q1buHjxIuLxOG7duoVkMolOp4PBYAC9Xo+TJ0/CZrNxp91iscDj8RxKPnO320WxWESr1UImk0Emk0E2m8WVK1eQyWSwvb3NaaLkHNHr9SCRSFCv13H79m3me6tUKkxMTEClUmFqagp+vx9+v3+knh2in0QiEXzwwQeIRCJYW1vD2toadxKF/ML9QO+lRCLB+vo6PvvsM1itViwuLsJsNj/R4VbE8IAOmOl0Gp999hlSqRSWl5dx+/btXW47RNlQq9VwOp3QaDSw2Wyw2+0wm804cuQITCYT7HY7bDYbqtUqisUi8vk8qtUqWq0WGo0GcrkcMpkMzGbzwV64ALVaDeVyGTs7O/jHf/xHhEIh1lWRBoCaOsC9fYTuDRXVarUasVgMWq0WCoUCbrcbBoMBLpdr5CdWT4JSqYTLly/zIQQACoUCPvzwQ+j1emi1Whw5cgQajYYPYM8TQ1k0U2dMePJMJBJYXV3lk2e324VEIoFcLmc+od/vx/T0NObn56FWq3mhFnF4IByh1+t1NJtNGAyGx7ZG63a73A3YK4Y7LKDCOZ/PIxQKIZVKoVgsolqtAri3oBOH2ePxYGJiAvPz8yyaPQwQiogpOZQO5Pl8nqlf6+vrSCQSXEgDu0V/CoUCg8EAlUqFvx9wT6RCG/vjHuAOEvQ+FQoFbG1tYWtrC/F4HMVi8ZGnLcIDGolMu90ums0mut3uoTx8CUWiDxKOEoRCplG9H7Rm1mo1JBIJRKNRrK2t4fbt28x3F67FKpUKhUIBGo0GDocDhUKB6UztdpsplVSMdzodPqT2ej12xBqGdZmmnM1mE9VqFfl8HhsbG1hbW0OpVOKGi/AzFn7O9I6Uy2WeaGo0GuRyOVQqFUil0gceTF8EdDodZLNZdngCvnV8UiqVyOVy3Gk+iHs1dEXzYDBAMplEMplEsVjE8vIyCoUCrl69inq9jsFgwGMdIoR7vV5cuHABXq8XLpcLRqMRcrl8ZBclEftjMBhw4mOtVkM8HueX53H5YMKNnkbLw7A4Py2Q+0Gz2UQsFsPNmzeZagCAx6VjY2N49dVXMT4+jkAgAKvVyuOvUUen00G5XEar1cLW1hZ2dnb4IN5oNJDP51EoFFCtVrG1tcVj0vHx8V1dMqlUCplMhmq1ip2dHVSrVdTrdVSrVZTLZVy/fh2ZTAZqtRpTU1Mjs/70+32srKzgq6++QiwWw/r6OlKpFMrl8veiJ5Gfc6fTwd27d1GpVPh5kkgksFgsI0db2Q9UOLXbbeTzebRaLeRyORQKBaYqtFotVCoV1Go1vocSiYT3LIvFgmPHjsFkMh3w1Xw/DAYDJBIJbG1tIRqN4uuvv+aMhPsVML1eD6VSiZsc2WwWer0e+XweRqMRZ8+ehVwuR6FQ2KVPGjYIBWp37tzB3bt3kUwmEQqFUCqV0Ov1oFaruYmn1+tZKCykmm5sbGBjY4MP751OB1tbW/j666/h8XjgcDgOjY7mMGLodkQqmm/cuIF4PI7f/va3SCQSyOVyqNVqUKlUsFgs0Gg0WFhYwPHjx+Hz+fDaa6+x+nSUxqIiHh2DwQDZbBarq6uc+Nhut+HxeB5roaXNjxYz+hJ2i0Ydg8EA7XYbjUYD0WgUN2/e3BX8QxHZs7OzuHDhAqanp3mMfljeIwrlqFQquHLlCj799FNUKhWEQiHeyBuNBj8PEokE4+PjGBsbg9lsxtGjR2EymfgQkclk0O/3uRtdr9dRq9Vw48YNhMNhzMzMjNTzQ0XzL37xCxQKBVb+f99r6PV6fBhbWVnB6uoqFhYW8Oqrr8JgMECtVsNkMo38c0VrBvG/y+UyNjc3OSBobW2NaYSpVGrXNOLEiRM4fvw4JicnMTY2NnJFc7/fRyKRwPXr1xGJRHD16lXE43FeN/cD2cMC9wTXwD0NxdraGgePBQIBLpqHFSRQy2az+P3vf4/f//73qNfryGQy6HQ6UKvV0Gg0sFqtWFpaYl3I+Pg4ALBg8KOPPmIueLlcRq/Xw87ODr755htMTU3hzJkzB3uhIh6IoSma2+02i3BisRjy+TyKxSIajQanlw0GAygUCjgcDpjNZvh8Pvj9fjgcDqjV6heat0ziG6FYot1uo1wuc5FEhZJCoYBUKuV0ROEmplar+V4qlcqh2+Dq9TpyuRwLRajQfVoYpWLnUUAdZuIKCsWNUqkURqMRXq+Xu6kKheLQOGWQoIgs0/L5PCKRCB/AqWCWSCTQ6XRQKpUwmUxQqVQYHx9HMBiEwWBAMBiEXq+HTCaDXC6HSqXC3NwcbDYbJBIJC6Dq9TqkUimLB2kTHdaOc6/XY21IuVxGuVxGtVp95G4fXRdxu4n/LXwnG40GEokEdDodNBoN3G73M72mpwE6aNK7QlxuujaicZH9ablcRjQaZVFXoVBArVZjXi6BePTJZJLpCKOCdruNXC6Her2OUCiEaDSKZDLJazBx+9VqNex2+760yMFgwAcJiUTC/FSFQrGLhkGC02Fbi2lqR58/Cf2Ae++C3W6H2+2GzWZjdwyv1wuHw7HLlcZqtcJkMkEmk+2ieR0m8fnjgKa9jUaDxdnC+0ENUaED2kHsU0NTNGezWfzyl79kxSQp1iuVCiu7gW9Ff8FgkAVLxIl6kVEqlXDp0iU+yQP37in9P/KLVCqV7DQyOzuLmZmZXZzNYDCIQCAAjUYDu90+VONU4RSi3+9DJpNBpVINdXfioECHpFwuhw8//BChUAjLy8u7RqgSiQRTU1N466234HK5mJJxGArmwWCAaDSKjY0NxGIxtoDKZrPcKSYnCNJDCD1hScwnl8u58KVFu9Vq4aWXXkK1WsU//uM/IpFIoNPpIJPJcKf29u3bsFgsmJqagl6vP+C7sT+azSa2t7dRLBZ53P6oLgWkJ5HL5bDb7XA6najX69jZ2UGtVuPfVygU8G//9m+4desW/viP/xizs7NDe4ggtNttZDIZ5tF2Op1dLglERygWi9yVJwoUHUSIk7sX0WiUD/2kKRgF0DoSjUZx7do13Lx5kw+kZJfm9/vh8/nw7rvv7ns46nQ6+Kd/+if87Gc/YzEXCQPr9TrK5TLS6TRSqdRQHiiIi5zP5/mL3JuUSiVefvllvPnmm7BYLDhy5AiMRiMfJoBvLfrC4TB3rIXakhcdlUoFhUKB1+lischmD9TsUyqVuxxXDgJDUzS3Wi3EYjFsb29z96NarbIPJN006lYEAgHmML8oHea9YhOh4KRWqzEXnJBIJHD79m0kk0m02220Wi225SOOprBDL5FIWJHa7/fZH3NYMBgMUK/Xkc/nAYCN7p+0aD5MdAyCcIQci8Wws7ODYrG4a1Qsk8lgMpng8Xhgs9mGcrLwuBgMBqhWq0in08zBjMViu1x3aOHV6/Ww2Wzwer2YmZlhnYTX672vtZrBYECj0YDD4YBMJkOn0+GudaVSQblchlwuf6pTkKeNbreLSqXCDYparbZL8b8fhBuWSqVi6zB6F/cWxO12G6lUiqdew/ie7U2hIz4ydbzoZycqxs7ODkKhEMrlMlMxgO92vfYTJ9N0g8byo4J2u41EIoFwOIxYLIZEIsETBXqHSEi8sLCwbyJkp9PBJ598wlNMEs0qlUoWY1OAkFAwSVqCg16bhPoX4TRFpVJxUMnU1BQsFgtPp/ai2+3CYDBAp9OhVquxZmQYku4OEjTdqdVqu947usdSqZSL5oNOiDzwopna8KVSCYlEApFIhMcf7XYbpVIJ7XYbgUAAHo8HwWAQJ06cQCAQgMPhOPQPmdBAnixtGo0GUqkUGo0Gd+PL5TJWVlZ22aXVajXk8/ldD1+/30elUkGz2cTKygpyuRzfQ5lMho2NDXi9XgQCAfzkJz+BRqM5kOveD0JOMwlCdTodcrncY2/GjUYDhUKBLYIOAwaDASKRCMLhMLa3t3H37l3s7Owgn89jMBjAYDBgcnISZrMZi4uL7Mc8TFOFJ0W/30c4HMYXX3yBTCbD3T2DwQCv18uJoWazGcFgEMFgkP+fwWCA0Wi879pChxFy3xDaSsnlcqjVak4vG8auKo2BiV4Qj8fZfvB+RTNRU1566SWcPHkSUqmUi4hIJIJIJLLLx3lUUKvVsLW1hWq1uoujHo/HUa/X2dGB6AnNZhPFYhHFYpE3dgBMdSM3J7lcjnw+v2vyJ5FI4HQ64XA4MDExMRLONFQgko897R2Uj+B2u6HT6fDaa6/h1Vdfhd1uh9/v33fy2+l04Pf7sbCwwOJji8WCbDaLtbU1ZLNZVKtVSCQSGAwG6PV6+Hw+zMzMYG5uDna7/UD3e61Wi/n5ebjdbn42tFot5ubmOLGOPte9icM02Wo2m+wEViqV0Gg0IJFIOJDtftSWw47BYIB0Oo3l5WVsbW0hn8/zPQYAo9GIEydOwOl0Yn5+nrv4B7G+HnjR3Ol0UK1WuWiOxWKoVCqo1+t8qgMAv9+PCxcuwOfz4fjx49xhPuxFM/GoaKxz9+5d5PN53Lx5E8VikUeF1OkSWv7QpiaEUJRRKBSwtra269ctFgvMZjOWlpbYkWRY8KyL5lHq/DwI/X4fkUgEV65c4WeGjOGBe4v/0aNH4fP5cPToUUxMTBw6t5nBYIBwOIxLly6hUqkgk8mg2+3C5/NhcnISPp8P7733HrxeL9xuN9xuNxeGD+tiEL+VOKsUkkLde5VKxRzeYZyCUTBQtVrFxsYGdnZ2kEgk0Gq19n0HyDpLoVDg7Nmz+Ju/+Rv2q261Wvjggw9w48YN5vyOEiiqN5lM4s6dO1hZWWErNdq0qTCmw4TwUEHvFAnAiNOrVCoxGAz4oArc65Y5HA4sLCxgcnJyqBoS9wPRTeh5p6K50+lAo9EwrenVV1/FT3/6U9bL7Pf+dLtd+P1+HDlyBHq9HmNjY9Dr9VhbW8Mnn3zCTSAA0Ov1cLlcCAQCXDQf9F6v0+kwPz/PU9vBYACbzYY33niD47ApsXDvz0prBh3IyD6XrHP1ej3cbvcLXzTfuXMH0WgUxWKRRcXAvaL55ZdfxsTEBBYWFmA0Gl+8REDiKVOoxPb2Np+86GSvVCo5mtbn88Hn83Ec5zCMa542hEEKZH1GqUuNRgMbGxvY2tpCuVxGNptl8Q69fHt5dHvvz34v8t6uEnHzhGIHpVI5NC8yCXOkUilMJhNMJtN3xIyP8/0OC+h6SqUSotEoUqkUL/CU7Ed+qW63G0ajkTc5co4QPhd0Xw+SQ/a4oEPj3mKHroU4ufT1KNdI4/tMJoN8Po9SqcT3Ta/XQ61Ww2g0ctE8jAeRUqmEQqGAWCyGVCrFFo73ew8ocZUS3QwGw66xuUwm44nhMNIvHgSiHQj9y4WTTuq+02FIJpOxWFoul7NA1Gw2w2w2MwdeIpEgmUxCKpXuWpNNJhPvY8Oypj4I5MlMmhjhJEKhUMBgMMBisUCv17OI+H4g28GJiQkA9zisFGhC+/5gMIBUKoXT6cTi4iKmpqaGJjqbJkmDwQBWqxWBQABmsxlGo5FF1PdbP3q9Hk+EhYdLrVYLpVIJm80Gl8sFm802Es/FswCJQYXrCK0zCoWChdUHkQIoxIEUzTTebLVa+OKLL/Dhhx/yiKZYLDJfyGw24/XXX4fH48G5c+fw8ssv86Y0DC/R00aj0cDm5iaLDQqFArLZLL766itks1kUCgUUCgX0ej3e5KgTsl9X+XHQ6XSY5xiJRKDVanmkOEz3XK/X49ixY3C73U8lfU242d/v34cdROVptVpYXV3FRx99xFMcACxKcblcOHXqFObm5uD1eplXtzdWmjiZEomEF6xRwn4aADpUPA6PnXjihUIBly9fRiQSwfr6OhqNBrRaLSYmJmCz2TAzM4NgMDhUh01Cv9/H2toavvzyS0SjUVy8eJH9qu93P0i05XA4MDc3xxaPxIOWSqWoVqtcWI0SisUiPv30U9y+fZuLOFpXhYdHtVoNv98PvV6PQCDABRNRDej9ILcQEjUtLy/z3yWVSjEzM4P333+fHRSGGYPBgCdx5GNOQlE6fNOz7nQ6H7oGS6VSLC0tweVyIRQK4Wc/+xlCoRBisRgfPkmsfuHCBfyn//SfYDAYhsZxhXRVcrkcCwsLCAaDkMvlMBgMDyyYgXtc9s3NTWQyGZ7qqFQqth08ffo0fvCDH0Cj0cBgMDzHqxoetNtt5vzTWkT2p3RfDAYDVCrVi1c00+ZOXdSNjQ0Ui0Ue/QDfppS5XC4Eg0H4fD64XC7ulo0q9kuMov8nXKDS6TQymQxSqRTu3r2LdDrNnd/7fd+H4VHShqgzR9Yvj6qmf96Qy+Uwm82wWq1PxQh+r7hyFEGfW6vVYmurZrPJ42XqgpFoh0z0hWENNI6lro9QoELOGqNCi6LOMa0XwqKZumZCegX9mftdG/25RqPBEzKi9ZCo0mq1cqd5GLvMg8GApxCxWIz53vuBaBkqlQp2ux0ul4sLxH6/z841crl8ZK2yOp0Or7fUVRZ2ueiZpy67yWSC2+3G2NgYbDYbFhcXYbFYoFQqoVQqUS6X2VFBOAGj94a4qwaD4Tu812FEr9fjqedeSzQqnHU6HSdlPgjEVZbJZMwLTyQSzA8HvuXOOxwOzM/PD92hk9ZCo9H4UMcu4f7ebrdRLBbZto+mpdSpt9lscDqdhyJM6nFA67LwWQN2u/SQteVB36MD+dsbjQa2t7eRz+c5rlVYnNFok5S409PTh4bDTOIQeonI3iiTyaBWqyEUCnGufbVaZYGKkBT/OCBPTFLM3+97kUJVp9PB5XKxaGpY7/uTHKDIdSSdTrOx/l4+2rBe934oFAq4dOkSUqkUlpeXmaNK743X68X09DSmpqa4AKKDWqlUwsrKCkqlEk85gG83+7GxMe6ukfBlmHnQlL528uRJpNNp5h9TTHQmk0Gj0YDJZMIrr7yCc+fOQafTweFw7CuIpDTKVCqFra0tLC8vY3t7G4VCAVqtFna7HadOncLY2BiCweDQPjeDwQCFQgGbm5ssbNsPZD/p9/vh8Xjw5ptvwuPxYGpqip8ntVrNtoWvvfYaayTITWIUYLVa8fbbb2NmZoZjkIVFM/HdaeKm0Wg45U34/4TNnFQqhWQyyd1ThUIBo9EIrVYLi8XC7gnD3vwhypFEIkGz2UQgEEC/32fbvWq1iuvXryMWizFHWaVSMWVlL/r9Pm7evImvv/4akUiExcn0DBqNRszMzMBqtWJsbGxo36GHodfrsfMXPVOxWAwfffQRYrEYNjY2IJPJWJBNKYCjer1PApqQUz0Uj8eRy+XQ6XQgkUiYtjI9PY2ZmRlMTU3BarW+eJ1m8gdNJBIsQhEWcRqNBjabDW63G/Pz85ifn4dWqx3aDfpRQb65m5ubqFQq7PtJ6VnCCFZyzBB2xx4XFGRit9uZr3y/olkoZKKieVhf5ic1OKeimfipozZa3otisYjf/e53WF9fx/r6OneLqbj1+Xw4efIk/H4/F82FQgE7OzuIxWL41a9+hXg8jkgkgng8DuDbk/5LL73ErjVC/+5hfSelUik8Hg9OnDiBcDiMlZUVDngpFouQSCRYXl7mYAWPx8Mj8/sVzSRC3dzcxPLyMnZ2dqDRaKDRaOB0OnHy5EnMzs4+0qj6oEBr0Pb2NkeL7wepVAq/348zZ84gGAziRz/6EbxeL9sSUvdVoVBgamoK58+fRyQSYSH3qMBiseDNN99EqVRCMplEKpXa1UmlBD/iVO61u9pP9JVOpxGJRNjiUaFQwGKxwGQycdFM32vYodPpoNVq2cFqMBggFosBAKrVKm7cuAGNRoOJiQmcOnWKef37XVuv18OtW7fwf/7P/0GxWOT9j6DX63H8+HH4/X6OXh9FkNi+0WggEokgGo1ie3sbv/3tbxEKhfgZ0ul0mJiYwPj4+IE7gxwUiHVARXMikeCQNqlUCqvViqmpKUxNTWF6ehqTk5MHfp8OpGjudrvMtSSXDILQj1mj0XDM5uMsMDRKovQ4av9TsiC1/e93Mn7aIDX1xsYGqtUqEokEe8lSch+JLmgUvB9IxEQiHPK9tFgsPM7a2y3V6XQwGo0olUqcvLjf99Xr9XA4HIcq6OJBEPIXR3G8DHwr6CRvc2ExRMIlhULBdlB2u527IPF4HBsbG0gmkxzOIUzkkslk6Pf73AWQSCTY2dlBu92Gy+Ua6gJRp9PBbrejVqvBZDLxfaFRMK07dG3krkEG+uS/XCqV0Gq1uDsWj8eZd2e1WuH3+zExMcGCqGH0uyYdSbPZZKu8Bwn3JBIJ24KRrdhe3iYVjMLx6bB3T/dCLpezEp8OmMKimRwxHnZ9xHdvNpsstKQOKnlZGwwGFjKN0n0iqqTVakWr1WJqiTAgKJFIYGVlBVar9TthY61Wi6c94XCYAz2EdmJkBRkIBOD3+0cqbp32DhLm12o1RCKRXdkJlBbZ7XZZQAt8+w4JNUmj9Gw8KWhdqtfrPFkXuoBRE0/oz3zQOJCiudVqIRwOY2trC4VC4TsLt8FggMfjYXX/9x1l7eXHbG9vY3t7m7menU4HFouF7dUovedZo9fr4dq1a/j7v/975icTd5hG6dRdfljAAJnCkx+s0+nE66+/DqfT+Z3fTweHer2OSCSCRCKxy8+ZIJFIMDY2htOnT2N8fPyFECRQtCkdVEYR5P9JxR9tTHQ4dDgcMBqNOHnyJN599130+32OlP7oo4/wm9/8BtVqFalUijnQ9E4Sx317exupVApWqxXlchkulwtvvvkmfvjDHw5lx4zoGVT83bx5E0qlkmN8hY4aGxsb+Ld/+zcEAgFYrVZ0u10YjUYutC9fvox0Oo2vvvoKX3/9NarVKgqFAmQyGc6cOYM//MM/hN1ux/z8PCwWy4Fz7vYDue8UCgVEIhF2KrrfMy+VSjE7O4v333+fw1/2HqKJukPe1EqlcuQ2fLVajWAwuIu7K6RnkP8yXev9QPHPmUwGq6urWF9fRyaTAXBvckqHD5fLxUX4KN0r6gKPj48jFArh6tWruyKlP/nkE2xubmJqagr/4T/8B4yPj/OfDYfD+OCDDxAKhbC1tYVQKMSaAplMhpmZGe4wv//++0wJHIX7IxROX716FV9//TVyuRxbwtZqNdRqNbTb7e9Q3uigJtSiyOXykXyPHhftdhuxWIwnD/F4nBsbFKBEnt3Dss8cWKeZeLtCpSSBikHqkD3KzdqrjqdTPwk9kskkGo0G84nJpm0wGDy3sfxgMECxWOTUQyHnFNidrU7hAfT/hb9O4QnkJEIej7Ozs/v6KlOHO5/Po1ar3VdcQZ1mt9v9wljfUEdfKDwgAdQoLFz0/O5N1BKmaOr1ephMJk7sqtVqiMVibDu2tbXFf5beBXrm6J2iLkC73UYoFGIu9LB254k+YLVaUSqVYLPZOAiIPlfqEFWrVcRiMSgUCpRKJaZo0IGWRH/RaBSRSIRdIihCmkJSSCQ3jKCRMbkgEP1rb9FMnWNKbPN6vSy+2a/LIyycR1FzQtS1JwXZg1IcNNmo0d9hMBjYHnNU1hYh5HI5TzLpOiihtd1us1AduKfbsdvt/Gzlcjmsra0xj54cV0j0R/Ztfr8fXq+XD7ujAFp/O50Ocrkc6yVWVlZQKBS4IbN3nSRrTzqsUU0ijIl+EUCdZurQC6mjtH/RgXxYnonnWjSTl3C9XkehUOCULiGEXo60YD/o+9EDVygUeOOv1WooFou4ffs2isUi0uk0k8upu0K2QYFAAEtLS7BYLPz3Pw9QhDUAtisi2yq1Wo1isYhCocB8OKVSCa1WC51OB7VazR0LGm0ZjUbMzs7u2x2mF7tSqezbBSNXBbLAWVxchN1uHxqLMaHbyrNy8pBIJByH6vV6ceTIEfamHUZQh6Pb7WJrawvb29vY3Nxk6o1MJuMi+d133+VkrU6ng3w+z2Kcra0tLpZpJGaz2WA2m3kzFPJee70e8vk8+v0+CoUCarUaj8+GbaFXqVQwmUwIBoN45513kM1mceXKFSiVStRqNfawputpt9v47LPPmO9tMpmQzWbxxRdfIJ1OMz2FkhT1ej0WFxfh8Xig1WqH8pBJG3OlUsHm5iZHINO7RIUN2eNZrVacOHECNpsNS0tLDwyrIAgPJ1qtFiqVirtnLwL6/T5CoRDu3LmD7e1txGIx5PN59Ho91udQiNAoFYRCyGQy9mI+evQo3n77bSSTSVy6dAmZTIb1E/F4HB9//DHu3LnDB+1sNouNjQ3k83kA99YXm82GM2fOwG63Y25ujsXFJDoflXtE+qxSqYRbt27hxo0bTD0VJvEKQcK3fD6Pzz//HGazGcvLywgEAnC73TwxJgrpYQRN1akWpIYeOTYplUqoVCoEAgGcPn0aDocDOp3uoH9sAAdQNDcaDdRqNb5RFCMp5JFZLBaMj4/D7XY/sGimIrharSIUCqFSqbA7RSQSwf/7f/8P8Xh8l5UYJXdlMhlUKhUu4skC5nmBDLulUikb4zudTly4cAE2mw1bW1vY2tpisQDZhNlsNhYekXchLTQP4tuVy2WkUql9eUHUbSEP0mPHjvFYchhABU2r1XpmFAp6UdVqNRfNVAwOIyhhqtVqYXt7G1euXEE8Hkc2m0WtVoPdbofVasX4+DjeeecdzM7OQq1Wo9vtIp/P4+rVq1hdXUUsFkO9Xt811TCbzZiYmGAzfmHRLIwTpqK53+8PZXeEQih0Oh2sViuazSbkcjlbPxWLRaZsER+Rgjx0Oh30ej2KxSKuXbvGdAyyljt16hTcbjeOHj0Kj8fDvzZsoE5WpVLhNYWsCIUbukKhgE6ng9frxbvvvovJyUlMTU09lKdMHX2LxYJ8Ps/3/H6uHIcRg8EAoVCIPa8TiQS7qtCBYmFhAQsLC7DZbEP3njwKqGjWarVYWFgAAGxsbODWrVtIp9NoNpusG/rd734HrVa7iwpFEyybzcbirp/+9KeYnp7mfe1hFJhhRKPRwM7ODpLJJJaXl3Hjxo1dk8v9QA0KEqBTzUMUr+npaW5+Heaimeg91EClNUMYIDQ+Po6TJ0/yszcMeK6fCC3gxB0jegSlAJHXpdFoZCX73oeGqB2dTgfZbBb5fB7VapWJ9zSCzeVyPKLeK6ojji/ZwRCP81mf7KiLPjk5yT6nMpkMVquVvRp9Ph/MZjN6vR5zBb1eL7RaLRfXZOujUqmYH/ewv5eoKaRMJRBvyOFwwGQy8fcfJlFPr9fjz3U/AeN+oIWJaDr0LOz9PblcDoVCgQMq6ABBQrBh7XgIY1mz2Szi8Th7zQLgQsZisbCFY7fbRalU4ueeBG6DwYDH8SqVChMTE5ibm+N3gzxVS6USJ+LJZDL++0loOqygtQUAHA4HJiYmoNFosLOzwxs9cdspXImEKeVyme0edTod+/T6fD643W6YTCamUw3js0Id32aziXw+j2w2y00CIUh8rdfrYbVaYbPZHnmTomeNDhtqtZo3xRcBg8GA7y91GElUSJs/RSwP4zTi+4DogSaTiXn/ZrOZi2YS+VMzSshNVSgU8Pv9mJ6eZheeUXIS2Q8ymYxF9kQnFXrZK5VKdpkhwalQ8E8aK5oGlUolZDIZmM1mOByOoWlcPW1QkEm5XEY6nUYymUStVoNMJuOJl8FggNlshlarhVqtHpp65LkWza1Wi1OX6CWjTV6pVHILfnZ2FidOnIBer//OQ1Or1XDr1i0UCgXcuHEDt27d4tNKu93m0U6r1eIubq1W22VtQ7ZLzWYTCoUC2WwWDoeDCefPCjKZDC+99BLzIanwdTqdcDqdzOWWy+W7yPCkHBXG/dI/H5XvHYvF8PXXXzO3GwAXhhaLBS+//DK8Xi8WFhY4DnZYFrJ6vY7V1VVkMhkkk8lH4tHSAYqUzFTcCdHr9fDll1/i2rVrkMvlCAQC0Ol0uxwUhrEQAu4tOqlUCoVCAdevX8fHH3+MRqOBcrm8y25tYmICLpcLRqMROzs7CIVCWF1dxdbWFiKRCL9/JpMJ58+fh8vlwssvv4zTp0+jWCyyCO7SpUu4fPkyu0k0Gg1WhZON1rB25YWb9ksvvQS324319XXEYjH2naVgpa2tLS6CZTIZT8cAwO12s2DpzTffhNfrhU6nG+rnpNVqsdf77du3sby8/J30PxJLBgIBjI+PY3Z2FjMzM49EuZFIJHC5XDCbzVAoFPD5fKhUKhzN/SJgMBggmUzi9u3bbDVGIkK73c7ru8PhGPnOoZA+ORgMMD8/D6VSiXg8jmg0yusSOc8A4D3OaDTiJz/5Cf74j/+YxevDEFbxJNBoNJicnITD4cD169dhs9m44UXvAzkWnT17FhaLhYOF0uk0vvjiC/aMT6fTUKvVuHz5MhKJBE6dOgWr1To0xeLTAjmNxONxhEIhfPHFFwiHw8hms1Cr1bBYLEzJmJ+fh91uHyqqynP7KYhXSyPlvW4FQk6pXq9nPindKKGtVi6XQyaTQSgUwsrKCp9aer0eRwWTc4BUKt2349HpdJj/TNzQpxFD/SBIJBJYrVZMT09DLpfDZDJx6qHL5XomGy9196vVKo+kaTGjgpwWMK/XC5PJNFRdZgDcISU6j5BqI0x3E8Yj1+t1lEoldoWgDVx4j3u9Hk8raDRNMZ3D2jkk0LtAnLBUKsWfK3HUiZtMGxO9O5S+KbwnxJP3+XxcOOXzeaTTaWi1WqyurkIulzMfT+jIotFoht55hAphq9UKpVKJer0Ok8kEnU7Hh1PqkgmTvEgYR+Npl8vFgRcul+uAr+rhEI5ByQptP+zVR3wf5xzqpppMJnbzGdYD1NMGCc+J5iPs4lMThDplD6IajhJoz9Dr9fy85HI5plk2m81daycFeZC+4OjRo0NTAD0paF2gtEe9Xs91CCUb+nw+eDwe1grRHkOai1qtxkJu0loI0yVHieP9qKAGarFY5NAocg9Rq9Wc00Hi6mGqR55r0RyNRnH9+nWEQiH2JiYeC71stLm3223IZDJoNBpIpVIObEin07h8+TIymQxisRhyuRxsNhtef/112Gw2fnDJNaPRaODSpUu4dOnSLocEs9kMt9uN8fFx/nPPWvlORbPQBYNeumfxUpRKJSwvL7Pwa3t7G5VKhYuE8fFxTE1Nwe/34+zZs/B6vUMZZlKv17G2tsbcMSoYI5EIdwHj8Tg6nQ6LUigCvNVqsQgU2F009/t9RCIR5HI5TknU6/U4c+bM0LpCPCrIttFisfDo7/bt2/jVr36FdDqNYrEI4FvR38TEBF5++WWMj49jbGyMn8v5+Xl4vV7U63VIpVLkcjncunWLlfKjBipkAoEA/uAP/gAnT57E5cuXceXKFXZAINtH4J7X8+TkJCcHvv766zCbzc90IvW0QG494XAYiUTivnQJmUyG2dlZvPfee3C73TCbzY/195nNZly4cAETExP43e9+h0Qi8QQ//fCj0+kwfadYLO6ya5TJZAgGgzh37hyCweBIPC/PChQgMzY2hoWFhaEqgJ4UMpmMaTevvfYaHzbJIYWol3q9Hk6nE1qtFoFAAHq9Hh6Ph8XWX3/9Nb755htUKhVcv34dOzs7sFgsCAaD0Ol0bDF7GNDv9xEOh3Hp0iVEo1FOzyTXKo1Gg+npaUxMTAxlDsBzL5q/+uorTl6ijRv4tnMmlUrZjo2M5vv9PtbX1/HrX/8aqVQKly5dQjab5Zvpcrnw7rvv4ujRo8zjJE9isv/58ssvdxXNNpsNExMTGBsbY/708wAJIYR4Vg9FuVzGl19+iVAohBs3bmB7e5vdRiga+dVXX4XP58OZM2e42z1sD2m9Xsf6+jru3r3LwpJWq4V4PM52gtevX0e5XMbq6uouD2qhDeF+izV1qyUSCdLpNHv5jnLRTBxjKoCog3r79m388pe/ZE6dUPQ3OzuL06dPY3Z2lkVter0ec3NzrD3QarXY2dlBOBwe6aJZqVSyJyzZ6N29e5c5mEL9g1ar5YPDuXPncOHChaEUPe4HYdGcTCYfmP5HRTPxth8HJpMJr732GkqlEmKxGD7//PMn+fGHHiSqJX2AkG4oLJodDsehK5qF4vqHwWKx4Ec/+hGWlpZgNptH4t15VAgtC1999VWcO3cOwHfDxYRfRAEslUpQqVRsXnD16lWUy2XcvHkTcrkck5OTWFxcZH7vYSmaB4MBF83ZbBapVArlcpkdvLRaLaamplg4O2z1yHOdkRBPcL+bIBTjZDIZbG5uwmAwoNFoQC6XI5FIcKFNXpE0IhofH+fTHJHxybKEuIwymWyXLymdag6iSHxWfx8tYkR/KRQKTLInpxDqdqtUKk50o5H1sC5mcrkcBoMBFosFmUyGxZ1E1RBa0snlcj75E6+M0sz2YjAYIJPJIJfLQSqVQqPRjMwYlcRqNDnYu4EJx+VCE30S4NIhgn6fUJAjfA7onSVaxoNS5EYNZMdGtB7h2iB08xGmuY2Sxy7FxKfTabZAux+EKaOPuz6RnSHZRx12kBidJlX0/JA422g08hRz1OkIlFhHVpPJZJJdQh4Uxw7c248oGIloDMNWCD0NEAXsYaCagzz0SWRMXsRENaSEV5VK9cypo88LtAfR9dNBQLje0p4zrEL85/omE8mbVJJC9Ho9FgheunQJxWIRZrMZMzMz0Gq1+OSTT3DlyhUoFAoeWczOzmJ6ehoulwuzs7Ow2+28OAm9/ki9TIr/wwjhokZWPxsbG7hy5Qq2trY4Opf8MR0OB86cOYNTp04NlZ3LftDpdFhcXGT+18bGBo+1KGaTvgKBAD9n9EUdjr3odrv4xS9+gV/+8pdQqVR8+BoFL1WKdY5Go9/hqUokEjgcDszOzrKamzxDyb2G+LrkkxoIBPgd2fu9AKBarSIejyOTyXB07iij2+2yKwiFfezVWAwGA6jVarjdbgSDwZGK9gXurQmRSAQXL17kwu5ZgtITd3Z2sLGxMfQ89ydFuVzGV199hVAohI2NDQ6noATO2dlZLC4u8h40yqD9udVq4ebNm/jqq6+QSCRw48YNtpy732G6UCjgo48+wq1bt/Duu+/C6/UOjcj8IEFprRqNBg6HA1arlcXcg8EApVIJ4XAY3W4Xc3NzB/3jPjHoINBqtXhdBcCFszDYjf57GNfb51o0y+Vy9r7dezNIKNjr9ZDL5bC9vc0iJp1Ox04B1BWz2WwIBAKYm5uD2WyG0WhkAeDepCvqOFL6nrCjdFggvH9kuSf8omtWKBQs+qPkv0exrTtIUBpVs9lkg32ykyPfbfJ2pOfD4XDA4XDAbrfzmGcv2u02vvrqK04dIks/tVo99M+GsNNMtnEEEtUaDAbIZDLWDQiFkgQSgOl0un03MurGkgsDeToLbZWGdXG7H4SiZLp/dG+EoGuk4KFRtAur1Wos/tyvW7X383vcz5GsCNPpNBKJxC63olF8Rh6GwWCAdruNbDaLRCLBnWYav5NAbj/b1FEEXS9Zl0YiEd6TybGHrlMo1AbuBYBQPHKhUOAp12F6Hh4HNOnr9/tMTeh0OnxgJ7OCB8XdjxJo3aVOMwUq0dpAHWYhI2EYn5Hn9jaTNdHi4iJ7F+4HsiMBwIs9ndJPnz4Nq9WKc+fOwW63Y2xsDGNjY1z0dTodhMNhRCIRAOCxxmAwYOs58mUlb9HDMDoD7m2Oa2trKBaLuHHjBm7evMl8oU6nA5vNBovFgrGxMZw/fx5jY2PweDx8/cN88tfpdMwrJQ4hjfkUCgXsdjsnGHo8Hmg0Guh0OvZGDQQC+z5vnU6HvZmF4Saj8DxQpz0ej/P7Qk4PZFH4MEgkEhiNRni9Xrhcru9w5prNJhcEt27dwrVr11Cv1/mek5+vyWQa6udHCOouJxIJfPTRR4jH47h9+zbHtx6GzelRoVKpYLPZ2Jv5cW0WK5UKKpUK4vE4IpEIQqEQSqUSe9EHAgG4XC5YLJah3AS/L2q1Gmq1GuLxODY2NrC+vo5sNot+vw+1Wo2JiQm43W44HI5Dcb3APV3JxsYGcrkcbt68iZs3b6JWq7FAeHJyEuPj42i322xrSn7wNBUrFArY2tpCKBQ6dOK2xwGJCIkXrVaruWg+jKBDZqVS4ekMCQCJZjs2NoapqSm43W5YLJahnNA8t+pAKpXC6XSy9+mD6AD0sgHA5uYm5HI5e8d6PB5cuHABTqeTO4PAvc5bt9vF9vY2Ll26BI1Gg4mJCean0mi1UCig1+txZ5EMx0cdtVoNy8vLiEaj+PTTT/Hpp59yJ5aKo6mpKczOzuL8+fOYnJwcmdM+ibG63S4KhQIqlQqUSiX75I6Pj2N8fBwqlYoLaWHn7H4n1na7Da1Wu6vYfNSC86BBRXMsFmNrIkqZFHJTH/b56vV6+Hw+WCyW73RSm80mQqEQstkslpeXcf36dbZRMhgMnORFXsXDDhLG0YL94YcfYnt7m60nXzSoVCp2WLFYLI9VNA8GA1QqFSSTScRiMW5aVCoVprf4fD4Eg0F2DhplCHniyWQSW1tbWF9f52kP7TtjY2Ow2+0jf72ERqOBjY0NxGIxLC8vY3l5mWlecrkc4+Pj+OEPf8hCtnw+zw0wcjpSKpUIhUIIh8OHTtz2OKApFulwVCoVB0cdFg6zEKQBKBQKCIfD2NzcZEG6TqfD2NgYTp48Cb/fz97vw4jnTs8gfrFer4fJZEKr1do3clXolUodC6vVynZPwnFpvV5HNBpFpVLBxsYGIpEIjzpUKhWnzfR6PRiNRgwGA3g8Hvh8PjgcjpF+cckJoVAoIBqNIhwOI5/Ps+OBQqGAQqGAy+XC5OQkfD4fC5pGCSTcpGho4oMRf5meh0ctesk1Yy9dYVhHQvuBfnb6+eVyOb8fRLd42PVQMBC51iiVSn7nyuUykskkvz8kqpyYmIDNZoPL5YJarR5qESmB6DyZTAbr6+sIh8McaCJMyHyRIJVKWWD7OCJH4T1dW1tDKBRCuVxmYSpNbmw2G9ttHQbs9YffG5s8zAmR3xf5fJ594GOxGK8FFN5Cz87Y2Bh8Ph90Oh2i0Sh74BNonRL6nh+G+/M0cVjvB+0njUYDiUQC6XQauVyOaSdk3mC1WuFyuYZ+AvFci2ZamF0uF2ZmZtDv9xGPxxGLxR6oyCdh08LCAux2O1wuF0wmE/OsIpEI/vt//++cchaNRnncLpPJOIVQr9fjyJEjsFqt+NGPfoQf/ehH0Gq1z81u7mmDkg0TiQTW1tbw0UcfYW1tDbVaDd1ul+OxtVotXnnlFfzkJz/hiPJRhFQqxfz8PHw+H3dVKe2NCrdHLZjb7TYXTPvx4EcRer0ei4uLcDqdCAaDzPHf71AK3Ht+4vE4vv76a3g8HlitVi4EOp0OQqEQfve73yEUCiGfz8PhcGBsbAx//dd/jfHxcQSDQdjtduaUDyt6vR57dl++fBn/8A//gEqlglgstm+k9IsCrVaL6elp+P3+XYfpRymciVPfbDZx8eJF/PM//zOKxSJ37oWhScePH8fc3NwzC3B63iCOP7kUESf+sKHX6+Hq1av4/e9/j3w+j5WVFaY3aTQauFwu/PCHP4TH48FLL72EU6dOIZVKcROrWCxiZ2eHLRwpm+BBGgoRhw/0jiQSCXz88cfY2trC5uYm0uk09Ho9pqamYDKZsLi4iHPnzsFgMECn0x30j31fPNeiWSaTsaOFyWSCxWJBPp9/pD+rVCp5hEEvG7kBlEolrK+vY2VlBdlsFplMZtefpW4bcfco0cvj8TAZfRRByXeFQgHZbBbxeJwDBaiopEOBy+Vi/vcwn+IeBqPRCKPR+ETfg4pk6hB9H8/RYYZMJoPJZILVamWuHHV3AOwS7tE112o1ZDIZKJVKlEolaLVaLgiow5RMJgGALbTGx8cxMzMDk8k09PZ89FlT4E06ncb29jaruCmIgjzhhRZ0hx3kxW0ymR65YBZaF9KUMJ1OY2trC/V6HfV6HZ1OhyeKOp0OVquVNQeHqWimLjMJm4Bv95pRsibcD/QuZLNZbGxssA6gVqtxd9BoNCIQCCAQCCAYDMLlcqHf73PRQ/sqibyAb2sAIYXuRYZwWkj6q8O29pBdabVaRTKZRCQS4WRi8v+nfYvWiWGm+z13n2bgXnLUsWPHYLVa0Wq1dp1G90Ov18Py8jI++OAD6HQ6eDweqNVqHg8mEglsbGwgm81y6AI5CMhkMg4U8Xg8OHv2LDweD4LBIHeiR+3lJRVqp9PBjRs38OGHHyKZTLL1GC1abrcb77zzDrxeL06ePAm9Xj8ywQzPEu12mwV02Wx2Fy1hlNHv91Gr1Vh8Q3x2pVKJfr8Ph8OB8fFxLpTb7TYSiQT6/T52dnZQLBZhNBrRbDbZI7Rer8NoNGJ6ehrT09O77NeGvWAmgVqxWMTt27eRy+WwvLyMRqPB4RMajQbBYBDBYBD5fJ4N9ykESMQ9ECUhHA4jFAqh2+1yp5kEPb1ejykZx48fx/HjxxEIBODz+aDX64f+eXkYqLAJhUK4cuUKQqEQu4TQtIX2NpqIjdreAtyjbMViMVQqFdy5cwcrKyucetjtdjE/P4/5+Xm43W6cPn0aLpcLdrsdnU4HlUqF+aqFQoFpOnQwczqdsNlsQ18YPQ+0223kcjlUq1UkEgmmLDyoFhoVkPtHt9tFOBzmZyIcDnOI2Pj4OFwuF1577TV4PB7Mzs6yJmmYpxDP9amlE7jRaMSxY8fg8/mwtbX10IWl3+9jeXkZW1tbUCqVbKVFpzLqdgjH0OTfq1Ao4PP5MDMzw8l3Ho8Hdrt9ZE+7wjCPGzdu4Gc/+xlTDSiMwel0YmZmBv/u3/07zM7OMs91FK/3aYNGRRRM0Gw2oVarR75opkKmVqtxF1UqlbLFo91ux/j4ODuQ0H1IpVJQKBS4e/cuFAoF2xzpdDpMTU3BaDTi5MmTePfdd6HVamG324e+ABIK1KLRKD7++GPEYjFsbGyg0WjAZDIxveTVV1/F+fPnWQ9BHVOxaL4HWmdJaH3x4kVefzqdDjY3N1GtVnmap9FocPz4cfzkJz+BxWKB1+vleOFRBnXYQ6EQe19T0UyTPRozv/TSSyOljxCi0Whge3sbqVQKKysrWFlZYd6/QqHA2NgY3n33XTgcDpw4cQJms5kpXdVqFeFwmJ026M9Q6i657ozqdPdpgpoWhUIB8XgcuVwO7Xb7vum1owRK7W232wiHw7h69SrC4TBisRgymQzT+8jNi9biUQi+OZCjnkwmg8FgQL/fh9PpRCAQYFPv/YQVwLc8VPr/wohtoVUUpbpRVKXQXcHhcMBsNvPoaNg/nL2gzavRaHCnNJfL8ZiDTmgU0OF0Ojkl8XGspA4riAet0WiYFz1qixRdA4kogHsTmVKpBJlMhmQyiXA4zG4avV4P5XKZub30vlD3TCqVsp0cUaHMZjOmpqZgs9ng8Xig0+k4NXDYQcr9aDSKeDyOdDqNbDaLVqsFpVIJvV7PXuWUykWJh51Oh9XrRGk5LMIuISh9VaFQIJPJoFgs8iSKnEaKxSJ7dXe7XaytrXHgQqvVYl94ornodDrodDoYjUZYLBYYDIZD0VHs9Xo8gSmXy8jn89xdJ3ciq9UKp9MJlUo1cusJAPb5r1ariMViSCQS/PkrlUrY7XZotVp4PB62mqT1k94NIb2A/knTXrI3PGzv0eOAGl/lchmFQoE7zFTTULODpsajsOYKQcI/Epqn02l+luRyOaxWK8bGxhAIBLgm2y+/YxhxIKuZWq1GIBCA0+nE66+/DrlcjlQqhStXriCbzaJWq30nuY82NKlUikajsYuXSV0QiUQCj8eD8fFx+P1+vP/++/B6vTCZTDCZTFAqldz+H8WFnOgoyWQS//Iv/4JwOIzr16+j3W5DoVDw2OvEiRM4ceLErqJgFBfxZwWlUgmXy8Ve3TSRGIUXliBUGyeTSX4vNjY2OBCo2WxCp9PB5XJBLpdjZWUF4XAYjUbjO13UbreLWq0GqVSKEydO4NixY/B6vXjzzTfZ/sdkMj2y2PKgMRgMsLa2hl//+tdIpVK4du0aCoUCu/CMj4/jrbfewsTEBGq12q4igXibADjulYqDw4RSqYSLFy/y5I4oNyQg/eyzz/D555/zIaLf7/NkQqgFqNfr6PV6u+wLJycnMTk5yd9v1EH+w+TQdOfOHTSbTab6zMzM4OzZsxgfHx9aq6yHgahdm5ub+O1vf4vNzU3EYjH0ej04nU68/fbb8Pv9OHv2LJaWlrjx8DAYDAYsLS1xkXTY3qPvC3p3arUa3+NkMsmTDILNZsP09DSsVuvIvUOtVgvxeBylUgl37tzBN998w1MZk8mEl156CX/0R38Ei8WCqampkTpcH8hPSWbeSqUSTqcTY2NjUCgUWFlZQaPR4K4GnbqAbwUoex8sglwuh1wuh9FohMvlgs/nw/z8PPMWH+XlHnYIk9kikQi2t7c57Y8sgPR6PWw2G7xeL1uyjcrD+Lwg7DTT6XbUFnJKk6JrAO4VvpVKBfV6HclkEqFQCHq9nnmFxWIR9Xp9X7U/HTwVCgUMBgN8Ph/8fj+mpqbg8XgO4hIfG9Q9L5fLiMViyOVyKBQKKJVKcDgc0Ol0MJvN8Hg88Pv9CIfDyGQyTMmggAFhOhV1YEfpYPUwdLtdphikUinkcjkWDw8GA+zs7ODWrVs84SMbwlKptO/3k0ql0Ov17H9PGorDgH6/zwmcpVIJpVKJKQtyuRwmkwk+nw9Op3NkqQfClMxEIsE2rjTF9Hq9GBsbY/cqYSiWUERLX8C3h0673Q6n0znUrgiPi72WpQ8D1TDNZhOlUgn5fH5X6h+tO6PsNELuOuVyGcViEblcDq1WC8C9ppXFYkEgEIDBYBg5vcOBrGhUpMjlcvj9fshkMpTLZfh8PpTLZTZAr9frzDnNZrP7Om2QHR2lBE5PT2NychIWiwVut5tH8KMKYTw28ctisRhu3LiBeDyOfD6Pfr/PdmNutxsnT57E4uIi8wtF7Eav1+OuCi1Wo2Ymr1arEQwGIZfLsbOzs2uxJitHKpbv3LkDmUzGdmBC+oHw+5Fg6/jx4zh79iwsFsvIbXLNZnNXRzAUCqFSqQC4lyz50ksv4fz58/B4PBgbG4PRaOQuPfHAyWyfRMczMzOYm5s7VGEVwLeH8F6vh+vXr3PXVKFQYDAYYHV1Fblcbpcd4/3sC4F7HcUTJ05gbGwMwWBw5A6iDwLxfJPJJLLZ7HcKJafTyZaoo7jmDgYDPjwRVYci5qnwpXhwasTQIXIwGLCP8/r6OmKxGNLpNADAbrfD7/djdnYWMzMzhyYlUTjhrlQq6Ha7LAalsJK9hS4dJra3t7Gzs4NoNIpLly4hFoshHo+j3+9Dp9PB7/fDZDJhenoaXq93VybFqKDRaPCzIGzuUd1HX6NoxHBgbQDq5JBHaK/XwyuvvIJOp4Pr16/jxo0bKBQKWF1dRbFYxGAwYDXu3u9hs9nw/vvvY3Z2Fn6/nwvxwzBSJe5Tu93G3bt38etf/xqZTAa3b9/mghm457m6uLiIqakpLC4uYnFxcSQfyOcB4u1RWhXRXkYJKpUKfr8fWq0WX3/99a7PeTAYMN0AwC6+4f2uk1wknE4njh07htOnT0OlUo1cIIUwxZAie4mzTdSlP/uzP4PBYIDD4eA1gpwgSDyp0+lgt9vhdrsxNTWFubm5Q/cuDQYDthe8efMmbt++vevXv+9h0mAw4Pjx4zh69Cjcbvehul/NZhPb29sIhULIZDLf2YfsdjsWFhZYQzJqIOFsOp1GJpNBuVxGuVzmz5Ain+n6hHvLYDBAJpPBnTt3mG6QzWa5u+z1ejE7O4v5+XmoVKpD8VzQ5LvVaiGfz7MDE1nqCq1x6fdTkb2zs4PPPvsM0WgUV65cQTKZ5OdJq9ViZmYGLpcLU1NT8Hq9Izmtodh1alxks1kO3xJO70axRjnwT2NvzLFUKt2luO73+xxMYrPZ9k1vGxsb43AGvV4/suIuIcj/s16vIxaLoVqtYmdnhwn1xO+22+2w2+1s7eR0OpmjOGoP4/MCbQCUGDns4Rz7gVxo+v0+3G43/H4/Go0GPxv7FTy0UMnlchgMBigUCmg0Ghb9zc3NcXrbKPK8gXvc01QqxfxkmtIQDYfuS71e5258JBLh7hh11mw2G2ZmZjA2NsZR66MIEnU2m80Hroff9+Aol8vZ29liscBsNmN6ehoOhwN6vX5kRD2PCip6hB7edA80Gg13YEe5UUNie6GwHri3bgjtLCkXgMRe7XYbm5ub2NzcRDweZ/oX0Qto/H6Y7E6JYlGpVLC+vo5iscghWwaDAd1uFzqdjuuQdrvNgr+trS1Eo1F2/Or1euxfrdVq4fP54PP5uMAcJdAhvFwus2UpxcvrdDrMzs7CbDbD6/VyZsSorRMHXjQThPGadMIi3g8pl4kTs/fPqdVqOJ1O/hAOg1ME+ctGIhH8/Oc/RzQa5U4HFdQajQZvvPEG3nnnHdhsNiwtLbEf5qhf/7OESqVCIBDgToiQ2zwq0Gg0GB8fR6vVQi6XY8eMzz///L4+wxRjbzabceLECVgsFqYz6fV6BINB5vtSoThqi3apVMIXX3yBtbU1bG1tod1u7wqeII/qer2Ora0tlMtl3Lp1C7du3UKj0UCpVIJUKsWZM2fw7//9v4fNZoPD4Tjgq3p8GI1G+P1+KBQKbG9vP7Xvq1arMTExAZPJhDfeeAM/+MEPYDQa+Rka5QClR4VGo8HU1BTzM0lsPmoHcAIVO0IhLBW67XYboVCIf08qlUKtVsPGxgYqlQqWl5dZHFkoFCCTyZguSTQotVo9Umvsg9But7kA/m//7b9hfX0darUaarUaHo8H77//PudJqFQqZLNZXLx4EZlMBuvr69jc3OR7CYD1KcFgEG+//TZmZ2fhdDpH6n4NBgOk02nEYjGEw2F2LZLJZPB6vZiYmMB//I//EZOTk3C73XA6nUzXGCUM1U8rTO7T6/UH/eMcGCgevFqtIp/Pc+xkNptFsVhkkYBarYbb7cbCwgKn/o3aOP0gQKN6KiJpXDRKBSJRCFQqFac9Uve5VqvtO2mgrrLJZOJFa3p6GgsLC+yyQQeuUVqshWi1WshkMkgkEiiXy8yjo04hBTBUKhVEIhHkcjmEw2EkEgnuSkulUlitVkxPT4+cSEUICngyGAyoVqs8UXmSxEOhSMlsNsNqtWJychInTpzg0fRhnXIJBW4AOMyErNRGvWFD9q2UTCc8bJKFI02gpFIpyuUytra2UCwWsbW1hUgkwpZixOslUegod+D3A3Waa7Uatra2sLy8zFOHSqWCpaUlNjxQq9VIpVLY3NxEIpFAJBLhlFXiixMVzmg0wuPxIBAIjNwhg5x0stksCoUCarUams0mJBIJDAYDT+/m5ua4Kz+KGKqi+UWHMEVna2sLN2/eRDQaRTgcRjabZcEJpU7ZbDacO3cOPp9v5AWPIr4fhGLaQCAAmUyGubk5BINBVCqVfcftZLWo0+kQCASg0+ngcDhY8U/d9lFaqB8FQo93Ery1Wi0kk0le5JvNJrsgqNVq2Gw2mM3mkfGl3g8SiQQTExN44403EA6HUSgUOFxgLy/3YaBieW5uDjMzMzCbzThy5AjMZjMWFhaYqkEF82F7huh5CYfD7DdrMBhw7NixXVZqh+266ZBA1mHEa9br9Wi1WkilUmi1WtxdtlqtnPa7tLSEpaUlWK3WQxFu8zCQ+0gqlcInn3wCo9HIkeEkTCbKAsXMT0xMQKfTsXjW6/Vyh3pUOrC9Xo9pOlevXsVvfvMbFItFRKNRNBoNHD16FEtLS/D5fHA4HN/he48aRuNTeUFAJ/1Wq4Xt7W1cunQJ6XQa0WgUxWIRTqcTDocDwWAQ7733Hifq+Hy+Q3WKF/Fo2CumHQwGeOONNx7pz9LzsldTcBhBB4hWq4Xr16/j1q1b3wlh6Pf7HLpEQRUU3jCqkEqlmJiYgNfrZWqXTqdj4dajgp4PmUyG+fl5/PjHP4bFYsHc3ByMRiMMBsNIOkZ8H1B6WzgcRqlUwmAwgFarxbFjx7CwsMDi88P0HpFwmEKT7ty58521gt4h4u5arVa89tprGB8fx9zcHObm5lg7cdhBwUitVguffvopgN0ibJpUaDQa9os/ceIE3G43jh8/jqWlJWi1WthstpGabpEbVa1Ww7Vr1/DBBx+g1+sxNWV8fBzvvfceTCYTHA7HyHaYCWLRPAQQxoGT6I+y6KvVKpRKJdtfTU5Owuv1wul0wmKxiPzlJwRRNEaN0yyEcCMb5RP80wBxCqvVKivbAXDXnYoAstCi0SilBBL/0uFwHIqDKLkI0bXR9RoMhkfuNFPBLJfLMTs7C5fLxf6qh33CRcLRVqvFhQH5Mwt//XHpLsMErVYLh8OBRqMBj8fDaY/Eu6X0Q+qekqBYLpdDr9dDq9XC6/UiEAjA7Xbv4niP6tp6PwgnfcRH7na7LKLc64OvUChgsVg4YI0KSEoqttvtTPEZxTWcDgXdbhftdpsDxAwGA/t66/X6kby2vRCL5iEAvWyJRAK//vWvEY1Gcfv2bdy+fZst9fx+P370ox/hzTff/I7g5rAtSM8TxOUd1ZRIEbthtVrx9ttv4/jx4/jXf/1XxONxpmYICxutVov5+XkOpfD7/bBYLFhaWuIY+sNSNEulUvh8PvzJn/wJWq0Wx0F/n0KPDmYmkwlmsxkymYypK4fhPt0PzWYT9Xod+Xye+ah0ACNnp3K5vK9IfZQglUoRDAZhNpsxPj6OWq2GSCSC69ev4+bNm7ti5U0mE6xWK1MxbDYbU1SIaqDT6bjTOIqC4odBLpczD9nhcMDlcnHs/H4wmUw4e/Ys7HY7xsbGMDY2xtQmk8kErVYLjUYzMomreyFMZ+73+zCZTHjzzTcRDAZx+vRpBINBTlYddYhVwhCg1+ux8C8Wi2FnZwfJZBLlchkajQYejwdms5kT2rRaLSwWy6F4AA8SQqGUTCY7dLZILyKUSiVzAq1W666NSMjx1mg0sNlssFqtCAQCmJiYgM1mw9zcHHeEDsNhlIpdCq8R8f3Q6/XYiabRaKDRaPCvkU9vo9FAp9PZJZ4bRVATptvt8rMSiUSgUqn43SG7TpPJxMUyCYqnpqagUqk4LfAwgw4CNMUxGo3odDpoNBr7Hka1Wi17Vk9MTGBqagpGo5EPGqMOWmekUilPxilB0uFwQKvVHpp99XA/2UMMIV9sZWUFd+/eRSKRwMrKCqcpBYNBuN1uvPXWW2wQbzaboVAoRvI0OmyQSqU4fvw48/FoPDYzM3NoXvAXDTQWNJlM+PGPf4yJiQl2xaDNjIpIt9vNB1CLxcLq9VEdkYp4+ngQ35/sDTc2NjAYDOD3+zngYhTXDyoCzWYzTp48yXaUr7/++q53h4SAQkExif1elKYD+Sp7vV786Z/+KTKZDBqNBur1+r6/X6fTYXJyEgaDgbv05EQy6pDJZLx3kv2t0WjEiRMnYDabD00KJEEyOAxkrBEEif7a7TZ++ctf4le/+hUnIFYqFXg8Ho7w/S//5b9gampq5ANbhhFC/pkwYOcwveQvGmhJ249bKISwIHoRBJEivj+q1Sqq1SquX7+O//pf/ytu3LjBv0Y8eJ1Oh//8n/8z/vZv/5aDTka900p0JqFgVgjhWkn//SK+O8KU1YeVUvvdq8N2z3q9Hq+51Hg4bM/GaL/ZIwoS/SUSCVQqFcRiMeRyObTbbXi9XgwGA3i9XrjdbuaHjfoiPKwQDyKHD0JRpNgxFvEkoO6rUqnkVDOaWqjVajgcDnZcGdVY4P0gromPBgplE3EPL8KaK37azxnU/Uqn0/jFL36BcDiMO3fu4O7du/B6vfjpT3/KtAy32w2NRjPSiWQiRIgQMaogZx2r1Qqv14tiscjcZofDgQsXLsDtdmNxcfGFoieIEPGiQiyanzNIWFKtVhGJRLC9vY10Oo1GowGJRIJAIMC2Ti6X61B0LUSIECFiFEGTKBK4mc1mTv0zGo3wer3w+Xz8/w9Lp1mECBH7Q+Q0P0f0+33cunULy8vLSKfTuHz5MvL5PPx+P/x+P5xOJ37wgx/A4XC88FHiIkSIEDEsyGaz+Pzzz5HJZNBqtdDtdqHX6zEzMwOj0Qi3281NDrFoFiHi8EIsmp8jut0u/u///b/44IMPUK/XUSgU0O/38ed//uf46U9/Co1Gw9w4ceEVIUKEiOEBcZmFThJ7v0SIEHG4IdIznjPINYNUpoPBgFO7iA8nLr4iRIgQMVw47AInESJEPBxip1mECBEiRIgQIUKEiIdAlPmKECFChAgRIkSIEPEQiEWzCBEiRIgQIUKECBEPgVg0ixAhQoQIESJEiBDxEIhFswgRIkSIECFChAgRD4FYNIsQIUKECBEiRIgQ8RCIRbMIESJEiBAhQoQIEQ+BWDSLECFChAgRIkSIEPEQiEWzCBEiRIgQIUKECBEPgVg0ixAhQoQIESJEiBDxEPx/xzryOHkhG+IAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 900x900 with 100 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "ename": "NameError",
     "evalue": "name 'mpl' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[101], line 12\u001b[0m\n\u001b[0;32m     10\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m9\u001b[39m,\u001b[38;5;241m9\u001b[39m))\n\u001b[0;32m     11\u001b[0m example_images \u001b[38;5;241m=\u001b[39m X[:\u001b[38;5;241m100\u001b[39m]\n\u001b[1;32m---> 12\u001b[0m plot_digits(example_images, images_per_row\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m10\u001b[39m)\n\u001b[0;32m     13\u001b[0m save_fig(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmore_digits_plot\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m     14\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow()\n",
      "Cell \u001b[1;32mIn[99], line 21\u001b[0m, in \u001b[0;36mplot_digits\u001b[1;34m(instances, images_per_row, **options)\u001b[0m\n\u001b[0;32m     18\u001b[0m big_image \u001b[38;5;241m=\u001b[39m image_grid\u001b[38;5;241m.\u001b[39mtranspose(\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m2\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m3\u001b[39m)\u001b[38;5;241m.\u001b[39mreshape(n_rows \u001b[38;5;241m*\u001b[39m size,\n\u001b[0;32m     19\u001b[0m                                                      images_per_row \u001b[38;5;241m*\u001b[39m size)\n\u001b[0;32m     20\u001b[0m \u001b[38;5;66;03m# Now that we have a big image, we just need to show it:\u001b[39;00m\n\u001b[1;32m---> 21\u001b[0m plt\u001b[38;5;241m.\u001b[39mimshow(big_image, cmap \u001b[38;5;241m=\u001b[39m mpl\u001b[38;5;241m.\u001b[39mcm\u001b[38;5;241m.\u001b[39mbinary, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39moptions)\n\u001b[0;32m     22\u001b[0m plt\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'mpl' is not defined"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 900x900 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# extra code – this cell generates and saves Figure 3–2\n",
    "plt.figure(figsize=(9, 9))\n",
    "for idx, image_data in enumerate(X[:100]):\n",
    "    plt.subplot(10, 10, idx + 1)\n",
    "    plot_digit(image_data)\n",
    "plt.subplots_adjust(wspace=0, hspace=0)\n",
    "save_fig(\"more_digits_plot\", tight_layout=False)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "422d3ed6",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = X[:60000], X[60000:], y[:60000], y[60000:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26dca363",
   "metadata": {},
   "source": [
    "TRAINING A BINARY CLASSIFIER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c9f1c6a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_5 = (y_train == '5')  # True for all 5s, False for all other digits\n",
    "y_test_5 = (y_test == '5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "bc198d35",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SGDClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.SGDClassifier.html\">?<span>Documentation for SGDClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SGDClassifier(random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SGDClassifier(random_state=42)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import SGDClassifier\n",
    "\n",
    "sgd_clf = SGDClassifier(random_state=42)\n",
    "sgd_clf.fit(X_train, y_train_5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e8d0d404",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sgd_clf.predict([some_digit])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4c6fb58",
   "metadata": {},
   "source": [
    "PERFORMANCE MEASURES\n",
    "\n",
    "Measuring Accuracy using Cross-Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "372908ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.95035, 0.96035, 0.9604 ])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "cross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a14ca605",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.95035\n",
      "0.96035\n",
      "0.9604\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.base import clone\n",
    "\n",
    "skfolds = StratifiedKFold(n_splits=3)  # add shuffle=True if the dataset is not\n",
    "                                       # already shuffled\n",
    "for train_index, test_index in skfolds.split(X_train, y_train_5):\n",
    "    clone_clf = clone(sgd_clf)\n",
    "    X_train_folds = X_train[train_index]\n",
    "    y_train_folds = y_train_5[train_index]\n",
    "    X_test_fold = X_train[test_index]\n",
    "    y_test_fold = y_train_5[test_index]\n",
    "\n",
    "    clone_clf.fit(X_train_folds, y_train_folds)\n",
    "    y_pred = clone_clf.predict(X_test_fold)\n",
    "    n_correct = sum(y_pred == y_test_fold)\n",
    "    print(n_correct / len(y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0fc23ca6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "from sklearn.dummy import DummyClassifier\n",
    "\n",
    "dummy_clf = DummyClassifier()\n",
    "dummy_clf.fit(X_train, y_train_5)\n",
    "print(any(dummy_clf.predict(X_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c70fc6af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.90965, 0.90965, 0.90965])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(dummy_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c1cba39",
   "metadata": {},
   "source": [
    "Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f420b19c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_predict\n",
    "\n",
    "y_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "150b18b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[53892,   687],\n",
       "       [ 1891,  3530]], dtype=int64)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "cm = confusion_matrix(y_train_5, y_train_pred)\n",
    "cm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "840a1280",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[54579,     0],\n",
       "       [    0,  5421]], dtype=int64)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_perfect_predictions = y_train_5  # pretend we reached perfection\n",
    "confusion_matrix(y_train_5, y_train_perfect_predictions)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d051ae53",
   "metadata": {},
   "source": [
    "Precision and Recall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c4c5cd20",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8370879772350012"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score, recall_score\n",
    "\n",
    "precision_score(y_train_5, y_train_pred)  # == 3530 / (687 + 3530)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1ab5983d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8370879772350012"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# extra code – this cell also computes the precision: TP / (FP + TP)\n",
    "cm[1, 1] / (cm[0, 1] + cm[1, 1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "dbcf2224",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6511713705958311"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_score(y_train_5, y_train_pred)  # == 3530 / (1891 + 3530)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "df114c20",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6511713705958311"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# extra code – this cell also computes the recall: TP / (FN + TP)\n",
    "cm[1, 1] / (cm[1, 0] + cm[1, 1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9844281b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7325171197343847"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "\n",
    "f1_score(y_train_5, y_train_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8b3646e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7325171197343847"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# extra code – this cell also computes the f1 score\n",
    "cm[1, 1] / (cm[1, 1] + (cm[1, 0] + cm[0, 1]) / 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea373415",
   "metadata": {},
   "source": [
    "Precision/Recakk Trade-off"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b7723835",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2164.22030239])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_scores = sgd_clf.decision_function([some_digit])\n",
    "y_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "32805c62",
   "metadata": {},
   "outputs": [],
   "source": [
    "threshold = 0\n",
    "y_some_digit_pred = (y_scores > threshold)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d499695f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_some_digit_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "fae3a5b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True])"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# extra code – just shows that y_scores > 0 produces the same result as\n",
    "#              calling predict()\n",
    "y_scores > 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "2697dd51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([False])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "threshold = 3000\n",
    "y_some_digit_pred = (y_scores > threshold)\n",
    "y_some_digit_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "90ed7c18",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_scores = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3,\n",
    "                             method=\"decision_function\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a4d244cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import precision_recall_curve\n",
    "\n",
    "precisions, recalls, thresholds = precision_recall_curve(y_train_5, y_scores)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "232e5318",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 4))  # extra code – it's not needed, just formatting\n",
    "plt.plot(thresholds, precisions[:-1], \"b--\", label=\"Precision\", linewidth=2)\n",
    "plt.plot(thresholds, recalls[:-1], \"g-\", label=\"Recall\", linewidth=2)\n",
    "plt.vlines(threshold, 0, 1.0, \"k\", \"dotted\", label=\"threshold\")\n",
    "\n",
    "# extra code – this section just beautifies and saves Figure 3–5\n",
    "idx = (thresholds >= threshold).argmax()  # first index ≥ threshold\n",
    "plt.plot(thresholds[idx], precisions[idx], \"bo\")\n",
    "plt.plot(thresholds[idx], recalls[idx], \"go\")\n",
    "plt.axis([-50000, 50000, 0, 1])\n",
    "plt.grid()\n",
    "plt.xlabel(\"Threshold\")\n",
    "plt.legend(loc=\"center right\")\n",
    "save_fig(\"precision_recall_vs_threshold_plot\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d76f4c58",
   "metadata": {},
   "source": [
    "Another way to select a good precision recall trade-off is to plot precision directly against recall."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f1f6e315",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.patches as patches\n",
    "\n",
    "plt.figure(figsize=(6,5))\n",
    "\n",
    "plt.plot(recalls, precisions, linewidth=2, label='Precision/Recall curve')\n",
    "\n",
    "plt.plot([recalls[idx], recalls[idx]], [0., precisions[idx]], 'k')\n",
    "plt.plot([0.0, recalls[idx]], [precisions[idx], precisions[idx]], 'k:')\n",
    "plt.plot([recalls[idx]], [precisions[idx]], 'ko', label= 'Point at threshold 3.000')\n",
    "plt.gca().add_patch(patches.FancyArrowPatch(\n",
    "        (0.79, 0.60), (0.61, 0.78),\n",
    "        connectionstyle='arc3, rad=.2',\n",
    "        arrowstyle = 'Simple, tail_width = 1.5, head_width = 8, head_length = 10', color = \"#444444\"\n",
    "))\n",
    "plt.text(0.56, 0.62, 'Higher\\nthreshold', color='#333333')\n",
    "plt.xlabel('Recall')\n",
    "plt.ylabel('Precision')\n",
    "plt.axis([0,1,0,1])\n",
    "plt.grid()\n",
    "plt.legend(loc='lower left')\n",
    "save_fig('precision_vs_recall_plot')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06af79a9",
   "metadata": {},
   "source": [
    "You can see that precision starts to fall sharply around 80% recall. You probably want to select a precision/recall trade-off just before the drop.\n",
    "\n",
    "Suppose that you aim for a 90% precisions. You look up the first plot and realize that you need to use a threshold about 8.000. To be more precise you can search for the lowest threshold that gives you a 90% precision."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "2917c03b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3370.0194991439557"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "idx_for_90_precision = (precisions >= 0.90).argmax()\n",
    "threshold_for_90_precision = thresholds[idx_for_90_precision]\n",
    "threshold_for_90_precision"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a1fddf0",
   "metadata": {},
   "source": [
    "To make predictions, instead of calling the classifier`s predict method, you can run this code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "ff452607",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_pred_90 = (y_scores >= threshold_for_90_precision)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "cb3bea1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9000345901072293"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precision_score(y_train_5, y_train_pred_90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "23c7a26e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4799852425751706"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_at_90_precisions = recall_score(y_train_5, y_train_pred_90)\n",
    "recall_at_90_precisions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ecb3b77",
   "metadata": {},
   "source": [
    "It is possible to create a classifier with virtually any precision you want: just set a high enough threshold, and you are done. A high-precision classifier is not very useful if its recall is to low!!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fc2b92c",
   "metadata": {},
   "source": [
    "The ROC curve\n",
    "\n",
    "It is very similar ti the precision/recall curve, but instead of plotting precision versus recall, the ROC curve plots the 'true positive rate' (another name for recall) against the false positive rate. The FPR is the ratio of negatives instances that are incorrectly classifies as positive."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "926af43f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import roc_curve\n",
    "\n",
    "fpr, tpr, thresholds = roc_curve(y_train_5, y_scores)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "dc52aa58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "idx_for_threshold_at_90 = (threshold <= threshold_for_90_precision).argmax()\n",
    "tpr_90, fpr_90 = tpr[idx_for_threshold_at_90], fpr[idx_for_threshold_at_90]\n",
    "\n",
    "plt.figure(figsize=(6, 5))\n",
    "plt.plot(fpr,tpr, linewidth=2, label='ROC curve')\n",
    "plt.plot([0, 1], [0, 1], 'k:', label='Random classifier`s ROC curve')\n",
    "plt.plot([fpr_90], [tpr_90], 'ko', label='Threshold for 90% precision')\n",
    "\n",
    "# extra code – just beautifies and saves Figure\n",
    "plt.gca().add_patch(patches.FancyArrowPatch(\n",
    "    (0.20, 0.89), (0.07,0.70),\n",
    "    connectionstyle='arc3, rad=.4',\n",
    "    arrowstyle='Simple, tail_width=1.5, head_width=8, head_length=10', color='#444444'\n",
    "))\n",
    "plt.text(0.12, 0.71, 'Higher\\nthreshold', color='#333333')\n",
    "plt.xlabel('False Positive Rate (Fall-Out)')\n",
    "plt.ylabel('True Positive Rate (Recall)')\n",
    "plt.grid()\n",
    "plt.axis([0,1,0,1])\n",
    "plt.legend(loc='lower right', fontsize=13)\n",
    "save_fig('roc_curve_plot')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2023b4f6",
   "metadata": {},
   "source": [
    "Once again there is a trade off: the higher the recall(TPR), the more false positives (FPR) the classifier produces. The dotted line represents the ROC curve of a purely random classifier; a good classifier stays as far away from that line as possible (toward the top-left corner).\n",
    "\n",
    "One way to measure classifiers is to measure the area under the curve (AUC). A perfect classifier will have a ROC AUC = 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "cd9c4c09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9604938554008616"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "roc_auc_score(y_train_5, y_scores)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e3169ea",
   "metadata": {},
   "source": [
    "Let`s train a RandomDorestClassifier and compare its ROC curve and the ROC AUC score to those of the SDGClassifier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "f6f87e60",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "forest_clf = RandomForestClassifier(random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "ba33c9a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_probas_forest = cross_val_predict(forest_clf, X_train, y_train_5, cv=3, method='predict_proba')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "6e98d0f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.11, 0.89],\n",
       "       [0.99, 0.01]])"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_probas_forest[:2]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1652c7c1",
   "metadata": {},
   "source": [
    "These are estimated probabilities. Among the images that the model classified as positive with a probability between 50% and 60%, there are actually about 94% positive images:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "83530423",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "94.0%\n"
     ]
    }
   ],
   "source": [
    "# Not in the code\n",
    "idx_50_to_60 = (y_probas_forest[:, 1] > 0.50) & (y_probas_forest[:, 1] < 0.60)\n",
    "print(f\"{(y_train_5[idx_50_to_60]).sum() / idx_50_to_60.sum():.1%}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "950f3062",
   "metadata": {},
   "source": [
    "The ROC curve function expects labels and scores, but isntead of scores you can give it class probabilities. Let`s use the positive class´s probability as the score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "8ce7c21e",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_scores_forest = y_probas_forest[:, 1]\n",
    "precisions_forest, recalls_forest, thresholds_forest = precision_recall_curve(y_train_5, y_scores_forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "c94f1c55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.11, 0.89],\n",
       "       [0.99, 0.01],\n",
       "       [0.96, 0.04],\n",
       "       ...,\n",
       "       [0.02, 0.98],\n",
       "       [0.92, 0.08],\n",
       "       [0.94, 0.06]])"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_probas_forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "1f798303",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(recalls_forest, precisions_forest, 'b-', linewidth=2, label='Random Forest')\n",
    "plt.plot(recalls, precisions, '--', linewidth=2, label='SDG')\n",
    "\n",
    "plt.xlabel('Recall')\n",
    "plt.ylabel('Precision')\n",
    "plt.axis([0,1,0,1])\n",
    "plt.grid()\n",
    "plt.legend(loc='lower left')\n",
    "save_fig('pr_curve_comparisson_plot')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0e3bbd8",
   "metadata": {},
   "source": [
    "We could use cross_val_predict(forest_clf, X_train, y_train_5, cv=3) to compute y_train_pred_forest, but since we already have the estimated probabilities, we can just use the default threshold of 50% probability to get the same predictions much faster:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "0c547ef1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9274509803921569"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred_forest = y_probas_forest[:, 1] >= 0.5 # positive proba ≥ 50%\n",
    "f1_score(y_train_5, y_train_pred_forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "a675e63c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9983436731328145"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "roc_auc_score(y_train_5, y_scores_forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "de6125b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9897468089558485"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precision_score(y_train_5, y_train_pred_forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "bbf4bfc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8725327430363402"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_score(y_train_5, y_train_pred_forest)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20c58553",
   "metadata": {},
   "source": [
    "Multiclass classification\n",
    "\n",
    "One way to create a system that can classify the digit images into 10 classes is to train 10 binary classifier (one for each digit) and  then get the decision score for each one of them and select the classifier with the highest score. This is called one-versus-the-rest strategy (OvR). Another strategy is to train a classifier for every pair of digits: one to distinguish 0 and 1, one to distinguish 0 and 2.... This is called One-versus-One (OvO) strategy. The main advantage of OvO is that each classifier only needs to be trained  on the part of the training set for the two classes that it must distinguish.\n",
    "\n",
    "Some algorithms such as SVM scale poorly with the size of the training set. For these algorithms OvO is preferred because is it faster to train mant tiny classifiers on small training sets that to train few classifiers on large training sets. For most binary algorithms however OvR is preferred.\n",
    "\n",
    "LEt`s try a SVM classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "3b894d91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC(random_state=42)"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "svm_clf = SVC(random_state=42)\n",
    "svm_clf.fit(X_train[:2000], y_train[:2000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "e4ecb9ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['5'], dtype=object)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm_clf.predict([some_digit])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d875f5a6",
   "metadata": {},
   "source": [
    "If you call the decision function megthod, you will see it returns 0 scores per instance. Thats one score per class (it`s the number of won duels plus or minus a small tweak to break ties, based on the binary classifier scores):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "c0d67647",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 3.79297828,  0.72949369,  6.06184129,  8.29800527, -0.29383983,\n",
       "         9.30157597,  1.74723215,  2.77365456,  7.20601456,  4.82245092]])"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "some_digit_scores = svm_clf.decision_function([some_digit])\n",
    "some_digit_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "534392f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_id = some_digit_scores.argmax()\n",
    "class_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "bdad932f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], dtype=object)"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm_clf.classes_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "c37ac3ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'5'"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm_clf.classes_[class_id]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d2143ec",
   "metadata": {},
   "source": [
    "If you want decision_function() to return all 45 scores, you can set the decision_function_shape hyperparameter to \"ovo\". The default value is \"ovr\", but don't let this confuse you: SVC always uses OvO for training. This hyperparameter only affects whether or not the 45 scores get aggregated or not:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "9743324e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.11, -0.21, -0.97,  0.51, -1.01,  0.19,  0.09, -0.31, -0.04,\n",
       "        -0.45, -1.28,  0.25, -1.01, -0.13, -0.32, -0.9 , -0.36, -0.93,\n",
       "         0.79, -1.  ,  0.45,  0.24, -0.24,  0.25,  1.54, -0.77,  1.11,\n",
       "         1.13,  1.04,  1.2 , -1.42, -0.53, -0.45, -0.99, -0.95,  1.21,\n",
       "         1.  ,  1.  ,  1.08, -0.02, -0.67, -0.14, -0.3 , -0.13,  0.25]])"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# extra code – shows how to get all 45 OvO scores if needed\n",
    "svm_clf.decision_function_shape = \"ovo\"\n",
    "some_digit_scores_ovo = svm_clf.decision_function([some_digit])\n",
    "some_digit_scores_ovo.round(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b27b52c2",
   "metadata": {},
   "source": [
    "If you want to force scikit-learn to  use one-versus-one or oonne-versus-the-rest, you can use the OneVsOneClassifier or OneVsTheRestClassifier classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "fa69d5d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>OneVsRestClassifier(estimator=SVC(random_state=42))</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;OneVsRestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.multiclass.OneVsRestClassifier.html\">?<span>Documentation for OneVsRestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>OneVsRestClassifier(estimator=SVC(random_state=42))</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">estimator: SVC</label><div class=\"sk-toggleable__content fitted\"><pre>SVC(random_state=42)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(random_state=42)</pre></div> </div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "OneVsRestClassifier(estimator=SVC(random_state=42))"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.multiclass import OneVsRestClassifier\n",
    "\n",
    "ovr_clf = OneVsRestClassifier(SVC(random_state=42))\n",
    "ovr_clf.fit(X_train[:2000], y_train[:2000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b66b6e6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['5'], dtype='<U1')"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ovr_clf.predict([some_digit])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "08ab04e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(ovr_clf.estimators_)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e57ff063",
   "metadata": {},
   "source": [
    "Training an SGDClassifier is just as easy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "31839018",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['3'], dtype='<U1')"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sgd_clf = SGDClassifier(random_state=42)\n",
    "sgd_clf.fit(X_train, y_train)\n",
    "sgd_clf.predict([some_digit])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "17c07e08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-31893., -34420.,  -9531.,   1824., -22320.,  -1386., -26189.,\n",
       "        -16148.,  -4604., -12051.]])"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sgd_clf.decision_function([some_digit]).round()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54d096bf",
   "metadata": {},
   "source": [
    "Let`s evaluate this classifier using cross validation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "4f958d8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.87365, 0.85835, 0.8689 ])"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(sgd_clf, X_train, y_train, cv=3, scoring='accuracy')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf432609",
   "metadata": {},
   "source": [
    "It gets 87% accuracy on all test folds. If you used  random classifier you would get a 10%. Its performances can be improved if we scale imputs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "0cac57d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.8983, 0.891 , 0.9018])"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X_train_scaled = scaler.fit_transform(X_train.astype('float64'))\n",
    "cross_val_score(sgd_clf, X_train_scaled, y_train, cv=3, scoring='accuracy')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "590acede",
   "metadata": {},
   "source": [
    "Error analysis\n",
    "\n",
    "First look at he confsion matrix. You need to make predictions using the cross_val_predict() method, then call the confusion matrix function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "abc34441",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[5577,    0,   22,    5,    8,   43,   36,    6,  225,    1],\n",
       "       [   0, 6400,   37,   24,    4,   44,    4,    7,  212,   10],\n",
       "       [  27,   27, 5220,   92,   73,   27,   67,   36,  378,   11],\n",
       "       [  22,   17,  117, 5227,    2,  203,   27,   40,  403,   73],\n",
       "       [  12,   14,   41,    9, 5182,   12,   34,   27,  347,  164],\n",
       "       [  27,   15,   30,  168,   53, 4444,   75,   14,  535,   60],\n",
       "       [  30,   15,   42,    3,   44,   97, 5552,    3,  131,    1],\n",
       "       [  21,   10,   51,   30,   49,   12,    3, 5684,  195,  210],\n",
       "       [  17,   63,   48,   86,    3,  126,   25,   10, 5429,   44],\n",
       "       [  25,   18,   30,   64,  118,   36,    1,  179,  371, 5107]],\n",
       "      dtype=int64)"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred = cross_val_predict(sgd_clf, X_train_scaled, y_train, cv=3)\n",
    "conf_mx = confusion_matrix(y_train, y_train_pred)\n",
    "conf_mx"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "479569e3",
   "metadata": {},
   "source": [
    "There is a lot of numbers, it is often more convenient to look at an image representation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "7c4b4257",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import ConfusionMatrixDisplay\n",
    "\n",
    "plt.rc('font', size=9)\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "2ef143f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rc('font', size=10)  # extra code\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred,\n",
    "                                        normalize=\"true\", values_format=\".0%\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4668eb0",
   "metadata": {},
   "source": [
    "The confusion matrix lookr pretty good, since most of the images are on the main diagonal, which means were classified correctly.\n",
    "\n",
    "Lets focus on plot the errors. First we need to divide each value in the confusion matrix by the number of images in the corresponding  class so you can compare error rates instead of absolute number of errors."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "ddf1a051",
   "metadata": {},
   "outputs": [],
   "source": [
    "row_sums = conf_mx.sum(axis=1, keepdims=True)\n",
    "norm_conf_mx = conf_mx / row_sums"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aef9db07",
   "metadata": {},
   "source": [
    "Fill the diagonal with 0`s to keep only the errors, and plot the result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "d69d24eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 480x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "np.fill_diagonal(norm_conf_mx, 0)\n",
    "plt.matshow(norm_conf_mx, cmap=plt.cm.coolwarm)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0693e963",
   "metadata": {},
   "source": [
    "The columns for 8 is quite bright, which tells you that many images get misclassified as 8s. However the row for class 8 is not that bad, telling you that actual 8s in general get properly classified as 8s.\n",
    "\n",
    "Analyzing the confusion matrix gives you insights in ways to improve your classifier Looking at this plot it looks like your efforts shold be focused on reducing the number of flase 8s. You could try to gather more training data for the digits that looks like 8 so the classifier can learn to distinguish them from real 8s. Or you could engineer new features that would help the classifier, for example, writing an algorithm to count the number of closed loops (8 has 2, 6 has 1, 5 has none). Or you could preprocess the images to make some patterns such as closed loops, stand out more."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "489f5ccd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample_weight = (y_train_pred != y_train)\n",
    "plt.rc('font', size=10)  # extra code\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred,\n",
    "                                        sample_weight=sample_weight,\n",
    "                                        normalize=\"true\", values_format=\".0%\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7671672",
   "metadata": {},
   "source": [
    "Let's put all plots in a couple of figures for the book:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "70ea78b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 900x400 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# extra code – this cell generates and saves Figure 3–9\n",
    "fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(9, 4))\n",
    "plt.rc('font', size=9)\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred, ax=axs[0])\n",
    "axs[0].set_title(\"Confusion matrix\")\n",
    "plt.rc('font', size=10)\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred, ax=axs[1],\n",
    "                                        normalize=\"true\", values_format=\".0%\")\n",
    "axs[1].set_title(\"CM normalized by row\")\n",
    "save_fig(\"confusion_matrix_plot_1\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "6fc97979",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 900x400 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# extra code – this cell generates and saves Figure 3–10\n",
    "fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(9, 4))\n",
    "plt.rc('font', size=10)\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred, ax=axs[0],\n",
    "                                        sample_weight=sample_weight,\n",
    "                                        normalize=\"true\", values_format=\".0%\")\n",
    "axs[0].set_title(\"Errors normalized by row\")\n",
    "ConfusionMatrixDisplay.from_predictions(y_train, y_train_pred, ax=axs[1],\n",
    "                                        sample_weight=sample_weight,\n",
    "                                        normalize=\"pred\", values_format=\".0%\")\n",
    "axs[1].set_title(\"Errors normalized by column\")\n",
    "save_fig(\"confusion_matrix_plot_2\")\n",
    "plt.show()\n",
    "plt.rc('font', size=14)  # make fonts great again"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8651974a",
   "metadata": {},
   "source": [
    "Analyzing individual errors can also be a good way to gain insights on what your classifier is doing and why is it failing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "0f098ab0",
   "metadata": {},
   "outputs": [
    {
     "ename": "ZeroDivisionError",
     "evalue": "integer division or modulo by zero",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[111], line 8\u001b[0m\n\u001b[0;32m      5\u001b[0m X_bb \u001b[38;5;241m=\u001b[39m X_train_scaled[(y_train \u001b[38;5;241m==\u001b[39m cl_b) \u001b[38;5;241m&\u001b[39m (y_train_pred \u001b[38;5;241m==\u001b[39m cl_b)]\n\u001b[0;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m8\u001b[39m,\u001b[38;5;241m8\u001b[39m))\n\u001b[1;32m----> 8\u001b[0m plt\u001b[38;5;241m.\u001b[39msubplot(\u001b[38;5;241m221\u001b[39m); plot_digits(X_aa[:\u001b[38;5;241m25\u001b[39m], images_per_row\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m5\u001b[39m)\n\u001b[0;32m      9\u001b[0m plt\u001b[38;5;241m.\u001b[39msubplot(\u001b[38;5;241m222\u001b[39m); plot_digits(X_ab[:\u001b[38;5;241m25\u001b[39m], images_per_row\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m5\u001b[39m)\n\u001b[0;32m     10\u001b[0m plt\u001b[38;5;241m.\u001b[39msubplot(\u001b[38;5;241m223\u001b[39m); plot_digits(X_ba[:\u001b[38;5;241m25\u001b[39m], images_per_row\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m5\u001b[39m)\n",
      "Cell \u001b[1;32mIn[105], line 5\u001b[0m, in \u001b[0;36mplot_digits\u001b[1;34m(instances, images_per_row, **options)\u001b[0m\n\u001b[0;32m      3\u001b[0m images_per_row \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mmin\u001b[39m(\u001b[38;5;28mlen\u001b[39m(instances), images_per_row)\n\u001b[0;32m      4\u001b[0m \u001b[38;5;66;03m# This is equivalent to n_rows = ceil(len(instances) / images_per_row):\u001b[39;00m\n\u001b[1;32m----> 5\u001b[0m n_rows \u001b[38;5;241m=\u001b[39m (\u001b[38;5;28mlen\u001b[39m(instances) \u001b[38;5;241m-\u001b[39m \u001b[38;5;241m1\u001b[39m) \u001b[38;5;241m/\u001b[39m\u001b[38;5;241m/\u001b[39m images_per_row \u001b[38;5;241m+\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m# Append empty images to fill the end of the grid, if needed:\u001b[39;00m\n\u001b[0;32m      8\u001b[0m n_empty \u001b[38;5;241m=\u001b[39m n_rows \u001b[38;5;241m*\u001b[39m images_per_row \u001b[38;5;241m-\u001b[39m \u001b[38;5;28mlen\u001b[39m(instances)\n",
      "\u001b[1;31mZeroDivisionError\u001b[0m: integer division or modulo by zero"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cl_a, cl_b = 3, 5\n",
    "X_aa = X_train_scaled[(y_train == cl_a) & (y_train_pred == cl_a)]\n",
    "X_ab = X_train_scaled[(y_train == cl_a) & (y_train_pred == cl_b)]\n",
    "X_ba = X_train_scaled[(y_train == cl_b) & (y_train_pred == cl_a)]\n",
    "X_bb = X_train_scaled[(y_train == cl_b) & (y_train_pred == cl_b)]\n",
    "\n",
    "plt.figure(figsize=(8,8))\n",
    "plt.subplot(221); plot_digits(X_aa[:25], images_per_row=5)\n",
    "plt.subplot(222); plot_digits(X_ab[:25], images_per_row=5)\n",
    "plt.subplot(223); plot_digits(X_ba[:25], images_per_row=5)\n",
    "plt.subplot(224); plot_digits(X_bb[:25], images_per_row=5)\n",
    "save_fig(\"error_analysis_digits_plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b01a061",
   "metadata": {},
   "source": [
    "Most of the missclassified images seem like obvious errors to us. The problem may be that we used a simle SGDClassifier, which is a linear model. All it does is assign a weight to each pixel and when it sees a bew image it just sums up the weighted pixel intensities to get a score for each class. So since 3s and 5s differ only iby a few pixels, this model will easily confuse them.\n",
    "\n",
    "The main difference between 3s and 5s is the position of the small line that joins the top line to the bottom arc. So one way to reduce the 3/5 confusion would be to preprocess the images to ensure that they are well centered and not too rotated. This will probably help reduce other errors as well."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa8c96f0",
   "metadata": {},
   "source": [
    "Multilabel classification\n",
    "\n",
    "In some cases you may want your classifier to output multipe classes for each instance. Consider a face recognition classifier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "e237b04a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-5 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-5 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-5 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-5 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-5 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier()"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "y_train_large = (y_train >= '7')\n",
    "y_train_odd = (y_train.astype('int8') % 2 == 1)\n",
    "y_multilabel = np.c_[y_train_large, y_train_odd]\n",
    "\n",
    "knn_clf = KNeighborsClassifier()\n",
    "knn_clf .fit(X_train, y_multilabel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "67cd0eb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[False,  True]])"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn_clf.predict([some_digit])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e24e51a",
   "metadata": {},
   "source": [
    "It gets it right, number five it is not a large digit bu it is odd.\n",
    "\n",
    "There are many ways to evaluate a multilabel classifier, and selecting the right metric really depends on your project. One approach is to measure the F1 score for each individual label then simply cpmpute the average score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "17ff2e88",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9764102655606048"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_knn_pred = cross_val_predict(knn_clf, X_train, y_multilabel, cv=3)\n",
    "f1_score(y_multilabel, y_train_knn_pred, average='macro')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c14682c",
   "metadata": {},
   "source": [
    "This assumes all labels are equally important, however if you have more images of a particular class you may want to give more weight to the classifier`s score on the class with less instances. In order to do thos simply set average='weighted'. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8552181",
   "metadata": {},
   "source": [
    "Multioutput Classification\n",
    "\n",
    "It is simply a generalization of multilabel classification where each label can be multiclass. Let`s start creating the training set and test set taking the MNIST images and adding noise to their pixel intensities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "9e72f870",
   "metadata": {},
   "outputs": [],
   "source": [
    "noise = np.random.randint(0, 100, (len(X_train), 784))\n",
    "X_train_mod = X_train + noise \n",
    "noise = np.random.randint(0,  100, (len(X_test), 784))\n",
    "X_test_mod = X_test + noise\n",
    "y_train_mod = X_train\n",
    "y_test_mod = X_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "f1a16596",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "some_index = 0\n",
    "plt.subplot(121); plot_digit(X_test_mod[some_index])\n",
    "plt.subplot(122); plot_digit(y_test_mod[some_index])\n",
    "save_fig('noisy_digit_example_plot')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9213949",
   "metadata": {},
   "source": [
    "On the left is the noisy input image, on the right us the clean target image, let`s train the classifier and make it clean the image."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "a2cdf8db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "knn_clf.fit(X_train_mod, y_train_mod)\n",
    "clean_digit = knn_clf.predict([X_test_mod[some_index]])\n",
    "plot_digit(clean_digit)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2495aa0d",
   "metadata": {},
   "source": [
    "EXERCISES\n",
    "\n",
    "Exercise 1 - \n",
    "Try to build a classifier for the MNIST dataset that achhieves over 97% accuracy on the test set. Hit: the KNeighborsClassifier works quite well for this task; you just need to find good hyperparameter values (try grid search on the weights and n_neightbors hyperparameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "57977780",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(weights=&#x27;distance&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(weights=&#x27;distance&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(weights='distance')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "knn_clf = KNeighborsClassifier(weights='distance', n_neighbors=5)\n",
    "knn_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "44bf562a",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_knn_pred = knn_clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "80d7d815",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9691"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy_score(y_test, y_knn_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ea5ca833",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'n_neighbors': [3, 5, 7],\n",
    "    'weights': ['uniform', 'distance']\n",
    "}\n",
    "\n",
    "grid_search = GridSearchCV(\n",
    "    estimator=knn_clf,\n",
    "    param_grid=param_grid,\n",
    "    cv=3,\n",
    "    scoring='accuracy',\n",
    "    n_jobs=1,\n",
    "    verbose=1\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3197fb53",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 6 candidates, totalling 18 fits\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=KNeighborsClassifier(weights=&#x27;distance&#x27;), n_jobs=1,\n",
       "             param_grid={&#x27;n_neighbors&#x27;: [3, 5, 7],\n",
       "                         &#x27;weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]},\n",
       "             scoring=&#x27;accuracy&#x27;, verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=3, estimator=KNeighborsClassifier(weights=&#x27;distance&#x27;), n_jobs=1,\n",
       "             param_grid={&#x27;n_neighbors&#x27;: [3, 5, 7],\n",
       "                         &#x27;weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]},\n",
       "             scoring=&#x27;accuracy&#x27;, verbose=1)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: KNeighborsClassifier</label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre></div> </div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=3, estimator=KNeighborsClassifier(weights='distance'), n_jobs=1,\n",
       "             param_grid={'n_neighbors': [3, 5, 7],\n",
       "                         'weights': ['uniform', 'distance']},\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_search.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d88790c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best score in validation 0.9693333333333333\n",
      "Best params {'n_neighbors': 3, 'weights': 'distance'}\n"
     ]
    }
   ],
   "source": [
    "print('Best score in validation', grid_search.best_score_)\n",
    "print('Best params', grid_search.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6aed8ae6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=3, weights='distance')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn_opt_clf = KNeighborsClassifier(n_neighbors=3, weights='distance')\n",
    "knn_opt_clf.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# accuracy_score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "00d36f1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9717"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_knn_opt_pred = knn_opt_clf.predict(X_test)\n",
    "accuracy_score(y_knn_opt_pred, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f958f4c",
   "metadata": {},
   "source": [
    "EXERCISE 2 -\n",
    "Write a function that can shift an MNIST image in any direction (left,right, up, down) by one pixel. Then for each image in the training set, create four shifted copies (one per direction) and add them to the training set. Finally, train your best model on this expanded training set and measure accuracy on the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "edf7b199",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.ndimage import shift\n",
    "\n",
    "def shift_image(image, dx, dy):\n",
    "    image = image.reshape((28,28))\n",
    "    shifted_image = shift(image, [dx, dy], cval=0, mode='constant')\n",
    "    return shifted_image.reshape([-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1719e4fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x300 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "image = X_train[1000]\n",
    "shifted_image_down = shift_image(image, 5, 0)\n",
    "shifted_image_left = shift_image(image, 0, -5)\n",
    "\n",
    "plt.figure(figsize=(12,3))\n",
    "plt.subplot(131)\n",
    "plt.title('Original')\n",
    "plt.imshow(image.reshape(28,28), interpolation='nearest', cmap='Greys')\n",
    "\n",
    "plt.subplot(132)\n",
    "plt.title('Shifted down')\n",
    "plt.imshow(shifted_image_down.reshape(28,28), interpolation='nearest', cmap='Greys')\n",
    "\n",
    "plt.subplot(133)\n",
    "plt.title('Shifted left')\n",
    "plt.imshow(shifted_image_left.reshape(28, 28), interpolation='nearest', cmap='Greys')\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "10be3af8",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train_augmented = [image for image in X_train]\n",
    "y_train_augmented = [label for label in y_train]\n",
    "\n",
    "for dx, dy in ((-1,0), (1,0), (0,1), (0,-1)):\n",
    "    for image, label in zip(X_train, y_train):\n",
    "        X_train_augmented.append(shift_image(image, dx, dy))\n",
    "        y_train_augmented.append(label)\n",
    "\n",
    "X_train_augmented = np.array(X_train_augmented)\n",
    "y_train_augmented = np.array(y_train_augmented)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7f87b20",
   "metadata": {},
   "source": [
    "Shuffle augmented training set to avoid all shifted images to group together"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "96aea1c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "shuffle_idx = np.random.permutation(len(X_train_augmented))\n",
    "X_train_augmented = X_train_augmented[shuffle_idx]\n",
    "y_train_augmented = y_train_augmented[shuffle_idx]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4e20efb",
   "metadata": {},
   "source": [
    "Now let`s train the model using the best hyperparameters we found"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6184e7d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "knn_clf = KNeighborsClassifier(**grid_search.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "8d43c36b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier(n_neighbors=3, weights=&#x27;distance&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=3, weights='distance')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn_clf.fit(X_train_augmented, y_train_augmented)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "644a7f0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9763"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "augmented_accuracy = knn_clf.score(X_test, y_test)\n",
    "augmented_accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de07004b",
   "metadata": {},
   "source": [
    "Accuracy improved from 0.9717 to 0.9763, almost a 0.5%. I t may not look a lot but it actually means that the error rate dropped significantly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "4fb607e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error_rate_change = -16%\n"
     ]
    }
   ],
   "source": [
    "error_rate_change = (1 - 0.9763) / (1 - 0.9717) - 1\n",
    "print(f'error_rate_change = {error_rate_change:.0%}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ec55e66",
   "metadata": {},
   "source": [
    "EXERCISE 3 -\n",
    "\n",
    "Tackle the Titanic dataset. A great place to start is on kaggle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ce45dc12",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from pathlib import Path\n",
    "import pandas as pd\n",
    "import tarfile\n",
    "import urllib.request\n",
    "\n",
    "def load_titanic_data():\n",
    "    tarball_path = Path(\"datasets/titanic.tgz\")\n",
    "    if not tarball_path.is_file():\n",
    "        Path(\"datasets\").mkdir(parents=True, exist_ok=True)\n",
    "        url = \"https://github.com/ageron/data/raw/main/titanic.tgz\"\n",
    "        urllib.request.urlretrieve(url, tarball_path)\n",
    "        with tarfile.open(tarball_path) as titanic_tarball:\n",
    "            titanic_tarball.extractall(path=\"datasets\")\n",
    "    return [pd.read_csv(Path(\"datasets/titanic\") / filename)\n",
    "            for filename in (\"train.csv\", \"test.csv\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0abe6d70",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data, test_data = load_titanic_data()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "962f2e1c",
   "metadata": {},
   "source": [
    "The data is already split into a training set and a test set. However, the test data does not contain the labels: your goal is to train the best model you can on the training data, then make your predictions on the test data and upload them to Kaggle to see your final score.\n",
    "\n",
    "Let's take a peek at the top few rows of the training set:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0dac9b49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e03fa8a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.204207968574636"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Fare'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccba12ad",
   "metadata": {},
   "source": [
    "The attributes have the following meaning:\n",
    "\n",
    "PassengerId: a unique identifier for each passenger\n",
    "Survived: that's the target, 0 means the passenger did not survive, while 1 means he/she survived.\n",
    "Pclass: passenger class.\n",
    "Name, Sex, Age: self-explanatory\n",
    "SibSp: how many siblings & spouses of the passenger aboard the Titanic.\n",
    "Parch: how many children & parents of the passenger aboard the Titanic.\n",
    "Ticket: ticket id\n",
    "Fare: price paid (in pounds)\n",
    "Cabin: passenger's cabin number\n",
    "Embarked: where the passenger embarked the Titanic\n",
    "The goal is to predict whether or not a passenger survived based on attributes such as their age, sex, passenger class, where they embarked and so on.\n",
    "\n",
    "Let's explicitly set the PassengerId column as the index column:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "70dc16d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data = train_data.set_index('PassengerId')\n",
    "test_data = test_data.set_index('PassengerId')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4effe28d",
   "metadata": {},
   "source": [
    "Let's get more info to see how much data is missing:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "209330fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 891 entries, 1 to 891\n",
      "Data columns (total 11 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   Survived  891 non-null    int64  \n",
      " 1   Pclass    891 non-null    int64  \n",
      " 2   Name      891 non-null    object \n",
      " 3   Sex       891 non-null    object \n",
      " 4   Age       714 non-null    float64\n",
      " 5   SibSp     891 non-null    int64  \n",
      " 6   Parch     891 non-null    int64  \n",
      " 7   Ticket    891 non-null    object \n",
      " 8   Fare      891 non-null    float64\n",
      " 9   Cabin     204 non-null    object \n",
      " 10  Embarked  889 non-null    object \n",
      "dtypes: float64(2), int64(4), object(5)\n",
      "memory usage: 83.5+ KB\n"
     ]
    }
   ],
   "source": [
    "train_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fa3ea7a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "27.0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data[train_data['Sex']=='female']['Age'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ba5c0a16",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['A/5 21171' 'PC 17599' 'STON/O2. 3101282' '113803' '373450' '330877'\n",
      " '17463' '349909' '347742' '237736' 'PP 9549' '113783' 'A/5. 2151'\n",
      " '347082' '350406' '248706' '382652' '244373' '345763' '2649' '239865'\n",
      " '248698' '330923' '113788' '347077' '2631' '19950' '330959' '349216'\n",
      " 'PC 17601' 'PC 17569' '335677' 'C.A. 24579' 'PC 17604' '113789' '2677'\n",
      " 'A./5. 2152' '345764' '2651' '7546' '11668' '349253' 'SC/Paris 2123'\n",
      " '330958' 'S.C./A.4. 23567' '370371' '14311' '2662' '349237' '3101295'\n",
      " 'A/4. 39886' 'PC 17572' '2926' '113509' '19947' 'C.A. 31026' '2697'\n",
      " 'C.A. 34651' 'CA 2144' '2669' '113572' '36973' '347088' 'PC 17605' '2661'\n",
      " 'C.A. 29395' 'S.P. 3464' '3101281' '315151' 'C.A. 33111' 'S.O.C. 14879'\n",
      " '2680' '1601' '348123' '349208' '374746' '248738' '364516' '345767'\n",
      " '345779' '330932' '113059' 'SO/C 14885' '3101278' 'W./C. 6608'\n",
      " 'SOTON/OQ 392086' '343275' '343276' '347466' 'W.E.P. 5734' 'C.A. 2315'\n",
      " '364500' '374910' 'PC 17754' 'PC 17759' '231919' '244367' '349245'\n",
      " '349215' '35281' '7540' '3101276' '349207' '343120' '312991' '349249'\n",
      " '371110' '110465' '2665' '324669' '4136' '2627' 'STON/O 2. 3101294'\n",
      " '370369' 'PC 17558' 'A4. 54510' '27267' '370372' 'C 17369' '2668'\n",
      " '347061' '349241' 'SOTON/O.Q. 3101307' 'A/5. 3337' '228414' 'C.A. 29178'\n",
      " 'SC/PARIS 2133' '11752' '7534' 'PC 17593' '2678' '347081'\n",
      " 'STON/O2. 3101279' '365222' '231945' 'C.A. 33112' '350043' '230080'\n",
      " '244310' 'S.O.P. 1166' '113776' 'A.5. 11206' 'A/5. 851' 'Fa 265302'\n",
      " 'PC 17597' '35851' 'SOTON/OQ 392090' '315037' 'CA. 2343' '371362'\n",
      " 'C.A. 33595' '347068' '315093' '363291' '113505' 'PC 17318' '111240'\n",
      " 'STON/O 2. 3101280' '17764' '350404' '4133' 'PC 17595' '250653' 'LINE'\n",
      " 'SC/PARIS 2131' '230136' '315153' '113767' '370365' '111428' '364849'\n",
      " '349247' '234604' '28424' '350046' 'PC 17610' '368703' '4579' '370370'\n",
      " '248747' '345770' '3101264' '2628' 'A/5 3540' '347054' '2699' '367231'\n",
      " '112277' 'SOTON/O.Q. 3101311' 'F.C.C. 13528' 'A/5 21174' '250646'\n",
      " '367229' '35273' 'STON/O2. 3101283' '243847' '11813' 'W/C 14208'\n",
      " 'SOTON/OQ 392089' '220367' '21440' '349234' '19943' 'PP 4348' 'SW/PP 751'\n",
      " 'A/5 21173' '236171' '347067' '237442' 'C.A. 29566' 'W./C. 6609' '26707'\n",
      " 'C.A. 31921' '28665' 'SCO/W 1585' '367230' 'W./C. 14263'\n",
      " 'STON/O 2. 3101275' '2694' '19928' '347071' '250649' '11751' '244252'\n",
      " '362316' '113514' 'A/5. 3336' '370129' '2650' 'PC 17585' '110152'\n",
      " 'PC 17755' '230433' '384461' '110413' '112059' '382649' 'C.A. 17248'\n",
      " '347083' 'PC 17582' 'PC 17760' '113798' '250644' 'PC 17596' '370375'\n",
      " '13502' '347073' '239853' 'C.A. 2673' '336439' '347464' '345778'\n",
      " 'A/5. 10482' '113056' '349239' '345774' '349206' '237798' '370373'\n",
      " '19877' '11967' 'SC/Paris 2163' '349236' '349233' 'PC 17612' '2693'\n",
      " '113781' '19988' '9234' '367226' '226593' 'A/5 2466' '17421' 'PC 17758'\n",
      " 'P/PP 3381' 'PC 17485' '11767' 'PC 17608' '250651' '349243'\n",
      " 'F.C.C. 13529' '347470' '29011' '36928' '16966' 'A/5 21172' '349219'\n",
      " '234818' '345364' '28551' '111361' '113043' 'PC 17611' '349225' '7598'\n",
      " '113784' '248740' '244361' '229236' '248733' '31418' '386525'\n",
      " 'C.A. 37671' '315088' '7267' '113510' '2695' '2647' '345783' '237671'\n",
      " '330931' '330980' 'SC/PARIS 2167' '2691' 'SOTON/O.Q. 3101310' 'C 7076'\n",
      " '110813' '2626' '14313' 'PC 17477' '11765' '3101267' '323951' 'C 7077'\n",
      " '113503' '2648' '347069' 'PC 17757' '2653' 'STON/O 2. 3101293' '349227'\n",
      " '27849' '367655' 'SC 1748' '113760' '350034' '3101277' '350052' '350407'\n",
      " '28403' '244278' '240929' 'STON/O 2. 3101289' '341826' '4137' '315096'\n",
      " '28664' '347064' '29106' '312992' '349222' '394140' 'STON/O 2. 3101269'\n",
      " '343095' '28220' '250652' '28228' '345773' '349254' 'A/5. 13032' '315082'\n",
      " '347080' 'A/4. 34244' '2003' '250655' '364851' 'SOTON/O.Q. 392078'\n",
      " '110564' '376564' 'SC/AH 3085' 'STON/O 2. 3101274' '13507' 'C.A. 18723'\n",
      " '345769' '347076' '230434' '65306' '33638' '113794' '2666' '113786'\n",
      " '65303' '113051' '17453' 'A/5 2817' '349240' '13509' '17464'\n",
      " 'F.C.C. 13531' '371060' '19952' '364506' '111320' '234360' 'A/S 2816'\n",
      " 'SOTON/O.Q. 3101306' '113792' '36209' '323592' '315089' 'SC/AH Basle 541'\n",
      " '7553' '31027' '3460' '350060' '3101298' '239854' 'A/5 3594' '4134'\n",
      " '11771' 'A.5. 18509' '65304' 'SOTON/OQ 3101317' '113787' 'PC 17609'\n",
      " 'A/4 45380' '36947' 'C.A. 6212' '350035' '315086' '364846' '330909'\n",
      " '4135' '26360' '111427' 'C 4001' '382651' 'SOTON/OQ 3101316' 'PC 17473'\n",
      " 'PC 17603' '349209' '36967' 'C.A. 34260' '226875' '349242' '12749'\n",
      " '349252' '2624' '2700' '367232' 'W./C. 14258' 'PC 17483' '3101296'\n",
      " '29104' '2641' '2690' '315084' '113050' 'PC 17761' '364498' '13568'\n",
      " 'WE/P 5735' '2908' '693' 'SC/PARIS 2146' '244358' '330979' '2620'\n",
      " '347085' '113807' '11755' '345572' '372622' '349251' '218629'\n",
      " 'SOTON/OQ 392082' 'SOTON/O.Q. 392087' 'A/4 48871' '349205' '2686'\n",
      " '350417' 'S.W./PP 752' '11769' 'PC 17474' '14312' 'A/4. 20589' '358585'\n",
      " '243880' '2689' 'STON/O 2. 3101286' '237789' '13049' '3411' '237565'\n",
      " '13567' '14973' 'A./5. 3235' 'STON/O 2. 3101273' 'A/5 3902' '364848'\n",
      " 'SC/AH 29037' '248727' '2664' '349214' '113796' '364511' '111426'\n",
      " '349910' '349246' '113804' 'SOTON/O.Q. 3101305' '370377' '364512'\n",
      " '220845' '31028' '2659' '11753' '350029' '54636' '36963' '219533'\n",
      " '349224' '334912' '27042' '347743' '13214' '112052' '237668'\n",
      " 'STON/O 2. 3101292' '350050' '349231' '13213' 'S.O./P.P. 751' 'CA. 2314'\n",
      " '349221' '8475' '330919' '365226' '349223' '29751' '2623' '5727' '349210'\n",
      " 'STON/O 2. 3101285' '234686' '312993' 'A/5 3536' '19996' '29750'\n",
      " 'F.C. 12750' 'C.A. 24580' '244270' '239856' '349912' '342826' '4138'\n",
      " '330935' '6563' '349228' '350036' '24160' '17474' '349256' '2672'\n",
      " '113800' '248731' '363592' '35852' '348121' 'PC 17475' '36864' '350025'\n",
      " '223596' 'PC 17476' 'PC 17482' '113028' '7545' '250647' '348124' '34218'\n",
      " '36568' '347062' '350048' '12233' '250643' '113806' '315094' '36866'\n",
      " '236853' 'STON/O2. 3101271' '239855' '28425' '233639' '349201' '349218'\n",
      " '16988' '376566' 'STON/O 2. 3101288' '250648' '113773' '335097' '29103'\n",
      " '392096' '345780' '349204' '350042' '29108' '363294' 'SOTON/O2 3101272'\n",
      " '2663' '347074' '112379' '364850' '8471' '345781' '350047' 'S.O./P.P. 3'\n",
      " '2674' '29105' '347078' '383121' '36865' '2687' '113501' 'W./C. 6607'\n",
      " 'SOTON/O.Q. 3101312' '374887' '3101265' '12460' 'PC 17600' '349203'\n",
      " '28213' '17465' '349244' '2685' '2625' '347089' '347063' '112050'\n",
      " '347087' '248723' '3474' '28206' '364499' '112058' 'STON/O2. 3101290'\n",
      " 'S.C./PARIS 2079' 'C 7075' '315098' '19972' '368323' '367228' '2671'\n",
      " '347468' '2223' 'PC 17756' '315097' '392092' '11774' 'SOTON/O2 3101287'\n",
      " '2683' '315090' 'C.A. 5547' '349213' '347060' 'PC 17592' '392091'\n",
      " '113055' '2629' '350026' '28134' '17466' '233866' '236852'\n",
      " 'SC/PARIS 2149' 'PC 17590' '345777' '349248' '695' '345765' '2667'\n",
      " '349212' '349217' '349257' '7552' 'C.A./SOTON 34068' 'SOTON/OQ 392076'\n",
      " '211536' '112053' '111369' '370376']\n"
     ]
    }
   ],
   "source": [
    "ticket_values = train_data['Ticket'].unique()\n",
    "print(ticket_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "60f84fa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13.675550101832993"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data[train_data['Pclass']==3]['Fare'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1112994",
   "metadata": {},
   "source": [
    "Okay, the Age, Cabin and Embarked attributes are sometimes null (less than 891 non-null), especially the Cabin (77% are null). We will ignore the Cabin for now and focus on the rest. The Age attribute has about 19% null values, so we will need to decide what to do with them. Replacing null values with the median age seems reasonable. We could be a bit smarter by predicting the age based on the other columns (for example, the median age is 37 in 1st class, 29 in 2nd class and 24 in 3rd class), but we'll keep things simple and just use the overall median age.\n",
    "\n",
    "The Name and Ticket attributes may have some value, but they will be a bit tricky to convert into useful numbers that a model can consume. So for now, we will ignore them.\n",
    "\n",
    "Let's take a look at the numerical attributes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "13a12dc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699113</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526507</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.416700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Survived      Pclass         Age       SibSp       Parch        Fare\n",
       "count  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000\n",
       "mean     0.383838    2.308642   29.699113    0.523008    0.381594   32.204208\n",
       "std      0.486592    0.836071   14.526507    1.102743    0.806057   49.693429\n",
       "min      0.000000    1.000000    0.416700    0.000000    0.000000    0.000000\n",
       "25%      0.000000    2.000000   20.125000    0.000000    0.000000    7.910400\n",
       "50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n",
       "75%      1.000000    3.000000   38.000000    1.000000    0.000000   31.000000\n",
       "max      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a0443f5",
   "metadata": {},
   "source": [
    "Yikes, only 38% Survived! 😭 That's close enough to 40%, so accuracy will be a reasonable metric to evaluate our model.\n",
    "The mean Fare was £32.20, which does not seem so expensive (but it was probably a lot of money back then).\n",
    "The mean Age was less than 30 years old.\n",
    "\n",
    "Let's check that the target is indeed 0 or 1:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "52e66979",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived\n",
       "0    549\n",
       "1    342\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Survived'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3d5f8d0",
   "metadata": {},
   "source": [
    "Now let's take a quick look at all the categorical attributes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "097b1a42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pclass\n",
       "3    491\n",
       "1    216\n",
       "2    184\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Pclass'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d8786666",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sex\n",
       "male      577\n",
       "female    314\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Sex'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "de49f732",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Embarked\n",
       "S    644\n",
       "C    168\n",
       "Q     77\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Embarked'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63c5efa2",
   "metadata": {},
   "source": [
    "The Embarked attribute tells us where the passenger embarked: C=Cherbourg, Q=Queenstown, S=Southampton.\n",
    "\n",
    "Now let's build our preprocessing pipelines, starting with the pipeline for numerical attributes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1e819e62",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "num_pipeline = Pipeline([\n",
    "    ('imputer', SimpleImputer(strategy='median')),\n",
    "    ('scaler', StandardScaler())\n",
    "])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a25e5a77",
   "metadata": {},
   "source": [
    "Now we can build the pipeline for categorical variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "36d34fbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "d29712a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Preprocessing pipeline for names\n",
    "def extract_name_features(train_data):\n",
    "    # Extract title\n",
    "    train_data['Title'] = train_data['Name'].str.extract(r',\\s*([^\\.]+)\\.', expand=False)\n",
    "    train_data['Title'] = train_data['Title'].replace(['Dr', 'Rev', 'Col'], 'Rare')\n",
    "    \n",
    "    # Extract surname\n",
    "    train_data['Surname'] = train_data['Name'].str.split(',').str[0]\n",
    "    \n",
    "    # Name length\n",
    "    train_data['Name_Length'] = train_data['Name'].str.len()\n",
    "\n",
    "    # Dona problem\n",
    "    train_data['Title'] = train_data['Title'].replace(['Dr', 'Rev', 'Col', 'Dona', 'Lady'], 'Rare')\n",
    "    \n",
    "    # Other features (e.g., Cabin_floor, RelativesOnboard)\n",
    "    train_data['Cabin_floor'] = train_data['Cabin'].str[0]  # First letter of Cabin\n",
    "    train_data['RelativesOnboard'] = train_data['SibSp'] + train_data['Parch']\n",
    "    train_data['AgeBucket'] = train_data['Age'] // 15 * 15\n",
    "    train_data['Name_length'] = train_data['Name'].str.len()\n",
    "    train_data['Surname'] = train_data['Name'].str.split(',').str[0]\n",
    "    train_data['Title'] = train_data['Name'].str.extract(r',\\s*([^\\.]+)\\.', expand=False)\n",
    "\n",
    "    return train_data\n",
    "\n",
    "train_data = extract_name_features(train_data)\n",
    "test_data = extract_name_features(test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "30775eb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_pipeline = Pipeline([\n",
    "    ('imputer', SimpleImputer(strategy='most_frequent')),\n",
    "    ('cat_encoder', OneHotEncoder(handle_unknown='ignore', sparse_output=False))\n",
    "])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3ec9674",
   "metadata": {},
   "source": [
    "Let`s join the numerical and categorical pipelines"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "e0768d26",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.compose import ColumnTransformer\n",
    "\n",
    "num_attribs = ['Age', 'SibSp', 'Parch', 'Fare', 'Name_length', 'RelativesOnboard', 'AgeBucket']\n",
    "cat_attribs = ['Pclass', 'Sex', 'Embarked', 'Title', 'Surname', 'Cabin_floor']\n",
    "\n",
    "preprocess_pipeline = ColumnTransformer([\n",
    "    ('num', num_pipeline, num_attribs),\n",
    "    ('cat', cat_pipeline, cat_attribs),\n",
    "])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4758fb0",
   "metadata": {},
   "source": [
    "Now we have a proper pipeline that takes raw data and outputs numerical input features that we can feed to any Machine Learning model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "cdf41536",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived                                 1\n",
       "Pclass                                   3\n",
       "Name                Heikkinen, Miss. Laina\n",
       "Sex                                 female\n",
       "Age                                   26.0\n",
       "SibSp                                    0\n",
       "Parch                                    0\n",
       "Ticket                    STON/O2. 3101282\n",
       "Fare                                 7.925\n",
       "Cabin                                  NaN\n",
       "Embarked                                 S\n",
       "AgeBucket                             15.0\n",
       "RelativesOnboard                         0\n",
       "Cabin_floor                            NaN\n",
       "Title                                 Miss\n",
       "Surname                          Heikkinen\n",
       "Name_length                             22\n",
       "Name_Length                             22\n",
       "Name: 3, dtype: object"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.iloc[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "1ae7e474",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.56573582,  0.43279337, -0.47367361, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       [ 0.6638609 ,  0.43279337, -0.47367361, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       [-0.25833664, -0.4745452 , -0.47367361, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       ...,\n",
       "       [-0.10463705,  0.43279337,  2.00893337, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       [-0.25833664, -0.4745452 , -0.47367361, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       [ 0.20276213, -0.4745452 , -0.47367361, ...,  0.        ,\n",
       "         0.        ,  0.        ]])"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train = preprocess_pipeline.fit_transform(train_data)\n",
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "3959879c",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train = train_data['Survived']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45b1391b",
   "metadata": {},
   "source": [
    "We are ready to train a classifier- Let`s start with a Random Forest Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "8c0a9225",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-7 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-7 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-7 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-7 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-7 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(random_state=42)"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "forest_clf = RandomForestClassifier(n_estimators=100, random_state=42)\n",
    "forest_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09d31731",
   "metadata": {},
   "source": [
    "Let`s make some predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "3fec693b",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test = preprocess_pipeline.transform(test_data)\n",
    "y_pred = forest_clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "c92be90c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Categorical columns: ['Pclass', 'Sex', 'Embarked', 'Title', 'Surname', 'Cabin_floor']\n"
     ]
    }
   ],
   "source": [
    "print(\"Categorical columns:\", cat_attribs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "80e06e3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train categories: ['Mr' 'Mrs' 'Miss' 'Master' 'Don' 'Rev' 'Dr' 'Mme' 'Ms' 'Major' 'Lady'\n",
      " 'Sir' 'Mlle' 'Col' 'Capt' 'the Countess' 'Jonkheer']\n",
      "Test categories: ['Mr' 'Mrs' 'Miss' 'Master' 'Ms' 'Col' 'Rev' 'Dr' 'Dona']\n"
     ]
    }
   ],
   "source": [
    "# Compare unique categories in train vs. test for the problematic column\n",
    "print(\"Train categories:\", train_data['Title'].unique())\n",
    "print(\"Test categories:\", test_data['Title'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "136df407",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pclass                             3\n",
       "Name                Kelly, Mr. James\n",
       "Sex                             male\n",
       "Age                             34.5\n",
       "SibSp                              0\n",
       "Parch                              0\n",
       "Ticket                        330911\n",
       "Fare                          7.8292\n",
       "Cabin                            NaN\n",
       "Embarked                           Q\n",
       "Title                             Mr\n",
       "Surname                        Kelly\n",
       "Name_Length                       16\n",
       "Cabin_floor                      NaN\n",
       "RelativesOnboard                   0\n",
       "AgeBucket                       30.0\n",
       "Name_length                       16\n",
       "Name: 892, dtype: object"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "0cbf249c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8473782771535581"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "forest_scores = cross_val_score(forest_clf, X_train, y_train, cv=10)\n",
    "forest_scores.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7155218",
   "metadata": {},
   "source": [
    "LEt`s try a different model. (improvement from 0.8137578027465668 in the previous model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "c1a0a49a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7990886392009988"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "\n",
    "svm_clf = SVC(gamma='auto')\n",
    "svm_scores = cross_val_score(svm_clf, X_train, y_train, cv=10)\n",
    "svm_scores.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d453df7",
   "metadata": {},
   "source": [
    "Great! This model looks better.\n",
    "\n",
    "But instead of just looking at the mean accuracy across the 10 cross-validation folds, let's plot all 10 scores for each model, along with a box plot highlighting the lower and upper quartiles, and \"whiskers\" showing the extent of the scores (thanks to Nevin Yilmaz for suggesting this visualization). Note that the boxplot() function detects outliers (called \"fliers\") and does not include them within the whiskers. Specifically, if the lower quartile is Q1 and the upper quartile is Q3, then the interquartile range IQR = Q3 - Q1 (this is the box's height), and any score lower than Q1 - 1.5 * IQR is a flier, and so is any score greater than Q3 +1.5 * IQR."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "6e32f9e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\migig\\AppData\\Local\\Temp\\ipykernel_15040\\2547782127.py:6: MatplotlibDeprecationWarning: The 'labels' parameter of boxplot() has been renamed 'tick_labels' since Matplotlib 3.9; support for the old name will be dropped in 3.11.\n",
      "  plt.boxplot([svm_scores, forest_scores], labels=('SVM', 'Random Forest'))\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(8,4))\n",
    "plt.plot([1]*10, svm_scores, '.')\n",
    "plt.plot([2]*10, forest_scores, '.')\n",
    "plt.boxplot([svm_scores, forest_scores], labels=('SVM', 'Random Forest'))\n",
    "plt.ylabel('Accuracy')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61c4a47c",
   "metadata": {},
   "source": [
    "The random forest classifier got a very high score on one of the 10 folds, but overall it had a lower mean score, as well as a bigger spread, so it looks like the SVM classifier is more likely to generalize well.\n",
    "\n",
    "To improve this result further, you could:\n",
    "\n",
    "Compare many more models and tune hyperparameters using cross validation and grid search,\n",
    "Do more feature engineering, for example:\n",
    "Try to convert numerical attributes to categorical attributes: for example, different age groups had very different survival rates (see below), so it may help to create an age bucket category and use it instead of the age. Similarly, it may be useful to have a special category for people traveling alone since only 30% of them survived (see below).\n",
    "Replace SibSp and Parch with their sum.\n",
    "Try to identify parts of names that correlate well with the Survived attribute.\n",
    "Use the Cabin column, for example take its first letter and treat it as a categorical attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2345e0d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AgeBucket</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.0</th>\n",
       "      <td>0.576923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.0</th>\n",
       "      <td>0.362745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30.0</th>\n",
       "      <td>0.423256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45.0</th>\n",
       "      <td>0.404494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60.0</th>\n",
       "      <td>0.240000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75.0</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Survived\n",
       "AgeBucket          \n",
       "0.0        0.576923\n",
       "15.0       0.362745\n",
       "30.0       0.423256\n",
       "45.0       0.404494\n",
       "60.0       0.240000\n",
       "75.0       1.000000"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data[['AgeBucket', 'Survived']].groupby(['AgeBucket']).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3a03a90d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>RelativesOnboard</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.303538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.552795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.578431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.724138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.136364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Survived\n",
       "RelativesOnboard          \n",
       "0                 0.303538\n",
       "1                 0.552795\n",
       "2                 0.578431\n",
       "3                 0.724138\n",
       "4                 0.200000\n",
       "5                 0.136364\n",
       "6                 0.333333\n",
       "7                 0.000000\n",
       "10                0.000000"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['RelativesOnboard'] = train_data['SibSp'] + train_data['Parch']\n",
    "train_data[['RelativesOnboard', 'Survived']].groupby(['RelativesOnboard']).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38105aef",
   "metadata": {},
   "source": [
    "Use the Cabin column, for example take its first letter and treat it as a categorical attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f131051",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cabin\n",
       "B96 B98        4\n",
       "G6             4\n",
       "C23 C25 C27    4\n",
       "C22 C26        3\n",
       "F33            3\n",
       "              ..\n",
       "E34            1\n",
       "C7             1\n",
       "C54            1\n",
       "E36            1\n",
       "C148           1\n",
       "Name: count, Length: 147, dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Cabin'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "0ba17481",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data['Cabin_floor'] = train_data['Cabin'].str[0]\n",
    "train_data['Cabin_floor'] = train_data['Cabin_floor'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c127e013",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cabin_floor\n",
       "C    59\n",
       "B    47\n",
       "D    33\n",
       "E    32\n",
       "A    15\n",
       "F    13\n",
       "G     4\n",
       "T     1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['Cabin_floor'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c54f5a91",
   "metadata": {},
   "source": [
    "Try to identify parts of names that correlate well with the Survived attribute.\n",
    "\n",
    "A) Let`s extract first the Title such as Mr, MRs, Miss..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "251e9da0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Title\n",
      "the Countess    1.000000\n",
      "Mlle            1.000000\n",
      "Sir             1.000000\n",
      "Ms              1.000000\n",
      "Lady            1.000000\n",
      "Mme             1.000000\n",
      "Mrs             0.792000\n",
      "Miss            0.697802\n",
      "Master          0.575000\n",
      "Col             0.500000\n",
      "Major           0.500000\n",
      "Dr              0.428571\n",
      "Mr              0.156673\n",
      "Jonkheer        0.000000\n",
      "Rev             0.000000\n",
      "Don             0.000000\n",
      "Capt            0.000000\n",
      "Name: Survived, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "train_data['Title'] = train_data['Name'].str.extract(r',\\s*([^\\.]+)\\.', expand=False)\n",
    "\n",
    "# Check survival rates by title\n",
    "title_survival = train_data.groupby('Title')['Survived'].mean().sort_values(ascending=False)\n",
    "print(title_survival)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ec37698",
   "metadata": {},
   "source": [
    "B - Extract surnames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "8cde32d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Surname\n",
      "Abbing            0.0\n",
      "Adahl             0.0\n",
      "Adams             0.0\n",
      "Ahlin             0.0\n",
      "Alexander         0.0\n",
      "Alhomaki          0.0\n",
      "Ali               0.0\n",
      "Allum             0.0\n",
      "Andreasson        0.0\n",
      "Andrew            0.0\n",
      "Arnold-Franchi    0.0\n",
      "Artagaveytia      0.0\n",
      "Asim              0.0\n",
      "Attalah           0.0\n",
      "Augustsson        0.0\n",
      "Badt              0.0\n",
      "Bailey            0.0\n",
      "Balkic            0.0\n",
      "Banfield          0.0\n",
      "Barbara           0.0\n",
      "Barton            0.0\n",
      "Bateman           0.0\n",
      "Baumann           0.0\n",
      "Beavan            0.0\n",
      "Bengtsson         0.0\n",
      "Berglund          0.0\n",
      "Berriman          0.0\n",
      "Betros            0.0\n",
      "Birkeland         0.0\n",
      "Blackwell         0.0\n",
      "Bostandyeff       0.0\n",
      "Boulos            0.0\n",
      "Bourke            0.0\n",
      "Bowen             0.0\n",
      "Bracken           0.0\n",
      "Braund            0.0\n",
      "Brewe             0.0\n",
      "Brocklebank       0.0\n",
      "Bryhl             0.0\n",
      "Burke             0.0\n",
      "Butler            0.0\n",
      "Butt              0.0\n",
      "Byles             0.0\n",
      "Cacic             0.0\n",
      "Cairns            0.0\n",
      "Calic             0.0\n",
      "Campbell          0.0\n",
      "Canavan           0.0\n",
      "Cann              0.0\n",
      "Caram             0.0\n",
      "Name: Survived, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "train_data['Surname'] = train_data['Name'].str.split(',').str[0]\n",
    "\n",
    "# Check survival by surname \n",
    "surname_survival = train_data.groupby('Surname')['Survived'].mean()\n",
    "print(surname_survival.nsmallest(50))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4e8cbf6",
   "metadata": {},
   "source": [
    "C - Name length\n",
    "Longer names might correlate with higher social class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "202c2f6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name_length\n",
      "(11.999, 20.0]    0.230453\n",
      "(20.0, 25.0]      0.325581\n",
      "(25.0, 30.0]      0.364929\n",
      "(30.0, 82.0]      0.626126\n",
      "Name: Survived, dtype: float64\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\migig\\AppData\\Local\\Temp\\ipykernel_15040\\3850747624.py:4: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  print(train_data.groupby(pd.qcut(train_data['Name_length'], 4))['Survived'].mean())\n"
     ]
    }
   ],
   "source": [
    "train_data['Name_length'] = train_data['Name'].str.len()\n",
    "\n",
    "# Compare survival by name length\n",
    "print(train_data.groupby(pd.qcut(train_data['Name_length'], 4))['Survived'].mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ebf4c7a",
   "metadata": {},
   "source": [
    "Statistical Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "2421da9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Chi2 p-value: 0.0000\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import chi2_contingency\n",
    "\n",
    "#Create a contingency table: Title vs Survived\n",
    "contingency_table = pd.crosstab(train_data['Title'], train_data['Survived'])\n",
    "chi2, p, _, _ = chi2_contingency(contingency_table)\n",
    "\n",
    "print(f'Chi2 p-value: {p:.4f}')  # p < 0.05 implies significant correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "f25c0cc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjcAAAH4CAYAAAC2fsxSAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABd+klEQVR4nO3dd3xN9/8H8NdNIgkyrCRGI7FnSSWpCCFWUMSmg9gaUmrPqlG7pahatUqtGkWtCGqFtoQIpagVIhEJkggy378//O755kqQcZMbx+v5eOTBvffc+3nfde7rfM7nfI5GRAREREREKmFk6AKIiIiI9InhhoiIiFSF4YaIiIhUheGGiIiIVIXhhoiIiFSF4YaIiIhUheGGiIiIVMXE0AXktdTUVNy7dw+WlpbQaDSGLoeIiIgyQUQQFxeH0qVLw8jo9X0z71y4uXfvHuzt7Q1dBhEREWXDnTt38N577712mXcu3FhaWgJ48eJYWVkZuBoiIiLKjNjYWNjb2yu/46/zzoUb7a4oKysrhhsiIqK3TGaGlHBAMREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpikHDzbFjx9C2bVuULl0aGo0GO3bseON9jh49CmdnZ5ibm6N8+fJYunRp7hdKREREbw2Dhpv4+HjUrl0bixYtytTyN2/exEcffQQPDw+cO3cO48ePx5AhQ7Bt27ZcrpSIiIjeFgY9K3irVq3QqlWrTC+/dOlSlC1bFvPnzwcAVKtWDWfOnMF3332HTp065VKVRESvJiKIj49XLhcuXDhTZy1+29okepsYNNxk1alTp+Dl5aVzXYsWLbBy5UokJSWhQIEC6e6TkJCAhIQE5XJsbGyu10lE7474+Hi0a9dOubxz505YWFiork2it8lbFW4iIiJgZ2enc52dnR2Sk5MRFRWFUqVKpbvPzJkzMWXKlFc+pvOotXqvM62gb33yRZu53S7bNMx7SkRE6b11R0u93PUqIhlerzVu3DjExMQof3fu3Mn1GomIiMhw3qqem5IlSyIiIkLnusjISJiYmKB48eIZ3sfMzAxmZmZ5UR4RERHlA29Vz029evUQEBCgc92BAwfg4uKS4XgbIiIievcYNNw8efIEwcHBCA4OBvDiUO/g4GCEhoYCeLFLycfnf2MNfH19cfv2bQwfPhyXL1/GqlWrsHLlSowcOdIQ5RMREVE+ZNDdUmfOnEHjxo2Vy8OHDwcA9OzZE2vWrEF4eLgSdACgXLly2Lt3L4YNG4Yff/wRpUuXxsKFC3kYOBERESkMGm48PT2VAcEZWbNmTbrrGjVqhLNnz+ZiVURERPQ2e6vG3BARERG9CcMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqQrDDREREamKiaELIKLcJSKIj49XLhcuXBgajcaAFRER5S6GGyKVi4+PR7t27ZTLO3fuhIWFhQErIiLKXdwtRURERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKpi8HCzePFilCtXDubm5nB2dsbx48dfu/z69etRu3ZtFCpUCKVKlULv3r0RHR2dR9USERFRfmfQcLN582YMHToUEyZMwLlz5+Dh4YFWrVohNDQ0w+VPnDgBHx8f9O3bF//88w+2bNmC06dPo1+/fnlcOREREeVXBg038+bNQ9++fdGvXz9Uq1YN8+fPh729PZYsWZLh8n/++SccHR0xZMgQlCtXDg0aNMDnn3+OM2fOvLKNhIQExMbG6vwRERGRehks3CQmJiIoKAheXl4613t5eeHkyZMZ3sfd3R13797F3r17ISK4f/8+tm7ditatW7+ynZkzZ8La2lr5s7e31+vzICIiovzFYOEmKioKKSkpsLOz07nezs4OERERGd7H3d0d69evR7du3WBqaoqSJUuiSJEi+OGHH17Zzrhx4xATE6P83blzR6/Pg4iIiPIXgw8o1mg0OpdFJN11WpcuXcKQIUPw9ddfIygoCPv378fNmzfh6+v7ysc3MzODlZWVzh8RERGpl4mhGi5RogSMjY3T9dJERkam683RmjlzJurXr49Ro0YBAGrVqoXChQvDw8MD06ZNQ6lSpXK9bqL8wnnU2kwtp0lOhHWay54TN0FMTN94v6BvfbJZGRGRYRms58bU1BTOzs4ICAjQuT4gIADu7u4Z3ufp06cwMtIt2djYGMCLHh8iIiIig+6WGj58OFasWIFVq1bh8uXLGDZsGEJDQ5XdTOPGjYOPz/+2Htu2bYvt27djyZIluHHjBgIDAzFkyBB8+OGHKF26tKGeBhEREeUjBtstBQDdunVDdHQ0pk6divDwcNSsWRN79+6Fg4MDACA8PFxnzptevXohLi4OixYtwogRI1CkSBE0adIEs2fPNtRTICIionzGoOEGAAYNGoRBgwZleNuaNWvSXTd48GAMHjw4l6siIiKit5XBj5YiIiIi0ieGGyIiIlIVhhsiIiJSFYOPuSEi9RERxMfHK5cLFy78ysk5iYj0jeGGiPQuPj4e7dq1Uy7v3LkTFhYWBqyIiN4l3C1FREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwnBDREREqsJwQ0RERKrCcENERESqwhNnEpEq8EzkRKTFcENEqsAzkRORFndLERERkaqw54aIiN6Iu/3obcJwQ0REb8TdfvQ2YbghUjkxLoCYWp/oXCYiUjOGGyK102ggJqaGroKIKM9wQDERERGpCsMNERERqQrDDREREakKww0RERGpCgcUE1GWOI9a+8ZlNMmJsE5z2XPipkwNag761icHlRERvcCeGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFYYbIiIiUhWGGyIiIlIVhhsiIiJSFRNDF0BE6iPGBRBT6xOdy0REeYXhhoj0T6OBmJgaugoiekdxtxQRERGpCsMNERERqQrDDREREakKww0RERGpCsMNERERqYrBw83ixYtRrlw5mJubw9nZGcePH3/t8gkJCZgwYQIcHBxgZmaGChUqYNWqVXlULREREeV3Bj0UfPPmzRg6dCgWL16M+vXrY9myZWjVqhUuXbqEsmXLZnifrl274v79+1i5ciUqVqyIyMhIJCcn53HlRERElF8ZNNzMmzcPffv2Rb9+/QAA8+fPh7+/P5YsWYKZM2emW37//v04evQobty4gWLFigEAHB0d87JkIiIiyucyHW46duyY6Qfdvn37G5dJTExEUFAQxo4dq3O9l5cXTp48meF9du3aBRcXF8yZMwfr1q1D4cKF4e3tjW+++QYFCxbM8D4JCQlISEhQLsfGxmb6eRAREdHbJ9PhxtraWvm/iOC3336DtbU1XFxcAABBQUF4/PhxpkNQVFQUUlJSYGdnp3O9nZ0dIiIiMrzPjRs3cOLECZibm+O3335DVFQUBg0ahIcPH75y3M3MmTMxZcqUTNVEREREb79Mh5vVq1cr/x8zZgy6du2KpUuXwtjYGACQkpKCQYMGwcrKKksFaDQancsiku46rdTUVGg0Gqxfv14JW/PmzUPnzp3x448/Zth7M27cOAwfPly5HBsbC3t7+yzVSERERG+PbB0ttWrVKowcOVIJNgBgbGyM4cOHZ/rIpRIlSsDY2DhdL01kZGS63hytUqVKoUyZMjq9SNWqVYOI4O7duxnex8zMDFZWVjp/REREpF7ZCjfJycm4fPlyuusvX76M1NTUTD2GqakpnJ2dERAQoHN9QEAA3N3dM7xP/fr1ce/ePTx58kS57urVqzAyMsJ7772XhWdAREREapWto6V69+6NPn364L///oObmxsA4M8//8SsWbPQu3fvTD/O8OHD0aNHD7i4uKBevXpYvnw5QkND4evrC+DFLqWwsDCsXbsWAPDpp5/im2++Qe/evTFlyhRERUVh1KhR6NOnzysHFBMREdG7JVvh5rvvvkPJkiXx/fffIzw8HMCLXUajR4/GiBEjMv043bp1Q3R0NKZOnYrw8HDUrFkTe/fuhYODAwAgPDwcoaGhyvIWFhYICAjA4MGD4eLiguLFi6Nr166YNm1adp4GERERqVC2wo2RkRFGjx6N0aNHK4dWZ3csy6BBgzBo0KAMb1uzZk2666pWrZpuVxYRERGRVrZPv5CcnIyDBw9i48aNytFNL4+HISIiIspr2eq5uX37Nlq2bInQ0FAkJCSgefPmsLS0xJw5c/D8+XMsXbpU33US0TvMedTaNy6jSU6EdZrLnhM3QUxM33i/oG99clAZEeVH2eq5+fLLL+Hi4oJHjx7pDOTt0KEDDh06pLfiiIiIiLIqWz03J06cQGBgIExNdbeKHBwcEBYWppfCiIiIiLIjWz03qampSElJSXf93bt3YWlpmeOiiIiIiLIrW+GmefPmmD9/vnJZo9HgyZMnmDRpEj766CN91UZERESUZdnaLfX999+jcePGqF69Op4/f45PP/0U165dQ4kSJbBx40Z910hERESUadkKN6VLl0ZwcDA2btyIs2fPIjU1FX379sVnn33GmYKJiIjIoLIVbp4+fYpChQqhT58+6NOnj75rIiIiIsq2bI25sbW1Rffu3eHv75/pE2USERER5YVshZu1a9ciISEBHTp0QOnSpfHll1/i9OnT+q6NiIiIKMuyFW46duyILVu24P79+5g5cyYuX74Md3d3VK5cGVOnTtV3jURERESZlu1zSwGApaUlevfujQMHDuD8+fMoXLgwpkyZoq/aiIiIiLIsR+Hm+fPn+PXXX9G+fXvUqVMH0dHRGDlypL5qIyIiIsqybB0tdeDAAaxfvx47duyAsbExOnfuDH9/fzRq1Ejf9RERERFlSbbCTfv27dG6dWv8/PPPaN26NQoUKKDvuoiIiIiyJVvhJiIiAlZWVvquhYiIiCjHMh1uYmNjdQJNbGzsK5dl8CEiIiJDyXS4KVq0KMLDw2Fra4siRYpAo9GkW0ZEoNFoMjxjOBEREVFeyHS4OXz4MIoVK6b8P6NwQ0RERGRomQ43aY+E8vT0zI1aiIiIiHIsW/PclC9fHhMnTsSVK1f0XQ8RERFRjmQr3HzxxRfYv38/qlWrBmdnZ8yfPx/h4eH6ro2IiIgoy7IVboYPH47Tp0/j33//RZs2bbBkyRKULVsWXl5eWLt2rb5rJCIiIsq0HJ1+oXLlypgyZQquXLmC48eP48GDB+jdu7e+aiMiIiLKsmxN4pfW33//jQ0bNmDz5s2IiYlB586d9VEXERERUbZkK9xcvXoV69evx4YNG3Dr1i00btwYs2bNQseOHWFpaanvGomIiIgyLVvhpmrVqnBxcYGfnx8+/vhjlCxZUt91EREREWVLlsNNSkoKli5dis6dOyuT+hERqY3zqMwdHKFJToR1msueEzdBTExfe5+gb33yTZtEapTlAcXGxsYYMmQIYmJicqMeIiIiohzJ1tFS77//Pm7cuKHvWoiIiIhyLFvhZvr06Rg5ciR2796N8PBwxMbG6vwRERERGUq2BhS3bNkSAODt7a1zAk2eFZyIiIgMLVvh5o8//tB3HURERER6ka1wk/YM4URERET5SbbCzbFjx157e8OGDbNVDBEREVFOZSvceHp6prsu7dgbjrkhIiIiQ8nW0VKPHj3S+YuMjMT+/fvh6uqKAwcO6LtGIiIiokzLVs+NtbV1uuuaN28OMzMzDBs2DEFBQTkujIiIiCg7stVz8yo2Nja4cuWKPh+SiIiIKEuy1XMTEhKic1lEEB4ejlmzZqF27dp6KYyIiIgoO7IVbpycnKDRaCAiOte7ublh1apVeimMiIiIKDuyFW5u3rypc9nIyAg2NjYwNzfXS1FERERE2ZWlMTd//fUX9u3bBwcHB+Xv6NGjaNiwIcqWLYsBAwYgISEht2olIiIieqMshZvJkyfrjLe5cOEC+vbti2bNmmHs2LH4/fffMXPmTL0XSURERJRZWQo3wcHBaNq0qXJ506ZNqFu3Ln766ScMHz4cCxcuxK+//qr3IomIiIgyK0vh5tGjR7Czs1MuHz16VDlDOAC4urrizp07+quOiIiIKIuyFG7s7OyUwcSJiYk4e/Ys6tWrp9weFxeHAgUK6LdCIiIioizIUrhp2bIlxo4di+PHj2PcuHEoVKgQPDw8lNtDQkJQoUIFvRdJRERElFlZOhR82rRp6NixIxo1agQLCwv8/PPPMDU1VW5ftWoVvLy89F4kERERUWZlKdzY2Njg+PHjiImJgYWFBYyNjXVu37JlCywsLPRaIBEREVFW6O3EmQBQrFixHBVDRERElFN6PXEmERERkaFlq+eGiIjUwXnU2kwtp0lORNo+e8+JmyAmpq9cXivoW59sVkaUfey5ISIiIlVhuCEiIiJV4W4pIlIFMS6AmFqf6FwmoncTww0RqYNGk6kxIESkftwtRURERKpi8HCzePFilCtXDubm5nB2dsbx48czdb/AwECYmJjAyckpdwskIiKit4pBw83mzZsxdOhQTJgwAefOnYOHhwdatWqF0NDQ194vJiYGPj4+aNq0aR5VSkRERG8Lg4abefPmoW/fvujXrx+qVauG+fPnw97eHkuWLHnt/T7//HN8+umnOmckJyIiIgIMGG4SExMRFBSU7kSbXl5eOHny5Cvvt3r1aly/fh2TJk3KVDsJCQmIjY3V+SMiIiL1Mli4iYqKQkpKCuzs7HSut7OzQ0RERIb3uXbtGsaOHYv169fDxCRzB3rNnDkT1tbWyp+9vX2OayciIqL8y+ADijUajc5lEUl3HQCkpKTg008/xZQpU1C5cuVMP/64ceMQExOj/N25cyfHNRMREVH+ZbB5bkqUKAFjY+N0vTSRkZHpenMAIC4uDmfOnMG5c+fwxRdfAABSU1MhIjAxMcGBAwfQpEmTdPczMzODmZlZ7jwJIiIiyncM1nNjamoKZ2dnBAQE6FwfEBAAd3f3dMtbWVnhwoULCA4OVv58fX1RpUoVBAcHo27dunlVOhEREeVjBp2hePjw4ejRowdcXFxQr149LF++HKGhofD19QXwYpdSWFgY1q5dCyMjI9SsWVPn/ra2tjA3N093PREREb27DBpuunXrhujoaEydOhXh4eGoWbMm9u7dCwcHBwBAeHj4G+e8ISIiIkrL4OeWGjRoEAYNGpThbWvWrHntfSdPnozJkyfrvygiIiJ6axn8aCkiIiIifWK4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVYbghIiIiVWG4ISIiIlVhuCEiIiJVMXi4Wbx4McqVKwdzc3M4Ozvj+PHjr1x2+/btaN68OWxsbGBlZYV69erB398/D6slIiKi/M6g4Wbz5s0YOnQoJkyYgHPnzsHDwwOtWrVCaGhohssfO3YMzZs3x969exEUFITGjRujbdu2OHfuXB5XTkRERPmViSEbnzdvHvr27Yt+/foBAObPnw9/f38sWbIEM2fOTLf8/PnzdS7PmDEDO3fuxO+//44PPvggwzYSEhKQkJCgXI6NjdXfEyAiIqJ8x2A9N4mJiQgKCoKXl5fO9V5eXjh58mSmHiM1NRVxcXEoVqzYK5eZOXMmrK2tlT97e/sc1U1ERET5m8HCTVRUFFJSUmBnZ6dzvZ2dHSIiIjL1GHPnzkV8fDy6du36ymXGjRuHmJgY5e/OnTs5qpuIiIjyN4PulgIAjUajc1lE0l2XkY0bN2Ly5MnYuXMnbG1tX7mcmZkZzMzMclwnERHlLRFBfHy8crlw4cKZ+n0gMli4KVGiBIyNjdP10kRGRqbrzXnZ5s2b0bdvX2zZsgXNmjXLzTKJiMhA4uPj0a5dO+Xyzp07YWFhYcCK6G1hsN1SpqamcHZ2RkBAgM71AQEBcHd3f+X9Nm7ciF69emHDhg1o3bp1bpdJREREbxmD7pYaPnw4evToARcXF9SrVw/Lly9HaGgofH19AbwYLxMWFoa1a9cCeBFsfHx8sGDBAri5uSm9PgULFoS1tbXBngcRERHlHwYNN926dUN0dDSmTp2K8PBw1KxZE3v37oWDgwMAIDw8XGfOm2XLliE5ORl+fn7w8/NTru/ZsyfWrFmT1+UTERFRPmTwAcWDBg3CoEGDMrzt5cBy5MiR3C+IiIiI3moGP/0CERERkT4x3BAREZGqMNwQERGRqjDcEBERkaow3BAREZGqMNwQERGRqjDcEBERkaow3BAREZGqGHwSPyIierc4j1qbqeU0yYlIe2Idz4mbICamb7xf0Lc+2ayM1II9N0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCo8FJyIiN5IjAsgptYnOpeJ8iuGGyIiejONJlNzzBDlB9wtRURERKrCcENERESqwnBDREREqsIxN0RElC9xEDNlF8MNERHlTxzETNnE3VJERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgw3REREpCoMN0RERKQqDDdERESkKgYPN4sXL0a5cuVgbm4OZ2dnHD9+/LXLHz16FM7OzjA3N0f58uWxdOnSPKqUiIiI3gYGDTebN2/G0KFDMWHCBJw7dw4eHh5o1aoVQkNDM1z+5s2b+Oijj+Dh4YFz585h/PjxGDJkCLZt25bHlRMREVF+ZdBwM2/ePPTt2xf9+vVDtWrVMH/+fNjb22PJkiUZLr906VKULVsW8+fPR7Vq1dCvXz/06dMH3333XR5XTkRERPmViaEaTkxMRFBQEMaOHatzvZeXF06ePJnhfU6dOgUvLy+d61q0aIGVK1ciKSkJBQoUSHefhIQEJCQkKJdjYmIAALGxsQCAlIRnOXoeb6JtJy1DtJnb7bJNfo7e1TY1yYlITk7WuZ+kpKiuzezKT59dertp31cRefPCYiBhYWECQAIDA3Wunz59ulSuXDnD+1SqVEmmT5+uc11gYKAAkHv37mV4n0mTJgkA/vGPf/zjH//4p4K/O3fuvDFjGKznRkuj0ehcFpF0171p+Yyu1xo3bhyGDx+uXE5NTcXDhw9RvHjx17aTkdjYWNjb2+POnTuwsrLK0n2z611p01Dtsk22+ba2yzbZ5tvabnbbFBHExcWhdOnSb1zWYOGmRIkSMDY2RkREhM71kZGRsLOzy/A+JUuWzHB5ExMTFC9ePMP7mJmZwczMTOe6IkWKZL9wAFZWVnn64XuX2jRUu2yTbb6t7bJNtvm2tpudNq2trTO1nMEGFJuamsLZ2RkBAQE61wcEBMDd3T3D+9SrVy/d8gcOHICLi0uG422IiIjo3WPQo6WGDx+OFStWYNWqVbh8+TKGDRuG0NBQ+Pr6AnixS8nHx0dZ3tfXF7dv38bw4cNx+fJlrFq1CitXrsTIkSMN9RSIiIgonzHomJtu3bohOjoaU6dORXh4OGrWrIm9e/fCwcEBABAeHq4z5025cuWwd+9eDBs2DD/++CNKly6NhQsXolOnTnlSr5mZGSZNmpRuNxfbfHvbZZts821tl22yzbe13bxoUyOSmWOqiIiIiN4OBj/9AhEREZE+MdwQERGRqjDcEBERkaow3BAREeUAh67mPww3REQ5lJqaaugSKI+lDTRZne2ech/DDVEGuCVGmXH//n0AgJGREUQk33xu1Bq28tPrq9FocP36dUyaNAkpbzhpKeU9hhsD+eeff7J939z8gmu/pLdv38bevXvx7Fnunr03P0n7g2CILbG8XnHnlx+KvPbkyRO9PVbPnj3RunVrBAcHQ6PRQKPRGCxYpH0/jYz0v2rXrhvu37+PpKQkvT/+m9y7dy/f9JBoX9+RI0ciJCTknf0u5VRiYiIA4MaNG0hISNDrYzPc5KHk5GQAwMaNG/HJJ59g37592Xqc3PyCGxsbAwA6deqEY8eO5fmEUmknbcxrRkZGuHv3Lvz8/PD8+fM8bz+vVtxXr17N0/byw4pf+8O8b98+TJs2DY8fP87xY8bGxqJJkyYQEXzyyScYNWoUoqKilB++vAw5KSkp0Gg0CAgIQIcOHRAfH6/3NrTrht69e+P48eN58r5qX8NNmzahc+fOePDgQa63+Sbamu7fvw9HR0d88cUXMDEx0cvroX3ss2fP4tChQzl+vJzWkZuePXsGU1NT3Lp1C5988gliYmL0+vgMN3lERGBi8mJC6GHDhuHzzz9H/fr1AQD//vsv/v77b1y8ePG1jxEeHo6VK1di586dOHjwoF63QIH//QA8ePAAdnZ26NOnT65sAb5MG/r27NmDjh074sCBA7ne5qv8+++/2LdvHw4fPpxnbd6+fRtr1qzBxo0bcefOnVwJVtrXeNWqVRg6dCj8/f0B5E3w0K4oV69ejS1bthhkq1/7wzx69GjY2dnl+OS5wIuT/o0ePRrffPMNunXrhuPHj8PLywuLFy8G8L+t+7x4jbXPb/78+ahYsSIKFy6cK+2sXr0ad+7cgYeHR56EY+1ruGXLFnTt2hU2Nja53uabaGuaMWMGdu3ahXPnzgGAXnrttI+9evVqtGjRAseOHctZsVmQkJCA0NBQPHz4MNcDemJiIj766CNs2rQJPXr0QJUqVWBra6usp/RCKE/Nnj1bateuLSIiz549ky1btoidnZ0UK1ZMmjZtKuHh4TrLJyUliYjI4cOHxdnZWapVqyaVK1cWe3t7CQgIyJUaR48eLR4eHrJ169ZcefxXcXBwkGnTpklkZKSIiNy5c0euXr0q//33X57VEB8fL35+fmJlZSX79+/PtXa07+uGDRvEyclJXF1dpUSJEmJvby+XLl1SlktNTc1xW9rHiI+PF2tra1m9erXExcWJiMh///0n165dU+rRt+TkZBERuX79utjY2MiMGTPk4cOH6W7PTdrndufOHenfv7+cPXtWL4+b9r2Jj4+XPXv2yMCBA6V69erSrFkz2bt3b4bL6pv2Nbx8+bL4+fnJ7t27da7PqZSUFBERSUxMlPXr18uoUaOU23LzeWnft6CgIOnevbts2rRJaTM3282MsLAw6datm1SsWFFKlCghS5culcTEROV27WuWXcnJydKjRw/p0KGDPHjwQC+PmRHta3zy5Elp1KiRVKtWTdzd3eWbb77R+fzou+0LFy5Ir169xMHBQczMzOS3337TaUvbdk7WSww3eWzu3Lni7e0tIiIzZsyQjz76SKZMmSIXL16U0qVLy+bNmzO8X8WKFWX8+PEiIrJs2TIpW7asPH78WERErly5kqMVWUJCgvL/mzdvir29vWg0GunQoYPcunUr24+bGdq6FyxYIFWqVFGu279/vzg6OoqNjY106NBBoqKicrWOlw0ZMkSaNWumBCt9frm1K+bU1FQpXry4LFmyREREpkyZIrVr15aUlBRJTEyUp0+f6rW94cOHi6enp4iIxMbGytatW+W9994TU1NT6dKlS64FHBGR5s2bS+/evZXLZ8+elc6dO8vo0aPl4sWLudauVlxcnFSoUEEKFy4s06dP19vjvvy5iIqKko0bN0qnTp2kcuXK0qtXLwkJCdFbe6/TpUsXsbGxkTFjxijX6TMI+Pr6ikajkTJlykhwcLBeHvNVtEEhKSlJGjRoIIULF5YOHTrIkydPlGUMHXCePn0qv/32m3Ts2FFcXFyke/fucvDgwRw/rnad+Oeff4qjo6M0bdpUYmJicvy4r+Pg4CADBgyQ2bNny9ixY6V69ery/vvvy/r163OtzQcPHkjlypWlUqVKUq1aNenTp49cu3ZNZ5nvv/8+3QZ/ZjHc5LGAgADRaDTy/vvvi5WVlWzYsEEJKZ6enrJo0aJ099m3b59UrVpVUlJS5NmzZ1KqVClZuXKliIicO3dOBg0aJBcuXMhWPWPHjpWffvpJ57rExERZtmyZlChRQsqXLy/r16+X58+fZ+vxXyftls6MGTOkc+fOIiLy448/SuvWrWXYsGHyxx9/SNGiRWXbtm16b1/k1Vu3ly5dktq1a0vLli11wp8+LV++XOrUqSMiIrdv3xYrKyvx9/cXEZE9e/ZIp06d5Pr163ppKyUlRfr16yf9+vUTkRevd6tWrWT8+PFy+PBhKVmypPz99996aetlt27dkqpVq8qZM2dE5MXz/vDDD6VBgwZiY2MjPj4+udKulvZHcPTo0WJpaSk2NjayatWqHAVm7efmwYMHEhgYKLNmzZKDBw8qvY7Xr1+X+fPni5ubmzRo0CDnT+INHj58KGPGjBF3d3extLSUYcOG6Xx2shPOXw4PcXFxMnbsWNFoNFKvXj05dOiQTtjQp0GDBik9NXv27JH27duLjY2N9OzZU/bv358nPX4vS/t6aHtTRESio6Pl+++/lxYtWoiHh4f0799f7ty5k+3HTuv69evi6uoqw4YNk2fPnr122azSfiauXbsm3t7eymsaGxsr/v7+0q9fPylfvry4ubnlSkB/+vSp7N27V4KDg2XOnDnSoEEDqVGjhsyYMUPi4+Plu+++E1tb22w/PsNNLtN+YKKjo5XrgoKCZNasWXLgwAHlul27domFhYVOQtd++IKDg8XZ2VlEREaOHCn16tVTtrJDQkKkWrVq2f7wffPNN3LixAkRebGlkDYlR0ZGiq+vrxgbG0vz5s3ljz/+yFYbrzJo0CD59ddfJSUlRU6dOiUajUY8PDzEwsJCli1bpqxAvLy8ZOHChXptW+R/K4lnz56Jn5+fzJs3T9auXSt3796Vhw8fSlhYmLi7u8uIESOUgKPPHpyAgABp1KiRiIh8/PHH0rFjR+W2I0eOSO3atSUsLEwvbcXGxsqePXukePHi4ubmJiVKlJB169bJ06dPJTk5WZycnHJtN2RkZKTUqlVLhgwZIsuXLxcnJyeZOXOmiIj8/vvv0rhxY4mIiMiVtl/24MED6dixo2g0GmnXrp0cO3Ysyz/QaX9cmjVrJuXKlZOKFSuKsbGxNGzYUHbs2CEiLz4rR44ckXPnzunzKbzW6dOnZdiwYVKvXj1p3ry5LF68WNkFmVWpqakSFRUlc+bMka+++kqWL18uEREREhoaKp6enmJiYiJ+fn5y8eJFvW4ALFy4UDQajTRr1kwGDx4s//zzj6SkpMiqVavEzc1N3N3d5euvv1bCcl7QrsfDwsJk4sSJUqVKFXn//fdl9OjRynoqODhYRowYIe7u7ln6PGs/T2FhYTJr1izZtWuXREZGys2bN0VEZPPmzWJvby9Lly7V75OSF732fn5+0qRJk3Q9JGFhYbJ+/Xpp2LChBAYG6qW9VwWzlJQU+euvv2TUqFFSu3ZtKVq0qLz33nvKrt3s9Coz3OSRDh06yIgRIzLcWvz555+lWrVqMnv2bElMTJSrV6/q3H7r1i1xdHQUPz8/sbCw0OnG/+yzz6Rly5Y5ri8sLEw0Go20bNlS/vjjD4mNjVVuCw4OloYNG4qpqWm2V5Qv067AmjdvLn5+fnL27Fk5fvy4TJo0SdliExH5448/pGDBgtnumsxIXFycznil06dPS5UqVaRt27bi4OAgdnZ24ubmJuXKlRNHR0cxNTWV1atX6619rZCQEClfvrwMHDhQLCws5N69e8ptTZs2lf79++fo8bVBbOPGjVKvXj35999/Zfny5TJx4kSd8SC//PKLlChRIld2vWmtX79eSpUqJaVKlZJVq1YpgWLq1KlK71Vuef78uVy6dEmnd/PUqVNSq1YtsbS0lN69e+tsib+J9nWaNGmS1KxZUwkvV69eFW9vbzEzM5M1a9bo9Tm8SdrPTmpqquzcuVO6d+8u9evXl6ZNm2Zr19/KlSulbt26Urx4cbG1tZUSJUpIyZIlZerUqSIi8ttvv0mpUqWkcOHC6Xp/c2LVqlWi0WjE1dVV2rRpI40aNZI5c+bIo0eP5MGDBzJu3DhxdnYWV1dXOX36tN7azYzmzZtL8+bNxd/fX7p06SIlS5aUu3fv6ixz5coVEcn6htDUqVOldu3aYmNjI2XKlJHGjRtLs2bN5OeffxZ3d3fRaDRy5MgRvT0XEZH9+/dLlSpVxMLCQnlfX/by88sJ7Wuya9cuGT58uNSvX1/Gjh0rJ0+elNTUVImLi5MjR47Ili1blF7s7GK4yUVpx5NUrlxZZ0vjxo0bEhERIVFRUbJ27VqZOHGiiIiMGjVKGjRoIJs3b9b5Qf/tt9+kYsWKYmtrK9u3b5fTp0/LyJEjpUSJElkecKv94Xn06JH88ssvSs/NqVOn5MMPPxRTU1Px8/OTkJAQnS2yy5cvZ++FyEDaFVjbtm2ladOmMn36dKVbX+TFFsv7778vEyZM0Fu7IiI//fSTaDQa6dixo07XfUREhCQnJ0tgYKDs27dPlixZIr6+vtKlSxext7dXBr3pc1//vHnzxN7eXlxcXOS3336TEydOiJ+fn5QsWVLi4+P10kbHjh3l+++/z/C2HTt2SPny5fW6VahdgSUkJMiKFSuU3sgnT54oW6PPnz+XkydPio2NjTIAVp/SDsRv3769VKtWTd577z1p0qSJTi/qjz/+KDVq1Mjy4z979kxcXFxk/vz5IqL7QzZ69GipUaOGzgaCvmmf3/nz5+Xzzz8XJycnKVOmjIwYMUL5TD948EDmz58v3bp1y3LPyvHjx6VKlSoya9YsZdzd77//Lr179xZbW1tlF7KIiJ+fn2zfvl1Pz+yFZcuWKT22X3zxhXzwwQfy0UcfyaZNmyQlJUXOnTsnQ4YM0Wubr6L9vvv7+4utra0SzD/88EP5+uuvReTFBuDGjRtz3NajR48kISFBNm3aJD/88IMMHDhQ3n//fWncuLE4ODjofWCvdiD8gAEDxN7ePt1AeH3S1h4SEiKWlpbSuHFj8fPzEwcHBylbtqzMmjUrw/tld33LcJPLkpKSpGTJkvLLL7+IyIsBu2PGjBEzMzOpWLGiHDt2TET+N/7kyJEj4unpKY6OjjJgwADx9/dXfhx+++036dq1q1hZWYmVlZV4e3tn6wul/bD07dtXmjZtKnv27NG5fePGjVK6dGkpUaKEzJs3T27evJkrI/W1K7AFCxaIn5+ffPDBB9KmTRtZtmyZXL9+XbZt2ybDhw/Xe7t3796V9evXS4MGDcTa2lrGjx//2n34kZGR0rNnT2nTpo1e2k871ujZs2eyePFiadSokVSqVElMTEzks88+S/eeZNXLR5poPyepqanKe3n9+nWZPn263sOj9vH9/PykXr16Ga4sAwMD5aOPPpJevXrptW0R3ZVhmTJl5KuvvpLz58+Lj4+PVKhQQRISEvSyG6Vbt246vWvaMRGHDx+WSpUq5fqgWxGRKlWqSPv27WX69OlKUC5ZsqTs27dPWUY7pi8r3+HKlSvLhAkT0u0OePLkicyYMUM0Gs0rf4xyQvvdiIyMlN69e0ufPn0kOTlZDh48KJ06dRIXFxfp2bOn3nswMmPx4sXStm1bEXlx1GvFihWVALt//37x8PDI9gZgRESEnD17Vo4ePZrutuTkZLl586bcv38/+8W/wcOHD2XTpk15MhD+k08+kYEDB+p8T6dPny7GxsbKRr4+xlQx3OSyCxcuiIuLi9y+fVuSk5Old+/e0qBBAzl8+LB4eXlJ27ZtlS902hXuypUrpXr16lKjRg2ZNGmS0q0cFxcn9+/fz/bhrNoV3MGDB6Vo0aLy999/6/zY3rx5U9m6XrhwoZiamoqjo6Pexn6IvHkFVrduXenVq5f8/PPPeuu9yMjff/8tX3zxhWg0GilXrpysWrVKuS0lJUVnEPX58+elaNGi2d7Pr/2R2LNnj/Tp00fef/99mTFjhty+fVtERMLDw+XKlSt66R3LypEmjx490ttRWSL/+3xduHBBChYsqDPe5KeffpJp06bJyZMn5f79+3LixAnlhzc3zJ07V2rVqiUiL7ZQixYtKjt37hQRkQMHDsjkyZN1egpfRfucLl68KJMmTVKOaJw7d64UKFBAli9frrP8iRMnpFixYjo9RPqkfe9WrFgh5cqVSxda+vfvL++9956cP38+W4///fffS7ly5UTkxXPXHnGV9sfI19dX6tSpk6tHLIWHh4ubm5v06tVLkpOT5fHjx/LDDz+Is7OzDBo0KNfafRV/f3+pWLGiRERESKlSpXR2n0+cOFEZP5dZ2h/wn3/+WemZqVWrlnzwwQe5FmQMNRBe2+7t27dl0aJFsmzZMhHR/c2bNWuWODk56W19xHCTy+Li4sTV1VUcHBykdu3a0qJFC2Vg7pYtW8TDw0Pi4uLkjz/+kEGDBim7iERevPHjxo0Te3t7qV+/vixdujTdodnZXbnUq1dPJk+erFyOjo6WNWvWSNGiRaV48eLi6OgoFy9elPv378u4ceOy1UZmZLQCW7hwobi6uuZKt3PaH4J27dpJ9+7dpUuXLvLRRx8pg23//PPPdMv/+uuvyqHq2RUfHy8WFhbSrVs3GTBggBQpUkTKlCkjP/zwg0RHR+vth8JQR5qkrf+LL76QTz/9VEReHI0xbtw4KVasmJQvX16KFy+ut6PAXmfRokVKz1D37t2lVatWym07d+6UFi1avDHcaJ9TRESEuLu7S48ePXQOBBg/frxUrFhRGjduLBs2bJBJkyZJlSpVZOTIkbnwjHTNmzdPPD09lfdT23OkHaP3qmklXiclJUXs7OyU9y7t9Wn/nTJlijRu3FiePn2ql8/tH3/8IWPHjpXDhw9LYGCg/PPPPyLy4iCHzp07y7p165Rlr169mmcD0LVSUlIkKSlJ2rRpI8WLF9dZF5w4cUIsLS2Vw8Az8/3SvmbR0dFiaWkpP/30k4SFhYmXl5e0aNFCRF4cTfTo0SO9PYeMBsJXqlQpTwfCa8cOpe0F126MnThxQmxtbfXW48lwk0vSfpBu3Lgho0ePlgEDBuhMYObp6Sm+vr4i8uLQ3EqVKkmLFi1kzpw5Olvw165dk48//lhKly4t3bp1k/Xr1+foQ3/jxg1xdXWV33//Xblu1KhR4ubmJoMHDxZ/f39p27ZtlrdE3iQrK7ArV67kygpM+75MnTpVqlSpogzwDg8Pl61bt0qtWrXExMREunTpojP4OyQkRKk3u9auXStt27bVmefmyy+/VI4S+/XXX3PcU2WoI03S9v6lpqbKN998I7Vq1ZLIyEhp3769dO3aVZkUsW7dusqKNDekDaS1atWSTZs2iaWlpc7kiG3btpU+ffq88bG071WbNm2kR48eyi7itFvA69evl65du0rJkiXF2dlZ6VrXJ+3cR2nt3LlTjIyM5PDhwzrLibwYkP7NN99kuZ2oqCjp2LGjNGjQQDp27JhuCgbt854/f760adNGL7v3kpOTxcbGRjQajRQtWlQ++eQTqVy5snz44YcybNgwsbS0FI1GI8HBwQaf2+aff/6Rdu3aSfXq1cXV1VU8PDykVq1ayno8q/WNHj1aCTPXrl0TCwsLZZD0nj17ZMaMGXoLOIYeCP/8+XPZunWr9OrVS4yMjMTb21sZCB8dHa0chaYvDDd6pv3yP3nyRG7cuCFbt25NNwHTzZs3ZcKECVKmTBmdXR9Xr15Vdll06dJFVq9erbNl6e/vL+7u7mJjY5OjyfWSk5OlXr16MmnSJImPj5f58+dLmTJllMnkRF7sX65Tp47eJvHLTyuwlJQU6dmzpwwcODDdbRs3bpSiRYtK1apVJSgoKMdtpX0u9+7dk6+++ird87t9+7Y0adJENBpNjndlGOJIk127dun0AoqI/Pvvv1KzZk2xsrKS2rVry/nz5yU1NVWePXsmDg4OOjOS6ot25a3dhRobGyutW7cWExMT8fb2lsjISAkPD5dFixaJhYXFG19r7fv0559/StGiRZWjYNLepqUdjP5yANGXHj16ZHioft++faVKlSoydepUiYqKkqSkJNm2bZuYmprKjRs3RCTrR+2kpKRIQECAeHt7S926deXzzz+Xv/76S7k9KSlJatasKXPnzs3Zk/p/0dHR0rFjR2nSpIl06tRJJk6cKKGhobJq1SqZO3euDBo0SD755BO9tJVZ2vX4w4cPZceOHTJlyhT5+uuvlbEvS5culVGjRknPnj3lzz//VHalZOW1Tk5OlunTp0v37t1FRMTDw0MGDBig3L5s2TJp2bKlXnfNP3/+XFxdXTMcCD9mzJhcHwgv8mLjevXq1VK7dm0pUKCAeHl5iZubm4wYMULpNeeYm3wm7QqvV69eUq1aNXFychKNRiMLFixQbt+7d68MGDBA2SpKTU0VX19fpVszICBAWrVqJR988IH4+vrK7t27dVaaOTntgraGmTNnikajEXt7eylYsKAsWbJE6dYW+d9Wr772f+a3Fdj06dPF0tIy3eSHUVFR0qVLF2X3oL6C1q+//ipdu3aV0qVLy9q1azOccVRfp5nI6yNNvv76a+WH9/Tp00oPSXh4uJw7d0456i8mJkbGjBkj1atX11vbWmkHCZcvX16Z5PL27dvSsWNHMTMzU8YfeXp6Kvv8M2P27NnSvHlzefjwYbrPg/bHYeLEidKzZ89cm+V5woQJSlg5fvy40qt57do1Ze4rW1tbKVOmjFSrVk05iicnPxJPnz6VZcuWSZMmTcTDw0MmTpwojx8/lhUrVkipUqVy/qTSSElJEX9/f+nUqZPUq1dPhgwZohMmteu/vO658fb2Fjc3N+nQoYNUrlxZqlSpkmEN2a3r119/laZNm8rSpUulZMmSylib5ORkcXZ2TrfRkBPaz0Lnzp2VyTxF8m4gfNppRBISEuTixYsydepUqVGjhrJrTksfB7Aw3OiR9sMzbdo0qVGjhpw+fVru378vxsbGyi4X7W6ptLuntLsSGjduLIMHD5bLly9LcnKy/PTTT8quhIkTJ8qpU6f0Wu+FCxdk0aJFOltlIi+OrqhRo0a2urVfJz+twB48eCDNmzeXLl26yO+//65srfz+++9iZ2enl8Gg2i/o5s2bxcLCQry8vMTW1lYqVKggU6dOlaCgIL2Of8nrI01efp+SkpLE2dlZOYov7Wc8JiZG5s6dKxUrVtQZV6YvPj4+MmPGDJk0aZKUKVMmXW2HDh2SBQsWyLp167I8b8fy5cvlvffeUy5n9PncsGGD9OrVS2cDITecOXNGmcZAO7FaQkKCHD16VDZv3izffvutzi5tfXyXwsPDZezYsVK/fn1p1qyZaDQa+fXXX3P8uBl5+vSpLF26VBo1aiT169eXiRMnKgc45BXt93bdunVia2urzIFUtmxZmTdvnoi8WHdmZ0bvs2fPyo8//ihjx46VW7duSWpqqri5uYlGo5GPP/5YIiMj5a+//pLx48dLyZIlc/xcMnr/V65cKcbGxrJ48WKd6/U9ED7tIOJp06aJt7e3tGzZUk6ePKksExMTI0eOHJGBAwdKsWLFpEmTJjq35wTDjZ49f/5cKlWqpJyTY+DAgcr5fJ49eyYDBw5MNydERrsSvv322wx3JeTWFPnaL8E///wj48ePz9bcH5mVH1ZgIi92p9SrV0+cnJykRYsWUrNmTSlXrpxybh59BY/27dsrK0WRF1vh9vb20rBhQ1m2bJlOwNOXvDrSJDU1VQYOHKgcav77779L27ZtxcnJSXx9fZUBzImJibJv3z6dcV76NHXqVDE3N1fmaHr27JnyI5XTH/j9+/eLRqORtWvXphtbpNWxY0cZNmxYjtp5lZfrP3r0qDg5OYm5ubkMHTo0z04se/78eWnTpo2yGyU3pQ1ULVu21On5zivdu3eXKVOmiMiLnt7q1asr4XXNmjUybty4LJ3z6eTJk1KrVi0pW7asODo6irm5uZw4cUISExNlxIgRYmxsLFWrVpXChQtL69at9XLiXu0s07Nnz5bJkyfLDz/8ICEhITJv3jz54IMPpGHDhrJ+/fpcHQiv7fmbPHmyEuTatm2rc1DB/fv3ZefOndKoUSMpX768Xt5rhhs9i4+PFy8vLzl9+rRERESIhYWFzhZW586dZc6cOenulx8mrUpMTFQGEmvn38lNebUC04aU+Ph4CQ0N1RmAmZCQIAsWLJBJkybJkCFDlEOFRXL2o6jdPXH27Fnx8fFJN9fLjRs3pEePHmJubp7jo9EMeaTJywOYM+p1/Prrr7N97rOs+OKLL5SxWy1btpRDhw7pdIXPmDEjWxOUPXnyRNzc3KRixYqyY8cOefz4sc6Z1jds2CCFChXS65EtGXm5q37p0qVSpEgRee+992TRokUSGhqa6wEgOTk5V6dneNn58+elbdu2uTLf1atoX8MRI0bIZ599Jg8fPpQiRYroDIL//PPP5bPPPsvS41auXFnGjRsnoaGhsmfPHrGwsJCPP/5YRF6MD9OO5Tl27JjeegBfnmXaxsZGypYtK926dZPvv/9e+vXrJyVKlJC6devqdSC8dp27bt06KV26tDINRaVKlaRv375Sq1YtsbCwkNGjR+sMSv/vv//SzdCfXQw3epB2hZKQkCBt2rSRQYMGiYeHh84kZceOHRNra2udbvH8NmnV/fv3c3xUUFbl5gos7XvTo0cPqVSpklStWlUcHR11fvRf/uHIyY/Ey/PMFCpUSD799NMMz2G0b9++HL3ehh6o/XKvo6enZ7pexzp16oizs3OunAtI+5ySk5MlLCxMUlNT5dKlS+Lq6iqmpqYyePBg+euvv+TQoUOi0WiyfXjrtWvXxNnZWQoVKiQ+Pj7y008/ye7du+Wzzz6TGjVq6G1w7csy854NHjxYNBqNuLu762VrP7/J60CltXfvXuUUCK1bt1auDw4OlkKFCim96JkZH5J27iCtsmXLiq2trXTp0kXq1Kkj1apVEy8vL6lSpYpeBvW+bpbpihUrSteuXZVev9w463hqaqp06dJF2ZifPXu2Mo5z7969YmpqKhqNRnbt2qX3tkUYbvRKO2lWYGCg1KlTR8zNzWXRokVy584d2b17tzg5OcnQoUNfef/8NmlVXsqtFZh2C2LkyJHi6uoqBw4ckKNHj4pGoxGNRiPOzs7pxhzlVEbzzLz33nvSr18/vc8zkx8Gahuy11H74798+XLZt2+fTk+NdquxRIkSUrVqVfHz88tRW9HR0TJ9+nQpXbq0mJqairm5ubi6uupl2v1X0f5wrl+/Xnx8fKRcuXIyYsQI+euvv3R+kG7cuCEtW7YUjUYjP/74Y67V8y55+vSpfPbZZ6LRaKRVq1ayfft2GTVqlDRs2FDZNZeZYKOdO+iTTz5RNnx+/vlnsbS0lO+++052794tBw8elOXLl8vMmTNlxYoVeqn/VbNMx8XFybRp08TExES+/fZbEcneiSlfJTY2VkJDQ0XkRc/u9u3bJSEhQVxcXJTTvERHR0vv3r11jkjV98YXw002ad8IbRfamjVrxNjYWDm029/fX9zc3KRatWpiY2Mjjo6O4uvrq/yw5fdJq9QkMjJS7OzslKPRunfvLm3atJFDhw5JmTJllDNE6yN0vGqemZUrV+baPDOGGqht6F5H7Qp537594ujoKNu2bdOZWkFr3bp1cvToUb2GysDAQLl3716WzyieFdp6//77b7Gzs5P+/fvL2rVrRaPRSNmyZeWrr76SS5cu6WwUTJkyRVxcXPR6otl3gfa1TkxMlMePH+uMB9m+fbtUq1ZNqlatKrVq1ZIFCxYor3lmwk3auYM6d+4s27dvl9KlS8uGDRuUZfT93czKLNP6tG/fPvn000/FyclJaSsuLk4SEhKkUaNGygmIQ0JCpEyZMnrbBZURhpscOH/+vDg5OcmPP/4oNjY26Q4vTU1Nld27d0tgYKCcP39e+SIYelfCu2bXrl3y8ccfS0pKigQHB0upUqWUMSBDhgyRNm3a6Az4zQlDntHYkAO1DdnrqD36TOvgwYPSuXNnZTBobsqL72e9evVk1KhRIvJio6hUqVIybtw4MTMzE09PT1m0aJEy3mf79u1SoUIFrjeyIO0g8f79+4uzs7NUqFBBvL29deb5+u+//zI8hUlmpJ07qGLFilKsWDE5fvy4cntycrLeek8MNct0UlKSVK1aVebOnZvuIImUlBT57LPPpGDBgvLpp59KzZo1pWvXrjr16BvDTQ6Eh4eLj4+PFClSRKysrGTr1q2Z2mLSJvn8MueL2mlPCpeQkCCLFi2SFi1aKCuplStXyuDBg9N98XPC0IPDc2ugdn7sdTx48KBUqVJFqW3BggVSvnx56dChgxgZGeXqqUPywpkzZ8TNzU35sahataoyhmHEiBFiZGQkDg4OyvKBgYHK6V0oaxYsWCD29vYyZ84cWbx4sXKqgC+++EJvbTx9+lRWrFghjRo1koYNG8rXX3+tnF9OXwwxy7TIiyODGzRo8Mp16OPHj2XmzJnSqlUrGT9+vLIOZrjJx8qWLSt16tSRcuXKyeeffy4BAQHKvv/w8HBp2rRpuvEk+WnOl3fJ5s2bxcrKSq5evSp3796VSpUqKWc3zulrbejdNC/LjYHa+a3X8fLly8p7OGbMGPHw8JAffvhBRF6c96lPnz65NrGevmlX8nfu3FEmQnzw4IFy7rHdu3dL7dq15c6dOyIisnv3blm8eLEy9ia3fiTUSnuUm3b30FdffaVz+oE7d+7IwoULxd7eXooVKyaLFi3SW9u5faRoXs8yHRkZKVWrVn3t4OCkpCT58ssv5cmTJ0rAys3PLMNNDmj372snzVq+fLlUq1ZNatasKdOmTZPdu3dL+/btX3t21fwy54saZfTFiYmJkebNm4tGo5HKlSuLm5ubcps+Vy75ZXC4vgdq57dex6dPn8qIESOU05Ls379fOYz2008/Tdc1/zZwd3cXNzc3WbRokTx8+FD5HB88eFCqV6+uBJ8RI0ZI06ZNlftxQyhr/vrrL+ndu7fY2tqKh4eH9OvXT2bMmCEi/3stk5KS5NKlS9K/f39p166d3mvI7UPd82qW6Vu3bumEm4w+i9euXZMGDRrIv//+q7d2X4fhJhu0K5vExERJSkrSObT76dOnMmbMGKlYsaLUqlVLatWqpXMCxlfJD5NWvc20r9WlS5eUgcPa69OeqFLkxbmHduzYIV9//bWyyyQnW/f5aTdNXshvvY4xMTFy7do1pUfj6dOnsmPHDilcuHCeTXCnLxcuXBBTU1OpVKmSeHt7y6effirbtm2TxMREiYiIEBsbG/nggw+kbdu2UqhQIWXcVm6d6V3toqKiZNeuXdKmTRuxtrYWJyenDNfX8fHxSmjW92udF4e65/Ys01FRUWJhYSELFizQuT7tOuDatWvi6uqaa6d3eJlGRASULaNGjcKBAwdgY2ODChUqwMfHB/Xr1wcA3Lp1C2FhYShfvjxKlSqV6ccMCQnBV199hUqVKmHu3Lm5VbpqDRgwAKdOnUK7du3Qq1cvVKxYEQCQmpoKjUYDjUYDAPj8889hamqKH374IUftpaSkoFSpUoiKikKRIkXQsmVLBAUFoUiRIqhfvz5WrFiBJ0+e4Ny5c6hVq5bSvho8e/YMa9euxcaNG5GcnIwmTZqgT58+cHR0zPW2w8LCcOzYMRQvXhz169eHmZkZTExMAAC//PIL1q1bBzc3N0yZMiXXa9GnpKQkTJ06FUuWLIGXlxcePXqER48ewdXVFUOGDEHhwoUxefJkpKSkoFWrVujcuTNSU1NhZGRk6NLfKiKi8128e/cu9u3bh/nz5+PevXsYM2YMxo4da8AKc0dISAgmTJiAIkWKYN26dXp97H79+iEgIADr169H3bp1UaBAAZ3bBwwYgFu3buHAgQN6bfdVGG6ySPulWLp0KaZMmQI/Pz9ER0fj8uXLiIqKgqenJwYPHgwHB4dst5GSkoKEhAQUKlRIj5W/Gx48eIClS5fiwIEDMDc3h7e3N3r27AkrKysAL96/w4cPo3nz5ggJCUHNmjVz9OPw8OFD9O/fH48fP0bRokVRvXp19O/fHwcPHsSjR49w/fp1PHr0CBs2bNDn08xXIiIisGDBAhw/fhyWlpZo1aoVBg8erPcgl5ycDBMTE+zfvx9jx47F06dPERoaCjc3N/Tq1QstW7ZEyZIlcenSJfz333/w9vbWa/u5Le0P7qRJk5CYmIiBAwdiy5Yt2LZtGwoUKIB27dqhT58+KFKkSIb3o8zRfuePHz+OoKAgDB06FElJSbhy5Qq2bNmC1atXw9LSElOmTEHnzp0NXa5e5dbvS2BgINq3bw8rKyuMHz8enp6eqFChAp48eYKVK1di8uTJCAwMRPXq1ZGSkgJjY2O9tp9OnvQPqUTaLrYhQ4boTLb0559/ypgxY6R+/fri4eEhs2fPNkSJ9P/+/fdf6dOnj9StWzfdEQMuLi7KzNH66GLOb7tpDCWvpsp3dHRUznr97bffipGRkTLRmr+/v96O/jAEbe1BQUFSuXJl6d69uyQnJ8uZM2ekf//+UrduXXF3d8+T01moVdrvfJ8+faR37946t8fFxcmRI0ekb9++otFoZPfu3Xld4lvrxo0b0rp1a9FoNFKpUiV5//33pVixYlKnTh1ZuHChiOTdwHf23GSBNu3//vvvWL16NZo2bQo/Pz/l9sTERBw8eBA///wzbGxssGjRIgNWS6mpqTh8+DB++OEH3L9/H87OzihUqBAWL16Mhw8fwszMTK9d+obcTZNf5NZWofZ9WrZsGRYvXozz58/jyZMnqFChAtatWwcLCws0b94cz549w9SpU/HVV1/ptf3cduXKFVSpUkXnuvDwcAwdOhTNmjVD//79AQC//vorTpw4gYULFxqizLdeQkICzMzMlMu//fYbvvnmGwQFBaXr/Xrw4AFCQkLQtGnTvC7zrfb06VP89ddfWLNmDUxNTVG6dGn4+voqwzMkr3oa8yRCqUhcXJy0bt1aSpQoIa6urhnOsHj//n15/PixAaqjjGiPGGjatKloNBpl0FtuHSLMweH6lXaStQULFijzvHz11VfSvHlzSUxMlNjYWGnfvr2MHz8+2+ePymvaz8ShQ4fE1tZWKlSoIMOHD5fPP/9c5syZI6dOnZLPPvtMHB0ddU7omheH0arRL7/8IhUrVtSZGfju3btSuXJluXHjRrrl/f39lf/z+5tzef0achRaFqSmpsLCwgITJkyAr68vnj9/jv79+2PevHl4+PChspytrS2sra0NWCmlVbBgQQwYMADr1q3DwoULMWTIEABQBqDqW8mSJTFz5kwsXrwYBQoUwO3btzkmIgeGDh2KLVu2IDk5GT179kSjRo2QkpKC//77D++//z6MjIxgaWkJU1NTeHh4wMnJydAlZ4r2M7Fy5UrExcWhUKFCuHHjBqpWrYpNmzZh6tSpuH//Pm7fvo3r168DeLEO0o5V4CDirLGysoKrqyumT5+O9u3bIzAwEGXKlIGtrS3Onz+P8+fPY9asWejQoQPs7e2xatUq5b78/uZcXr+G3C2VCdrBT6GhobC3t1fepL1792Lbtm34559/UKZMGXTs2BGfffaZgaulzMirI0w4ODxnfvjhB3z55Zdo1qwZKleujF69esHFxQUAMHjwYBw/fhwrVqzAyZMnMWbMGNy4cSNLRyfmB9HR0Vi8eDGCgoKQnJwMb29v9O/fH9HR0RARXLhwAZ6engwzenDnzh3s378fO3fuxLVr19C2bVucOnUKt2/fhpWVFczNzeHu7o527drB1dUVRYoU4dFobymGmyzo2LEjzp49i1mzZuHjjz8GAMTExGDr1q3Yv38/zp49ixUrVqBx48YGrpRIHVavXo2+ffvCxcUFJUuWRHx8PBo1aoSePXsqRw8FBQWhatWq6NWrF0aPHm3okrPt8uXL+O6773D+/Hk4OjqiZ8+eaNu2rXI7f2SzT14a53Hu3Dns27cP/v7+uHz5MhwcHLBr1y6dYPzyfejtwnCTSUlJSdizZw92796NAwcOoEaNGpg6dSpcXV0BvBgQePToUQwYMMDAlRKpy/Lly7Ft2za0adMGV69exalTp1CyZEn4+PjA29sbN27cgLW1NcqUKWPoUnNMOwh+4cKFiIyMxAcffICePXvCzc3N0KW91TIKKs+ePUNgYCD27duHo0ePolixYvDx8UH37t0NVCXpE8NNFoWFheHw4cPYuHEjzp8/j65du2LixIkoVqyYoUsjUpWkpCQUKFAADx48wJgxY6DRaLB8+XIcOXIES5YsQWhoKKpXr47OnTujTZs2hi5Xr549e4Z169Zhy5YtCAsLwy+//II6deoYuqy3Utpgc+bMGZw8eRK1atWCp6cngBdHRf3xxx/YtWsX9u/fj99++w0eHh4GrJj0geHmNV7XDXzx4kUsXboUixcvhqWlJVatWoVOnTrlcYVE74aIiAh06NABVatWVWZ9XrduHdasWQN3d3fVHhodHh6OLVu2KIPgKeu0YyZnz56N+fPno2DBgrh9+zY+/PBDzJkzRwkyV65cwYULF1Q3ad+7iuHmDe7cuYNevXphzJgx8PLy0rnt2rVr6NmzJz788EOMGTPmrRvISJQfHTlyBP7+/vDy8oKZmRmKFCmC6tWr46+//sJ3332Hdu3aKbsOrl27BisrK9jZ2Rm46tzHMTfZFxsbC3t7e6xevRoffPABHj9+jEmTJmHPnj345JNPMHPmTNjb2yvLc7zN24/h5g0OHz6MadOmITIyEh9++CHGjRuHSpUqAXjRbd6jRw8MGDAATZo0MXClRG+/d/lcXaR/2kB4//59zJw5EzNnzkTBggUBvDidx549ezBlyhQEBwdj+/btaN++vWELJr1huMmEixcv4sCBA9ixYwcePXqETp06oVOnTtizZw/mzJmDBw8e5P55MojeATxXF+nbhQsX0Lx5cxgbG2PHjh1wdXXV6QWLiYnB6tWr0aNHDxQvXtzA1ZK+MNxkQXBwMH799Vf8/vvv+Oeff+Dk5IRhw4ahR48ehi6NSDVSU1Nx8OBBLF++HPfu3YOrqyv8/PxQuXJlAP8baMxdB5QZ169fx8SJE7F3717UqVMHy5cvR8WKFQGk3/3Ez5R6MNy8RDv4THuI4J49e+Ds7IxmzZqhVatWKFSoECIiIhAZGQlra2vlS0JE+sVzdZG+xMTE4M8//8SkSZMQFBSEL7/8EtOnT9c5zxSpC8NNGtquysePH6NGjRqoUaMGatasiT///BNPnz6Fu7s7Jk+eDFtbW0OXSvTOiIiIwIIFC3D8+HFYWlqiVatWGDx4MLew6Y20PTHajdbnz59j9erVmDFjBpKSkvDVV1/hiy++MHSZlAsYbtLQfhH69euHiIgI7NixQzn/0OrVqzF27Fi0aNECa9eu5ZELRHksJCQEX331FSpVqoS5c+cauhzKp7RB5vDhw9i1axeOHTsGJycnfPjhh+jSpQuKFy+OW7duYfbs2bh16xb27dtn6JIpFzDcvOTp06fo2LEjXFxcMG3aNCQmJsLU1BQAsGvXLgwaNAinT5/mYd9EBsBzddHraDc6w8LC4OTkhEaNGqF06dK4evUq4uPjUblyZUycOBGOjo5ITExEamoqzM3NlUBE6pE7p0V+S6WmpqJQoUKoWbMmjh49CgAwNTVFUlISTExMUL16dZiamuLKlSsMN0QGYGxszGBDr6TtTR8+fDiaNm2KDRs2wMjICM+ePcMvv/yCmTNnonDhwli4cKGy0QqAwUaFuF8FQHx8PO7du6d8Mdq3b4/z58/Dy8sLYWFhKFCgAJ48eYKjR4/iyZMnyrTdRESUf6SmpuLx48eIiopC7dq1YWRkhJSUFBQsWBD9+/fH1KlTsXXrVkRERBi6VMpl72y4SU1NBQD8888/GDZsGBo2bIh79+4BABo0aIADBw7g6dOncHBwgJeXFxo3boxp06Zh3rx5hiybiIj+n3ZURVxcHKKjo2FkZKTMaL1v3z4kJCTA2NhYWd+7uLgop18gdXtnw422l8bX1xfW1tbYsGEDSpcurXwJ3NzcsGHDBmzZsgVlypSBt7c3Vq9ezTPGEhHlE9oj5qZPn44OHTpg48aNAIDevXvjzJkz6Nq1K+7evQsjIyPExcVh3759SE5ORt26dQ1ZNuWBd3JAsXbQ2bJlyzBjxgyEhITA2tra0GUREVEWpaamYsWKFThw4ADCwsJQvXp1jB49GikpKfDz88Px48fRpEkT3LlzB0lJSZg3bx68vb2RnJysHA1L6vNOhhstDw8PtGvXDiNHjkx3m/aw8G+++Qa+vr6wsbExQIVERJQZoaGh2LhxIwICAhAfH49mzZqhffv2iI2Nxc6dO2Fvbw9XV1c0bNjQ0KVSHngnY6uIICYmBikpKUq35svTbms0GkRFRWHv3r2oV68emjVrZqhyiYjoDcqWLYsxY8YoR0kdPXoUp06dQu/evTF79myd2Yh5mgX1eyfH3Gg0GhQpUgQxMTG4e/euch3wvwFqAGBmZgZzc3M8ffrUIHUSEVHmaNfdLi4umDdvHkaNGoUyZcrg+++/R/fu3bFr1y5lWQYb9Xsnw432S9CjRw+sWLECGzduxLNnzwDofuh/+uknhIWFwdvb2yB1EhFR5ry8gdq2bVssWLAAAwYMwPPnz7Fw4UIEBAQYskTKQ+/0mJvLly+jc+fOePjwIYYOHYoWLVrAyckJALB+/XqMHDkSCxYsQNeuXQ1bKBERZUnaXU/Xr19H3759ISLw9/eHubm5gauj3PZOhxsAePjwIQYMGIDt27ejQoUKKFSoEJ48eQIjIyN06tQJs2bNMnSJRESUTdqQ8/fff6Nnz57Yt28fzyz/DngnBxRrpaSkoFixYti6dStOnTqFFStWIDU1FVZWVvD19UWFChUMXSIREeWAtvfm9OnTqFixIoPNO+Kd77l5HY6oJyJSh5SUFMTHx8PKysrQpVAeeGfDzcvBRXtWWAYaIiKit9s7G26A/42qZ5ghIiJSj3dizI22VyYiIgJXr17FxYsX4eTkBHd3d0OXRkRERHqm+nluUlNTYWxsjOfPn6N3797o1asXDhw4gAYNGmDOnDk6y77DnVhERESqofpwo+Xr64vExEQEBwdj0qRJKFiwID788EMAwMWLFwFw9xQREZEaqD7cGBkZITIyEoGBgfjmm29gZWWF8ePHo1OnTvD09ERsbCx++uknbN26lT03REREKvBOjLkxNTVFkSJFYGRkhGPHjuHvv//GmTNnALzYFRUSEgInJyf23BAREanAOxFurK2tUaNGDezYsQM7duzA4MGDUa5cOQDAzp07cfnyZfTs2dPAVRIREZE+qD7caOet6dq1KwYMGIB79+7B3t4eR44cwdWrVzFjxgxMmjQJRkaq30NHRET0TlDlPDepqalKWImNjVVmpLxx4wYGDhyIkJAQmJqawsrKCt27d8eYMWMMWS4RERHpkerCTXJyMkxMTBAXF4dJkybhzJkzMDIywoQJE9C8eXMAwLlz52Bubo7ixYvD1tbWwBUTERGRPqkm3Lx82oRu3brh0qVLaNKkCe7evYsdO3agefPmmDt3LmrUqGHASomIiCg3qWagSe/evTFs2DAAQGJiIi5evIjdu3djwYIF2Lp1Kw4dOoQnT57AxcUFX3zxBR4+fGjgiomIiCg3qCLcJCcno2rVqtiwYQPKli2LLVu2wNPTE48fPwbwYnI+T09PBAQEYMmSJVi+fDnWrVtn2KKJiIgoV6hmt1RqaiquX7+O+fPnY82aNXj27BkWL14MX19fALq7raKiolCiRAlDlktERES5RBXhJm1wERGcPHkSCxcuxJYtW+Dj44O5c+eiePHi6ZYlIiIi9VHFbiltWBk3bhw2bNiA+vXrY/ny5di4cSP+/vtvODg44LvvvtNZloiIiNTpre250fbAHDp0CNeuXYOrqytcXV0RGBiIevXqKcvdu3cPP//8M2bNmoXChQvjypUrsLS0NGDlRERElJve2nCj5ePjg/PnzyM6OhoVK1bEkSNH0i2TmpqKixcvIjg4GD4+PnlfJBEREeWZt3631Nq1a9G2bVuEh4cjLi4Oo0ePxvHjx3WWuXnzJooVK8ZgQ0RE9A5463tuAODPP/9ESEgIIiMjsXPnTlhbW8PLywve3t6oWrUqSpUqhWHDhmH06NGGLpWIiIhymSrCTVrnzp3DDz/8gAsXLqBQoUJITEzE48ePcfnyZUOXRkRERHlAdeFGa+/evQgICEDx4sXx0UcfoU6dOoYuiYiIiPKAasMNwDltiIiI3kVv/YDi12GwISIieveoOtwQERHRu4fhhoiIiFSF4YaIiIhUheGGiIiIVIXhhoiIiFSF4YaIiIhUheGGiN5KkydPhpOT02uXuXXrFjQaDYKDg/OkJiLKHxhuiCjf0Wg0r/3r1asXRo4ciUOHDin36dWrF9q3b2+4ooko3zAxdAFERC8LDw9X/r9582Z8/fXXuHLlinJdwYIFYWFhAQsLC0OUR0T5HHtuiCjfKVmypPJnbW0NjUaT7rq0u6UmT56Mn3/+GTt37lR6d44cOZLhY1+6dAkfffQRLCwsYGdnhx49eiAqKirvnhwR5TqGGyJ6640cORJdu3ZFy5YtER4ejvDwcLi7u6dbLjw8HI0aNYKTkxPOnDmD/fv34/79++jatasBqiai3MLdUkT01rOwsEDBggWRkJCAkiVLvnK5JUuWoE6dOpgxY4Zy3apVq2Bvb4+rV6+icuXKeVEuEeUyhhsiemcEBQXhjz/+yHCszvXr1xluiFSC4YaI3hmpqalo27YtZs+ene62UqVKGaAiIsoNDDdEpAqmpqZISUl57TJ16tTBtm3b4OjoCBMTrv6I1IoDiolIFRwdHRESEoIrV64gKioKSUlJ6Zbx8/PDw4cP8cknn+Dvv//GjRs3cODAAfTp0+eNwYiI3h4MN0SkCv3790eVKlXg4uICGxsbBAYGplumdOnSCAwMREpKClq0aIGaNWviyy+/hLW1NYyMuDokUguNiIihiyAiIiLSF26qEBERkaow3BAREZGqMNwQERGRqjDcEBERkaow3BAREZGqMNwQERGRqjDcEBERkaow3BAREZGqMNwQERGRqjDcEBERkaow3BAREZGq/B+a9qLUBQOj8AAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "# plot suvival rates by title\n",
    "sns.barplot(x='Title', y='Survived', data=train_data, order=title_survival.index)\n",
    "plt.xticks(rotation=60)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
